// <auto-generated />
using System;
using HomeCleaning.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeCleaning.Persistance.Migrations
{
    [DbContext(typeof(HomeCleaningContext))]
    partial class HomeCleaningContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeCleaning.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("HomeCleaning.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("HomeCleaning.Domain.CleaningCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CleaningCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Home Cleaning"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Empty Home Cleaning"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cleaning after construction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Villa Cleaning"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Office Cleaning"
                        });
                });

            modelBuilder.Entity("HomeCleaning.Domain.CleaningOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CleaningCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CleaningCategoryId");

                    b.ToTable("CleaningOption");
                });

            modelBuilder.Entity("HomeCleaning.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("HomeCleaning.Domain.SpaceSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CleaningCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CleaningCategoryId");

                    b.ToTable("SpaceSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CleaningCategoryId = 1,
                            Name = "1 + 1"
                        },
                        new
                        {
                            Id = 2,
                            CleaningCategoryId = 1,
                            Name = "2 + 1"
                        },
                        new
                        {
                            Id = 3,
                            CleaningCategoryId = 1,
                            Name = "3 + 1"
                        },
                        new
                        {
                            Id = 4,
                            CleaningCategoryId = 1,
                            Name = "4 + 1"
                        });
                });

            modelBuilder.Entity("HomeCleaning.Domain.Address", b =>
                {
                    b.HasOne("HomeCleaning.Domain.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("HomeCleaning.Domain.CleaningOption", b =>
                {
                    b.HasOne("HomeCleaning.Domain.CleaningCategory", "CleaningCategory")
                        .WithMany()
                        .HasForeignKey("CleaningCategoryId");
                });

            modelBuilder.Entity("HomeCleaning.Domain.Order", b =>
                {
                    b.HasOne("HomeCleaning.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("HomeCleaning.Domain.SpaceSize", b =>
                {
                    b.HasOne("HomeCleaning.Domain.CleaningCategory", "CleaningCategory")
                        .WithMany()
                        .HasForeignKey("CleaningCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
