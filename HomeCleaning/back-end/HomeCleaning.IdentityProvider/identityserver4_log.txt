2019-10-01 11:08:53.970 +02:00 [INF] Starting host...
2019-10-01 11:08:54.261 +02:00 [INF] Starting IdentityServer4 version 3.0.1.0
2019-10-01 11:08:54.279 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-10-01 11:08:54.285 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-10-01 11:08:54.285 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-10-01 11:08:54.286 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-10-01 11:08:54.286 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-10-01 11:08:54.286 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-10-01 11:08:54.286 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-10-01 11:08:54.960 +02:00 [DBG] Login Url: /Account/Login
2019-10-01 11:08:54.965 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-10-01 11:08:54.965 +02:00 [DBG] Logout Url: /Account/Logout
2019-10-01 11:08:54.966 +02:00 [DBG] ConsentUrl Url: /consent
2019-10-01 11:08:54.966 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-10-01 11:08:54.966 +02:00 [DBG] Error Url: /home/error
2019-10-01 11:08:54.966 +02:00 [DBG] Error Id Parameter: errorId
2019-10-01 11:08:55.011 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:08:55.032 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:09.547 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:09.547 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:09.569 +02:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-10-01 11:09:09.581 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:09.583 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:12.187 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-10-01 11:09:12.189 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:12.189 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:14.447 +02:00 [DBG] Augmenting SignInContext
2019-10-01 11:09:14.449 +02:00 [DBG] Adding idp claim with value: local
2019-10-01 11:09:14.449 +02:00 [DBG] Adding auth_time claim with value: 1569920954
2019-10-01 11:09:14.453 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 11:09:14.465 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-10-01 11:09:14.518 +02:00 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","DisplayName":"bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000005-0006-f900-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:09:14.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-10-01 11:16:52.347 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 11:16:52.353 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:16:52.353 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:16:52.357 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 11:16:52.361 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 11:16:52.361 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 11:16:52.363 +02:00 [DBG] Start discovery request
2019-10-01 11:16:52.539 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-10-01 11:16:52.544 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-10-01 11:16:52.544 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-10-01 11:16:52.546 +02:00 [DBG] Start authorize request
2019-10-01 11:16:52.551 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:16:52.555 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 11:16:52.572 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:16:52.592 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 11:16:52.651 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 11:16:52.671 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"cca276bd73224ae8b0f583e270f89491","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"y2RSyK9CzXwWkITzS9JM7A","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"cca276bd73224ae8b0f583e270f89491","code_challenge":"4CNuR6-NnsTJVRbU6zq30N8k33RpuqFJBb2aVwLPRIc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 11:16:52.774 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-01 11:16:52.774 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-01 11:16:52.775 +02:00 [INF] Showing consent: User has not yet consented
2019-10-01 11:16:52.860 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 11:16:52.860 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:16:52.860 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 11:16:52.861 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 11:16:52.865 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:01.101 +02:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-10-01 11:17:01.173 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 11:17:01.174 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:01.174 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 11:17:01.176 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 11:17:01.180 +02:00 [INF] {"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"80000072-0000-fd00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:17:01.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-10-01 11:17:01.215 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:01.292 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-10-01 11:17:01.293 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-10-01 11:17:01.293 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-10-01 11:17:01.296 +02:00 [DBG] Start authorize callback request
2019-10-01 11:17:01.325 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:17:01.325 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 11:17:01.325 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:01.326 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 11:17:01.326 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 11:17:01.327 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"cca276bd73224ae8b0f583e270f89491","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"y2RSyK9CzXwWkITzS9JM7A","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"cca276bd73224ae8b0f583e270f89491","code_challenge":"4CNuR6-NnsTJVRbU6zq30N8k33RpuqFJBb2aVwLPRIc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 11:17:01.349 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-01 11:17:01.349 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-01 11:17:01.355 +02:00 [INF] User consented to scopes: ["openid","profile","backend"]
2019-10-01 11:17:01.357 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2019-10-01 11:17:01.360 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:17:01.380 +02:00 [DBG] Creating Authorization Code Flow response.
2019-10-01 11:17:01.411 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****M8ck","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000074-0000-fd00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:17:01.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 11:17:01.414 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"cca276bd73224ae8b0f583e270f89491","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-10-01 11:17:01.427 +02:00 [DBG] Augmenting SignInContext
2019-10-01 11:17:01.428 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-10-01 11:17:02.394 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 11:17:02.395 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:17:02.396 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:17:02.396 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 11:17:02.397 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 11:17:02.397 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 11:17:02.398 +02:00 [DBG] Start discovery request
2019-10-01 11:17:02.432 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-10-01 11:17:02.433 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:17:02.433 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:17:02.434 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-10-01 11:17:02.440 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-10-01 11:17:02.440 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-10-01 11:17:02.445 +02:00 [DBG] Start token request.
2019-10-01 11:17:02.448 +02:00 [DBG] Start client validation
2019-10-01 11:17:02.455 +02:00 [DBG] Start parsing Basic Authentication secret
2019-10-01 11:17:02.458 +02:00 [DBG] Start parsing for secret in post body
2019-10-01 11:17:02.458 +02:00 [DBG] client id without secret found
2019-10-01 11:17:02.459 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-10-01 11:17:02.459 +02:00 [DBG] Secret id found: frontend
2019-10-01 11:17:02.459 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:02.460 +02:00 [DBG] Public Client - skipping secret validation success
2019-10-01 11:17:02.460 +02:00 [DBG] Client validation success
2019-10-01 11:17:02.461 +02:00 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000086-0004-fa00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:17:02.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-10-01 11:17:02.464 +02:00 [DBG] Start token request validation
2019-10-01 11:17:02.485 +02:00 [DBG] Start validation of authorization code token request
2019-10-01 11:17:02.515 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-10-01 11:17:02.527 +02:00 [DBG] Validation of authorization code token request success
2019-10-01 11:17:02.533 +02:00 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"bprdG1ceXQ30vr0tL_bBNmBtAMauBrznkuSmauPM8ck","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"bprdG1ceXQ30vr0tL_bBNmBtAMauBrznkuSmauPM8ck","redirect_uri":"http://localhost:8080/callback","code_verifier":"e99a9e2f69444b33b06d2fe94a3f9c4894c2420ad1814105a68e6836e785fc8e9f81f4974fd14278a300ce0acc6ac85b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-10-01 11:17:02.541 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:02.556 +02:00 [DBG] Getting claims for access token for client: frontend
2019-10-01 11:17:02.557 +02:00 [DBG] Getting claims for access token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:17:02.726 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:02.732 +02:00 [DBG] Getting claims for identity token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9 and client: frontend
2019-10-01 11:17:02.733 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-10-01 11:17:02.737 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****OujA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vVIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000086-0004-fa00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:17:02.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 11:17:02.737 +02:00 [DBG] Token request success.
2019-10-01 11:17:02.750 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 11:17:02.751 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:17:02.751 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:17:02.756 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 11:17:02.756 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:17:02.756 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:17:02.757 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-10-01 11:17:02.758 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-10-01 11:17:02.758 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-10-01 11:17:02.762 +02:00 [DBG] Start userinfo request
2019-10-01 11:17:02.764 +02:00 [DBG] Bearer token found in header
2019-10-01 11:17:02.823 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:02.827 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:17:02.833 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-10-01 11:17:02.835 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1569921422,"exp":1569925022,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"a439dbae-61f1-44c6-8c98-d8abc52930c9","auth_time":1569920954,"idp":"local","name":"Bob Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-10-01 11:17:02.839 +02:00 [DBG] Creating userinfo response
2019-10-01 11:17:02.846 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:17:02.847 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:17:02.852 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-10-01 11:17:02.852 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:17:02.861 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-10-01 11:17:02.861 +02:00 [DBG] End userinfo request
2019-10-01 11:17:02.885 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 11:17:02.885 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 11:17:02.886 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 11:17:02.887 +02:00 [DBG] Rendering check session result
2019-10-01 11:17:18.739 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 11:17:18.744 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 11:17:18.744 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 11:17:18.744 +02:00 [DBG] Start discovery request
2019-10-01 11:17:19.242 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-10-01 11:17:19.246 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-10-01 11:17:19.247 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-10-01 11:17:19.249 +02:00 [DBG] Start key discovery request
2019-10-01 11:19:21.326 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:43.499 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 11:35:43.500 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:35:43.501 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:35:43.502 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 11:35:43.504 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 11:35:43.504 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 11:35:43.504 +02:00 [DBG] Start discovery request
2019-10-01 11:35:43.541 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-10-01 11:35:43.542 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-10-01 11:35:43.542 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-10-01 11:35:43.542 +02:00 [DBG] Start authorize request
2019-10-01 11:35:43.542 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:35:43.543 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 11:35:43.543 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:43.543 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 11:35:43.544 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 11:35:43.545 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"3106068e50d5444aa16995f179341fbf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"y2RSyK9CzXwWkITzS9JM7A","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"3106068e50d5444aa16995f179341fbf","code_challenge":"kh5UHdrCFgXUWf_yLq3UDZszf-F0XD9YhjHj9eGB2Wg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 11:35:43.570 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-10-01 11:35:43.570 +02:00 [DBG] Creating Authorization Code Flow response.
2019-10-01 11:35:43.571 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****LC2Y","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000084-0000-fd00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:35:43.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 11:35:43.571 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"3106068e50d5444aa16995f179341fbf","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-10-01 11:35:44.828 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 11:35:44.829 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:35:44.829 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:35:44.830 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 11:35:44.843 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 11:35:44.844 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 11:35:44.844 +02:00 [DBG] Start discovery request
2019-10-01 11:35:45.057 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-10-01 11:35:45.058 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:35:45.058 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:35:45.059 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-10-01 11:35:45.060 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-10-01 11:35:45.060 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-10-01 11:35:45.061 +02:00 [DBG] Start token request.
2019-10-01 11:35:45.061 +02:00 [DBG] Start client validation
2019-10-01 11:35:45.061 +02:00 [DBG] Start parsing Basic Authentication secret
2019-10-01 11:35:45.061 +02:00 [DBG] Start parsing for secret in post body
2019-10-01 11:35:45.062 +02:00 [DBG] client id without secret found
2019-10-01 11:35:45.062 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-10-01 11:35:45.062 +02:00 [DBG] Secret id found: frontend
2019-10-01 11:35:45.062 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:45.062 +02:00 [DBG] Public Client - skipping secret validation success
2019-10-01 11:35:45.062 +02:00 [DBG] Client validation success
2019-10-01 11:35:45.063 +02:00 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000092-0004-fa00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:35:45.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-10-01 11:35:45.063 +02:00 [DBG] Start token request validation
2019-10-01 11:35:45.064 +02:00 [DBG] Start validation of authorization code token request
2019-10-01 11:35:45.065 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-10-01 11:35:45.074 +02:00 [DBG] Validation of authorization code token request success
2019-10-01 11:35:45.074 +02:00 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Y2fi2uIECh9pV1yIzk0_wHccWdfiO_YawUin_miLC2Y","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Y2fi2uIECh9pV1yIzk0_wHccWdfiO_YawUin_miLC2Y","redirect_uri":"http://localhost:8080/callback","code_verifier":"c2e216d92f3f47a08c435f2f402a096624f26cc1e82a4ccf90e33e82836085b8693e348ea2964f60b4f058b62d1b4819","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-10-01 11:35:45.075 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:45.075 +02:00 [DBG] Getting claims for access token for client: frontend
2019-10-01 11:35:45.075 +02:00 [DBG] Getting claims for access token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 11:35:45.087 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:45.087 +02:00 [DBG] Getting claims for identity token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9 and client: frontend
2019-10-01 11:35:45.087 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-10-01 11:35:45.089 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****TdCw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zbYw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000092-0004-fa00-b63f-84710c7967bb","TimeStamp":"2019-10-01T09:35:45.0000000Z","ProcessId":37724,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 11:35:45.090 +02:00 [DBG] Token request success.
2019-10-01 11:35:45.119 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 11:35:45.119 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:35:45.120 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:35:45.127 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 11:35:45.127 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 11:35:45.127 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 11:35:45.127 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-10-01 11:35:45.128 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-10-01 11:35:45.128 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-10-01 11:35:45.129 +02:00 [DBG] Start userinfo request
2019-10-01 11:35:45.129 +02:00 [DBG] Bearer token found in header
2019-10-01 11:35:45.130 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:45.130 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 11:35:45.135 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-10-01 11:35:45.136 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1569922545,"exp":1569926145,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"a439dbae-61f1-44c6-8c98-d8abc52930c9","auth_time":1569920954,"idp":"local","name":"Bob Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-10-01 11:35:45.136 +02:00 [DBG] Creating userinfo response
2019-10-01 11:35:45.137 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:35:45.137 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:35:45.137 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-10-01 11:35:45.137 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 11:35:45.143 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-10-01 11:35:45.143 +02:00 [DBG] End userinfo request
2019-10-01 11:35:45.162 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 11:35:45.162 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 11:35:45.162 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 11:35:45.162 +02:00 [DBG] Rendering check session result
2019-10-01 14:38:03.501 +02:00 [INF] Starting host...
2019-10-01 14:38:03.901 +02:00 [INF] Starting IdentityServer4 version 3.0.1.0
2019-10-01 14:38:03.915 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-10-01 14:38:03.918 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-10-01 14:38:03.918 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-10-01 14:38:03.918 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-10-01 14:38:03.918 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-10-01 14:38:03.919 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-10-01 14:38:03.919 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-10-01 14:38:04.747 +02:00 [DBG] Login Url: /Account/Login
2019-10-01 14:38:04.750 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-10-01 14:38:04.750 +02:00 [DBG] Logout Url: /Account/Logout
2019-10-01 14:38:04.750 +02:00 [DBG] ConsentUrl Url: /consent
2019-10-01 14:38:04.750 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-10-01 14:38:04.750 +02:00 [DBG] Error Url: /home/error
2019-10-01 14:38:04.750 +02:00 [DBG] Error Id Parameter: errorId
2019-10-01 14:38:04.817 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:04.825 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.371 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 14:38:39.374 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:38:39.374 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:38:39.391 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 14:38:39.529 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 14:38:39.529 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 14:38:39.531 +02:00 [DBG] Start discovery request
2019-10-01 14:38:39.640 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.642 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.642 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-10-01 14:38:39.647 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-10-01 14:38:39.656 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-10-01 14:38:39.659 +02:00 [DBG] Start authorize request
2019-10-01 14:38:39.662 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.664 +02:00 [DBG] No user present in authorize request
2019-10-01 14:38:39.666 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:39.677 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:39.688 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:39.713 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:39.728 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b87bc39711584ab89f2cf6fb14386432","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"b87bc39711584ab89f2cf6fb14386432","code_challenge":"jSXbLI0jjoLpySvEtlKLHJIVhE8gQ8U_xUbYsmstq8U","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 14:38:39.762 +02:00 [INF] Showing login: User is not authenticated
2019-10-01 14:38:39.770 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.770 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.836 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:39.837 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:39.837 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:39.837 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:39.837 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:39.840 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:42.184 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-10-01 14:38:42.186 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:42.187 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:42.259 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:42.260 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:42.260 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:42.260 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:42.261 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:43.440 +02:00 [DBG] Augmenting SignInContext
2019-10-01 14:38:43.441 +02:00 [DBG] Adding idp claim with value: local
2019-10-01 14:38:43.441 +02:00 [DBG] Adding auth_time claim with value: 1569933523
2019-10-01 14:38:43.443 +02:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-10-01 14:38:43.452 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-10-01 14:38:43.478 +02:00 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","DisplayName":"bob","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000b1-0000-fe00-b63f-84710c7967bb","TimeStamp":"2019-10-01T12:38:43.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-10-01 14:38:43.480 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:43.501 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-10-01 14:38:43.502 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-10-01 14:38:43.502 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-10-01 14:38:43.505 +02:00 [DBG] Start authorize callback request
2019-10-01 14:38:43.509 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 14:38:43.509 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:43.509 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:43.509 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:43.510 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:43.510 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b87bc39711584ab89f2cf6fb14386432","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHljAbEhex7Ldp_QZwQoUg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"b87bc39711584ab89f2cf6fb14386432","code_challenge":"jSXbLI0jjoLpySvEtlKLHJIVhE8gQ8U_xUbYsmstq8U","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 14:38:43.559 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-01 14:38:43.559 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-01 14:38:43.559 +02:00 [INF] Showing consent: User has not yet consented
2019-10-01 14:38:43.601 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:43.601 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:43.601 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:43.602 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:43.602 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:45.597 +02:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-10-01 14:38:45.659 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:45.660 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:45.660 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:45.660 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:45.663 +02:00 [INF] {"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"800000de-0004-fc00-b63f-84710c7967bb","TimeStamp":"2019-10-01T12:38:45.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-10-01 14:38:45.683 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:45.722 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-10-01 14:38:45.722 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-10-01 14:38:45.722 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-10-01 14:38:45.722 +02:00 [DBG] Start authorize callback request
2019-10-01 14:38:45.753 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 14:38:45.754 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 14:38:45.754 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:45.754 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 14:38:45.754 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 14:38:45.754 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b87bc39711584ab89f2cf6fb14386432","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHljAbEhex7Ldp_QZwQoUg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"b87bc39711584ab89f2cf6fb14386432","code_challenge":"jSXbLI0jjoLpySvEtlKLHJIVhE8gQ8U_xUbYsmstq8U","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 14:38:45.769 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-01 14:38:45.769 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-01 14:38:45.773 +02:00 [INF] User consented to scopes: ["openid","profile","backend"]
2019-10-01 14:38:45.774 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2019-10-01 14:38:45.775 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 14:38:45.790 +02:00 [DBG] Creating Authorization Code Flow response.
2019-10-01 14:38:45.821 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****f7og","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000e0-0004-fc00-b63f-84710c7967bb","TimeStamp":"2019-10-01T12:38:45.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 14:38:45.823 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"b87bc39711584ab89f2cf6fb14386432","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-10-01 14:38:45.832 +02:00 [DBG] Augmenting SignInContext
2019-10-01 14:38:45.833 +02:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-10-01 14:38:46.658 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 14:38:46.659 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:38:46.659 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:38:46.660 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 14:38:46.661 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 14:38:46.661 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 14:38:46.661 +02:00 [DBG] Start discovery request
2019-10-01 14:38:46.697 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-10-01 14:38:46.699 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:38:46.699 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:38:46.700 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-10-01 14:38:46.707 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-10-01 14:38:46.707 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-10-01 14:38:46.711 +02:00 [DBG] Start token request.
2019-10-01 14:38:46.713 +02:00 [DBG] Start client validation
2019-10-01 14:38:46.718 +02:00 [DBG] Start parsing Basic Authentication secret
2019-10-01 14:38:46.720 +02:00 [DBG] Start parsing for secret in post body
2019-10-01 14:38:46.720 +02:00 [DBG] client id without secret found
2019-10-01 14:38:46.721 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-10-01 14:38:46.721 +02:00 [DBG] Secret id found: frontend
2019-10-01 14:38:46.722 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:46.722 +02:00 [DBG] Public Client - skipping secret validation success
2019-10-01 14:38:46.722 +02:00 [DBG] Client validation success
2019-10-01 14:38:46.723 +02:00 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000093-0006-fb00-b63f-84710c7967bb","TimeStamp":"2019-10-01T12:38:46.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-10-01 14:38:46.726 +02:00 [DBG] Start token request validation
2019-10-01 14:38:46.732 +02:00 [DBG] Start validation of authorization code token request
2019-10-01 14:38:46.760 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-10-01 14:38:46.767 +02:00 [DBG] Validation of authorization code token request success
2019-10-01 14:38:46.771 +02:00 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3xCA-2vzSj43_TDt1LmrUMlISJyidPg4abUZ92rf7og","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"3xCA-2vzSj43_TDt1LmrUMlISJyidPg4abUZ92rf7og","redirect_uri":"http://localhost:8080/callback","code_verifier":"c094cdf2edb54862b57d27e2cd022f33d532e2f96a3a415980fd14c4483d062d2934f79ab6814da394352b557e9d1e90","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-10-01 14:38:46.776 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:46.787 +02:00 [DBG] Getting claims for access token for client: frontend
2019-10-01 14:38:46.788 +02:00 [DBG] Getting claims for access token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 14:38:46.879 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:46.885 +02:00 [DBG] Getting claims for identity token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9 and client: frontend
2019-10-01 14:38:46.886 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-10-01 14:38:46.889 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****hURw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****U-Fw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000093-0006-fb00-b63f-84710c7967bb","TimeStamp":"2019-10-01T12:38:46.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 14:38:46.889 +02:00 [DBG] Token request success.
2019-10-01 14:38:46.905 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 14:38:46.905 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:38:46.905 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:38:46.910 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 14:38:46.910 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:38:46.910 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:38:46.910 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-10-01 14:38:46.912 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-10-01 14:38:46.912 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-10-01 14:38:46.916 +02:00 [DBG] Start userinfo request
2019-10-01 14:38:46.919 +02:00 [DBG] Bearer token found in header
2019-10-01 14:38:46.975 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:46.977 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 14:38:46.982 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-10-01 14:38:46.983 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1569933526,"exp":1569937126,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"a439dbae-61f1-44c6-8c98-d8abc52930c9","auth_time":1569933523,"idp":"local","name":"Bob Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-10-01 14:38:46.986 +02:00 [DBG] Creating userinfo response
2019-10-01 14:38:46.989 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 14:38:46.991 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 14:38:46.992 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-10-01 14:38:46.993 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 14:38:46.998 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-10-01 14:38:46.999 +02:00 [DBG] End userinfo request
2019-10-01 14:38:47.014 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 14:38:47.015 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 14:38:47.015 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 14:38:47.016 +02:00 [DBG] Rendering check session result
2019-10-01 14:43:23.173 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 14:43:23.174 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 14:43:23.175 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 14:43:23.177 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 14:43:23.181 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 14:43:23.182 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 14:43:23.182 +02:00 [DBG] Start discovery request
2019-10-01 14:43:23.591 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 14:43:23.592 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 14:43:23.592 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 14:43:23.592 +02:00 [DBG] Rendering check session result
2019-10-01 15:17:16.363 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 15:17:16.364 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:17:16.364 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:17:16.365 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 15:17:16.367 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 15:17:16.367 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 15:17:16.367 +02:00 [DBG] Start discovery request
2019-10-01 15:17:16.445 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-10-01 15:17:16.446 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-10-01 15:17:16.446 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-10-01 15:17:16.446 +02:00 [DBG] Start authorize request
2019-10-01 15:17:16.446 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 15:17:16.446 +02:00 [DBG] Start authorize request protocol validation
2019-10-01 15:17:16.447 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:16.447 +02:00 [DBG] Checking for PKCE parameters
2019-10-01 15:17:16.448 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-01 15:17:16.449 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"333377e3111f4d36904c0e9f08155275","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHljAbEhex7Ldp_QZwQoUg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"333377e3111f4d36904c0e9f08155275","code_challenge":"GIWTDbDXQ4lQOGtMFpSE9Lle7Oc9vGfQz2c23KFl9p0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-01 15:17:16.454 +02:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-10-01 15:17:16.454 +02:00 [DBG] Creating Authorization Code Flow response.
2019-10-01 15:17:16.455 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****GA90","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009b-0006-fb00-b63f-84710c7967bb","TimeStamp":"2019-10-01T13:17:16.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 15:17:16.455 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"333377e3111f4d36904c0e9f08155275","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-10-01 15:17:17.731 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 15:17:17.732 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:17:17.732 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:17:17.732 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 15:17:17.733 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 15:17:17.733 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 15:17:17.734 +02:00 [DBG] Start discovery request
2019-10-01 15:17:17.965 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-10-01 15:17:17.966 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:17:17.966 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:17:17.967 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-10-01 15:17:17.970 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-10-01 15:17:17.971 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-10-01 15:17:17.971 +02:00 [DBG] Start token request.
2019-10-01 15:17:17.971 +02:00 [DBG] Start client validation
2019-10-01 15:17:17.971 +02:00 [DBG] Start parsing Basic Authentication secret
2019-10-01 15:17:17.972 +02:00 [DBG] Start parsing for secret in post body
2019-10-01 15:17:17.979 +02:00 [DBG] client id without secret found
2019-10-01 15:17:17.979 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-10-01 15:17:17.979 +02:00 [DBG] Secret id found: frontend
2019-10-01 15:17:17.980 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:17.981 +02:00 [DBG] Public Client - skipping secret validation success
2019-10-01 15:17:17.981 +02:00 [DBG] Client validation success
2019-10-01 15:17:17.983 +02:00 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000e7-0004-fc00-b63f-84710c7967bb","TimeStamp":"2019-10-01T13:17:17.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-10-01 15:17:17.984 +02:00 [DBG] Start token request validation
2019-10-01 15:17:17.985 +02:00 [DBG] Start validation of authorization code token request
2019-10-01 15:17:17.988 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-10-01 15:17:18.001 +02:00 [DBG] Validation of authorization code token request success
2019-10-01 15:17:18.002 +02:00 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ZEMhdXbcwi-Uy8Aexuj6BdCFAyfv8YS3XZ9qxe7GA90","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ZEMhdXbcwi-Uy8Aexuj6BdCFAyfv8YS3XZ9qxe7GA90","redirect_uri":"http://localhost:8080/callback","code_verifier":"76a4469b6e3244ffb44d6193861d23b3b6b2ce8428a14acdbf22f1b2937a402aa3964f5b20bb4684838938f29767f0eb","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-10-01 15:17:18.003 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:18.004 +02:00 [DBG] Getting claims for access token for client: frontend
2019-10-01 15:17:18.004 +02:00 [DBG] Getting claims for access token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-01 15:17:18.022 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:18.022 +02:00 [DBG] Getting claims for identity token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9 and client: frontend
2019-10-01 15:17:18.023 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-10-01 15:17:18.026 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****xbhw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Tpcw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000e7-0004-fc00-b63f-84710c7967bb","TimeStamp":"2019-10-01T13:17:18.0000000Z","ProcessId":23716,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-01 15:17:18.026 +02:00 [DBG] Token request success.
2019-10-01 15:17:18.065 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 15:17:18.065 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:17:18.065 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:17:18.073 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-01 15:17:18.074 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:17:18.074 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:17:18.074 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-10-01 15:17:18.075 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-10-01 15:17:18.076 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-10-01 15:17:18.076 +02:00 [DBG] Start userinfo request
2019-10-01 15:17:18.076 +02:00 [DBG] Bearer token found in header
2019-10-01 15:17:18.078 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:18.078 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-01 15:17:18.088 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-10-01 15:17:18.088 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1569935838,"exp":1569939438,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"a439dbae-61f1-44c6-8c98-d8abc52930c9","auth_time":1569933523,"idp":"local","name":"Bob Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-10-01 15:17:18.088 +02:00 [DBG] Creating userinfo response
2019-10-01 15:17:18.089 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 15:17:18.089 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 15:17:18.089 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-10-01 15:17:18.089 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-01 15:17:18.098 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-10-01 15:17:18.098 +02:00 [DBG] End userinfo request
2019-10-01 15:17:18.124 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 15:17:18.125 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 15:17:18.125 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 15:17:18.125 +02:00 [DBG] Rendering check session result
2019-10-01 15:17:47.907 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 15:17:47.917 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 15:17:47.918 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 15:17:47.918 +02:00 [DBG] Start discovery request
2019-10-01 15:17:48.222 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-10-01 15:17:48.223 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-10-01 15:17:48.223 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-10-01 15:17:48.225 +02:00 [DBG] Start key discovery request
2019-10-01 15:18:57.203 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 15:18:57.205 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:18:57.205 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:18:57.206 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 15:18:57.219 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 15:18:57.219 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 15:18:57.219 +02:00 [DBG] Start discovery request
2019-10-01 15:18:57.578 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 15:18:57.578 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 15:18:57.578 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 15:18:57.578 +02:00 [DBG] Rendering check session result
2019-10-01 15:19:04.262 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-01 15:19:04.262 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-01 15:19:04.262 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-01 15:19:04.264 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-01 15:19:04.264 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-01 15:19:04.265 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-01 15:19:04.265 +02:00 [DBG] Start discovery request
2019-10-01 15:19:04.535 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-01 15:19:04.535 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-01 15:19:04.535 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-01 15:19:04.535 +02:00 [DBG] Rendering check session result
2019-10-02 09:31:12.628 +02:00 [INF] Starting host...
2019-10-02 09:31:13.039 +02:00 [INF] Starting IdentityServer4 version 3.0.1.0
2019-10-02 09:31:13.058 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-10-02 09:31:13.062 +02:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-10-02 09:31:13.062 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-10-02 09:31:13.062 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-10-02 09:31:13.062 +02:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-10-02 09:31:13.062 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-10-02 09:31:13.062 +02:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-10-02 09:31:14.169 +02:00 [DBG] Login Url: /Account/Login
2019-10-02 09:31:14.171 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-10-02 09:31:14.171 +02:00 [DBG] Logout Url: /Account/Logout
2019-10-02 09:31:14.171 +02:00 [DBG] ConsentUrl Url: /consent
2019-10-02 09:31:14.171 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-10-02 09:31:14.171 +02:00 [DBG] Error Url: /home/error
2019-10-02 09:31:14.171 +02:00 [DBG] Error Id Parameter: errorId
2019-10-02 09:51:50.613 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-02 09:51:50.617 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 09:51:50.617 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 09:51:50.648 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-02 09:51:50.667 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-02 09:51:50.679 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-02 09:51:50.682 +02:00 [DBG] Start discovery request
2019-10-02 09:51:50.833 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-10-02 09:51:50.836 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-10-02 09:51:50.836 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-10-02 09:51:50.838 +02:00 [DBG] Start authorize request
2019-10-02 09:51:50.844 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-02 09:51:50.847 +02:00 [DBG] Start authorize request protocol validation
2019-10-02 09:51:50.860 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:50.874 +02:00 [DBG] Checking for PKCE parameters
2019-10-02 09:51:50.909 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-02 09:51:50.929 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"6f8bdaf2bec74fb3a03f3888a97a7e60","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHljAbEhex7Ldp_QZwQoUg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"6f8bdaf2bec74fb3a03f3888a97a7e60","code_challenge":"6FO3VwcqkUsvnebF5DbiQ2fzl4t2gbcKPAYjKxqAySY","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-02 09:51:51.035 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-02 09:51:51.035 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-02 09:51:51.035 +02:00 [INF] Showing consent: User has not yet consented
2019-10-02 09:51:51.147 +02:00 [DBG] Start authorize request protocol validation
2019-10-02 09:51:51.149 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:51.149 +02:00 [DBG] Checking for PKCE parameters
2019-10-02 09:51:51.150 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-02 09:51:51.157 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:53.047 +02:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-10-02 09:51:53.155 +02:00 [DBG] Start authorize request protocol validation
2019-10-02 09:51:53.155 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:53.156 +02:00 [DBG] Checking for PKCE parameters
2019-10-02 09:51:53.157 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-02 09:51:53.208 +02:00 [INF] {"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"800000a2-0004-fa00-b63f-84710c7967bb","TimeStamp":"2019-10-02T07:51:53.0000000Z","ProcessId":24988,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-10-02 09:51:53.267 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:53.358 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-10-02 09:51:53.359 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-10-02 09:51:53.359 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-10-02 09:51:53.363 +02:00 [DBG] Start authorize callback request
2019-10-02 09:51:53.388 +02:00 [DBG] User in authorize request: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-02 09:51:53.388 +02:00 [DBG] Start authorize request protocol validation
2019-10-02 09:51:53.388 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:53.388 +02:00 [DBG] Checking for PKCE parameters
2019-10-02 09:51:53.388 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-10-02 09:51:53.389 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"6f8bdaf2bec74fb3a03f3888a97a7e60","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHljAbEhex7Ldp_QZwQoUg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"6f8bdaf2bec74fb3a03f3888a97a7e60","code_challenge":"6FO3VwcqkUsvnebF5DbiQ2fzl4t2gbcKPAYjKxqAySY","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2019-10-02 09:51:53.407 +02:00 [DBG] user_consent grant with value: frontend|a439dbae-61f1-44c6-8c98-d8abc52930c9 not found in store.
2019-10-02 09:51:53.407 +02:00 [DBG] Found no prior consent from consent store, consent is required
2019-10-02 09:51:53.413 +02:00 [INF] User consented to scopes: ["openid","profile","backend"]
2019-10-02 09:51:53.414 +02:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2019-10-02 09:51:53.417 +02:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-02 09:51:53.435 +02:00 [DBG] Creating Authorization Code Flow response.
2019-10-02 09:51:53.470 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****8I3k","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000019-0006-fc00-b63f-84710c7967bb","TimeStamp":"2019-10-02T07:51:53.0000000Z","ProcessId":24988,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-02 09:51:53.474 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"6f8bdaf2bec74fb3a03f3888a97a7e60","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-10-02 09:51:54.901 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-02 09:51:54.904 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 09:51:54.905 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 09:51:54.907 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-02 09:51:54.909 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-02 09:51:54.910 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-02 09:51:54.910 +02:00 [DBG] Start discovery request
2019-10-02 09:51:55.201 +02:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-10-02 09:51:55.203 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 09:51:55.203 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 09:51:55.205 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-10-02 09:51:55.209 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-10-02 09:51:55.209 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-10-02 09:51:55.215 +02:00 [DBG] Start token request.
2019-10-02 09:51:55.219 +02:00 [DBG] Start client validation
2019-10-02 09:51:55.223 +02:00 [DBG] Start parsing Basic Authentication secret
2019-10-02 09:51:55.226 +02:00 [DBG] Start parsing for secret in post body
2019-10-02 09:51:55.226 +02:00 [DBG] client id without secret found
2019-10-02 09:51:55.227 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-10-02 09:51:55.227 +02:00 [DBG] Secret id found: frontend
2019-10-02 09:51:55.227 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:55.227 +02:00 [DBG] Public Client - skipping secret validation success
2019-10-02 09:51:55.228 +02:00 [DBG] Client validation success
2019-10-02 09:51:55.229 +02:00 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000097-0003-fd00-b63f-84710c7967bb","TimeStamp":"2019-10-02T07:51:55.0000000Z","ProcessId":24988,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2019-10-02 09:51:55.233 +02:00 [DBG] Start token request validation
2019-10-02 09:51:55.241 +02:00 [DBG] Start validation of authorization code token request
2019-10-02 09:51:55.269 +02:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2019-10-02 09:51:55.278 +02:00 [DBG] Validation of authorization code token request success
2019-10-02 09:51:55.283 +02:00 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"JoS4GE6ko2zHn_TRH7MLzeVDzO3tZsk_C21v_ja8I3k","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"JoS4GE6ko2zHn_TRH7MLzeVDzO3tZsk_C21v_ja8I3k","redirect_uri":"http://localhost:8080/callback","code_verifier":"50a15b82fcf04d4da1243d6654c16aa52748812190bf41238ea6b02565360059e328e3efbaf14deb8074bc3b6b1f07be","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2019-10-02 09:51:55.293 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:55.311 +02:00 [DBG] Getting claims for access token for client: frontend
2019-10-02 09:51:55.312 +02:00 [DBG] Getting claims for access token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9
2019-10-02 09:51:55.499 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:55.504 +02:00 [DBG] Getting claims for identity token for subject: a439dbae-61f1-44c6-8c98-d8abc52930c9 and client: frontend
2019-10-02 09:51:55.504 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-10-02 09:51:55.507 +02:00 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****78Eg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cLTg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000097-0003-fd00-b63f-84710c7967bb","TimeStamp":"2019-10-02T07:51:55.0000000Z","ProcessId":24988,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-10-02 09:51:55.508 +02:00 [DBG] Token request success.
2019-10-02 09:51:55.520 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-02 09:51:55.520 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 09:51:55.520 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 09:51:55.525 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2019-10-02 09:51:55.525 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 09:51:55.525 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 09:51:55.525 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-10-02 09:51:55.527 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-10-02 09:51:55.527 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-10-02 09:51:55.530 +02:00 [DBG] Start userinfo request
2019-10-02 09:51:55.533 +02:00 [DBG] Bearer token found in header
2019-10-02 09:51:55.579 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:55.583 +02:00 [DBG] client configuration validation for client frontend succeeded.
2019-10-02 09:51:55.587 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-10-02 09:51:55.589 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1570002715,"exp":1570006315,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"a439dbae-61f1-44c6-8c98-d8abc52930c9","auth_time":1569933523,"idp":"local","name":"Bob Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-10-02 09:51:55.592 +02:00 [DBG] Creating userinfo response
2019-10-02 09:51:55.595 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-02 09:51:55.596 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-02 09:51:55.598 +02:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2019-10-02 09:51:55.598 +02:00 [DBG] Scopes in access token: openid profile backend
2019-10-02 09:51:55.605 +02:00 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2019-10-02 09:51:55.605 +02:00 [DBG] End userinfo request
2019-10-02 09:51:55.623 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-02 09:51:55.624 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-02 09:51:55.624 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-02 09:51:55.626 +02:00 [DBG] Rendering check session result
2019-10-02 09:52:43.992 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-02 09:52:43.998 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-02 09:52:43.999 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-02 09:52:43.999 +02:00 [DBG] Start discovery request
2019-10-02 09:52:44.736 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-10-02 09:52:44.739 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-10-02 09:52:44.739 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-10-02 09:52:44.742 +02:00 [DBG] Start key discovery request
2019-10-02 10:13:01.200 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-02 10:13:01.200 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 10:13:01.201 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 10:13:01.202 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-02 10:13:01.203 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-02 10:13:01.204 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-02 10:13:01.204 +02:00 [DBG] Start discovery request
2019-10-02 10:13:01.681 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-02 10:13:01.681 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-02 10:13:01.681 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-02 10:13:01.682 +02:00 [DBG] Rendering check session result
2019-10-02 10:13:02.841 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-10-02 10:13:02.841 +02:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-10-02 10:13:02.842 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-10-02 10:13:02.842 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-10-02 10:13:02.843 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-10-02 10:13:02.843 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-10-02 10:13:02.843 +02:00 [DBG] Start discovery request
2019-10-02 10:13:03.114 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-10-02 10:13:03.115 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-10-02 10:13:03.116 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-10-02 10:13:03.116 +02:00 [DBG] Rendering check session result
2020-10-17 12:02:40.684 +03:30 [INF] Seeding database...
2020-10-17 12:02:44.535 +03:30 [DBG] alice already exists
2020-10-17 12:02:44.549 +03:30 [DBG] bob already exists
2020-10-17 12:02:44.557 +03:30 [INF] Done seeding database.
2020-10-17 12:21:16.923 +03:30 [INF] Starting host...
2020-10-17 12:21:17.836 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 12:21:17.870 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 12:21:17.888 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 12:21:17.891 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 12:21:17.894 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 12:21:17.896 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 12:21:17.899 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 12:21:17.902 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 12:21:23.714 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 12:21:23.723 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 12:21:23.749 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 12:21:23.756 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 12:21:23.794 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 12:21:23.825 +03:30 [DBG] Error Url: /home/error
2020-10-17 12:21:23.874 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 12:21:48.173 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:22:26.475 +03:30 [INF] AuthenticationScheme: Google was challenged.
2020-10-17 12:22:57.782 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:23:01.010 +03:30 [WRN] Invalid password for user a439dbae-61f1-44c6-8c98-d8abc52930c9.
2020-10-17 12:23:01.022 +03:30 [WRN] User a439dbae-61f1-44c6-8c98-d8abc52930c9 failed to provide the correct password.
2020-10-17 12:23:01.590 +03:30 [INF] {"Username":"bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HM3IF78H5JBC:00000007","TimeStamp":"2020-10-17T08:53:01.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-17 12:23:24.420 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:23:25.123 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:23:25.129 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:23:25.172 +03:30 [DBG] Adding auth_time claim with value: 1602924805
2020-10-17 12:23:25.245 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:23:25.323 +03:30 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","DisplayName":"bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBC:00000008","TimeStamp":"2020-10-17T08:53:25.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:23:25.681 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:23:50.269 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:23:50.459 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:23:50.463 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:23:50.470 +03:30 [DBG] Adding auth_time claim with value: 1602924830
2020-10-17 12:23:50.536 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:23:50.590 +03:30 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","DisplayName":"bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBC:0000000B","TimeStamp":"2020-10-17T08:53:50.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:23:50.851 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:24:18.790 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:24:19.003 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:24:19.009 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:24:19.068 +03:30 [DBG] Adding auth_time claim with value: 1602924859
2020-10-17 12:24:19.155 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:24:19.224 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBC:0000000E","TimeStamp":"2020-10-17T08:54:19.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:24:19.488 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:24:51.693 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:24:51.857 +03:30 [WRN] Invalid password for user a439dbae-61f1-44c6-8c98-d8abc52930c9.
2020-10-17 12:24:51.865 +03:30 [WRN] User a439dbae-61f1-44c6-8c98-d8abc52930c9 failed to provide the correct password.
2020-10-17 12:24:52.023 +03:30 [INF] {"Username":"bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HM3IF78H5JBB:00000004","TimeStamp":"2020-10-17T08:54:52.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-17 12:25:12.685 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:25:12.891 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:25:12.896 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:25:12.924 +03:30 [DBG] Adding auth_time claim with value: 1602924912
2020-10-17 12:25:12.958 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:25:13.002 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBB:00000005","TimeStamp":"2020-10-17T08:55:13.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:25:13.256 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:25:51.576 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:25:51.788 +03:30 [INF] {"Username":"alice/bob","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HM3IF78H5JBB:00000008","TimeStamp":"2020-10-17T08:55:51.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-17 12:26:01.819 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:26:02.027 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:26:02.030 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:26:02.061 +03:30 [DBG] Adding auth_time claim with value: 1602924962
2020-10-17 12:26:02.097 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:26:02.172 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBB:00000009","TimeStamp":"2020-10-17T08:56:02.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:26:02.622 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:31:35.973 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:31:36.076 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:31:36.078 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:31:36.082 +03:30 [DBG] Adding auth_time claim with value: 1602925296
2020-10-17 12:31:36.085 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:31:36.177 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBH:00000004","TimeStamp":"2020-10-17T09:01:36.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:33:39.634 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 12:33:39.758 +03:30 [DBG] Augmenting SignInContext
2020-10-17 12:33:39.759 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 12:33:39.784 +03:30 [DBG] Adding auth_time claim with value: 1602925419
2020-10-17 12:33:39.813 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 12:33:39.833 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IF78H5JBK:00000001","TimeStamp":"2020-10-17T09:03:39.0000000Z","ProcessId":36824,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 12:33:40.001 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-17 12:36:31.298 +03:30 [INF] Starting host...
2020-10-17 12:36:31.875 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 12:36:31.907 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 12:36:31.922 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 12:36:31.925 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 12:36:31.928 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 12:36:31.931 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 12:36:31.935 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 12:36:31.942 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 12:36:42.083 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 12:36:42.093 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 12:36:42.095 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 12:36:42.096 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 12:36:42.098 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 12:36:42.099 +03:30 [DBG] Error Url: /home/error
2020-10-17 12:36:42.101 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 12:41:49.675 +03:30 [INF] Starting host...
2020-10-17 12:41:50.687 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 12:41:50.719 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 12:41:50.794 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 12:41:50.798 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 12:41:50.819 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 12:41:50.825 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 12:41:50.828 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 12:41:50.836 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 12:41:54.815 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 12:41:54.828 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 12:41:54.873 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 12:41:54.902 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 12:41:54.920 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 12:41:54.942 +03:30 [DBG] Error Url: /home/error
2020-10-17 12:41:54.962 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 12:48:05.516 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 12:48:05.535 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is not allowed
2020-10-17 12:48:05.551 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:8082
2020-10-17 12:48:05.563 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 12:48:05.965 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 12:48:05.969 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 12:48:05.977 +03:30 [DBG] Start discovery request
2020-10-17 12:53:12.238 +03:30 [INF] Starting host...
2020-10-17 12:53:12.729 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 12:53:12.767 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 12:53:12.787 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 12:53:12.790 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 12:53:12.792 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 12:53:12.794 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 12:53:12.799 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 12:53:12.803 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 12:53:17.215 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 12:53:17.226 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 12:53:17.238 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 12:53:17.242 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 12:53:17.255 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 12:53:17.285 +03:30 [DBG] Error Url: /home/error
2020-10-17 12:53:17.292 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 12:54:54.559 +03:30 [INF] Starting host...
2020-10-17 12:54:55.019 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 12:54:55.054 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 12:54:55.072 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 12:54:55.076 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 12:54:55.079 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 12:54:55.081 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 12:54:55.082 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 12:54:55.085 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 12:54:55.707 +03:30 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address http://127.0.0.1:5000: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2020-10-17 12:54:56.143 +03:30 [FTL] Host terminated unexpectedly.
System.IO.IOException: Failed to bind to address http://127.0.0.1:5000: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Auth\spa30\Lab08\Solution\MarketPlace\spa30\IdentityProvider\Program.cs:line 59
2020-10-17 13:00:56.471 +03:30 [INF] Starting host...
2020-10-17 13:00:57.031 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 13:00:57.075 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 13:00:57.094 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 13:00:57.101 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 13:00:57.108 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 13:00:57.113 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 13:00:57.120 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 13:00:57.122 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 13:01:02.700 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 13:01:02.710 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 13:01:02.737 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 13:01:02.763 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 13:01:02.784 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 13:01:02.805 +03:30 [DBG] Error Url: /home/error
2020-10-17 13:01:02.820 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 13:10:15.385 +03:30 [INF] Starting host...
2020-10-17 13:10:15.856 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 13:10:15.893 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 13:10:15.912 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 13:10:15.914 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 13:10:15.916 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 13:10:15.920 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 13:10:15.923 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 13:10:15.927 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 13:10:20.188 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 13:10:20.202 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 13:10:20.239 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 13:10:20.281 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 13:10:20.309 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 13:10:20.358 +03:30 [DBG] Error Url: /home/error
2020-10-17 13:10:20.409 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 13:11:26.720 +03:30 [INF] Starting host...
2020-10-17 13:11:27.194 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 13:11:27.227 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 13:11:27.242 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 13:11:27.245 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 13:11:27.247 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 13:11:27.254 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 13:11:27.263 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 13:11:27.266 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 13:11:31.885 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 13:11:31.896 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 13:11:31.947 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 13:11:31.988 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 13:11:32.030 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 13:11:32.043 +03:30 [DBG] Error Url: /home/error
2020-10-17 13:11:32.085 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 13:14:43.980 +03:30 [INF] Starting host...
2020-10-17 13:14:44.440 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 13:14:44.471 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 13:14:44.487 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 13:14:44.492 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 13:14:44.494 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 13:14:44.496 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 13:14:44.498 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 13:14:44.500 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 13:14:48.086 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 13:14:48.094 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 13:14:48.121 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 13:14:48.145 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 13:14:48.168 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 13:14:48.191 +03:30 [DBG] Error Url: /home/error
2020-10-17 13:14:48.211 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 13:17:04.441 +03:30 [INF] Starting host...
2020-10-17 13:17:06.821 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 13:17:06.852 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 13:17:06.868 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 13:17:06.871 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 13:17:06.873 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 13:17:06.877 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 13:17:06.884 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 13:17:06.887 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 13:17:09.275 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 13:17:09.291 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 13:17:09.317 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 13:17:09.367 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 13:17:09.407 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 13:17:09.427 +03:30 [DBG] Error Url: /home/error
2020-10-17 13:17:09.449 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 14:08:22.135 +03:30 [INF] Starting host...
2020-10-17 14:08:22.678 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 14:08:22.721 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 14:08:22.746 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 14:08:22.769 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 14:08:22.773 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 14:08:22.774 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 14:08:22.775 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 14:08:22.777 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 14:08:25.378 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 14:08:25.498 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 14:08:25.528 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 14:08:25.544 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 14:08:25.554 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 14:08:25.653 +03:30 [DBG] Error Url: /home/error
2020-10-17 14:08:25.741 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 14:19:32.936 +03:30 [INF] Starting host...
2020-10-17 14:19:33.562 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-17 14:19:33.597 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-17 14:19:33.613 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-17 14:19:33.616 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-17 14:19:33.619 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-17 14:19:33.623 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-17 14:19:33.626 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-17 14:19:33.637 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-17 14:19:36.461 +03:30 [DBG] Login Url: /Account/Login
2020-10-17 14:19:36.510 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-17 14:19:36.559 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-17 14:19:36.581 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-17 14:19:36.600 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-17 14:19:36.623 +03:30 [DBG] Error Url: /home/error
2020-10-17 14:19:36.662 +03:30 [DBG] Error Id Parameter: errorId
2020-10-17 14:21:50.531 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:21:50.564 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:21:50.587 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:21:50.644 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:21:51.063 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:21:51.069 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:21:51.087 +03:30 [DBG] Start discovery request
2020-10-17 14:21:51.537 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-17 14:21:51.569 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-17 14:21:51.612 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-17 14:21:51.644 +03:30 [DBG] Start authorize request
2020-10-17 14:21:51.677 +03:30 [DBG] No user present in authorize request
2020-10-17 14:21:51.707 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:21:51.775 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:21:51.845 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:21:51.927 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:21:51.981 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"a32a721aa83f4b3e87526477261d17e8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"a32a721aa83f4b3e87526477261d17e8","code_challenge":"rvu7fdAF2hrkUg9b_4YVWwTipcXDp0P6x6tRDlf0vfQ","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:21:52.213 +03:30 [INF] Showing login: User is not authenticated
2020-10-17 14:21:52.404 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:21:52.409 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:21:52.445 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:21:52.472 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:21:52.532 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:01.433 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 14:24:01.578 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:24:01.581 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:01.625 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:24:01.636 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:24:04.737 +03:30 [DBG] Augmenting SignInContext
2020-10-17 14:24:04.740 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 14:24:04.742 +03:30 [DBG] Adding auth_time claim with value: 1602932044
2020-10-17 14:24:04.772 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 14:24:04.826 +03:30 [INF] {"Username":"bob","Provider":null,"ProviderUserId":null,"SubjectId":"a439dbae-61f1-44c6-8c98-d8abc52930c9","DisplayName":"bob","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IH9B00E39:00000008","TimeStamp":"2020-10-17T10:54:04.0000000Z","ProcessId":42956,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-17 14:24:04.939 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:05.052 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-17 14:24:05.079 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-17 14:24:05.140 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-17 14:24:05.218 +03:30 [DBG] Start authorize callback request
2020-10-17 14:24:05.253 +03:30 [DBG] No user present in authorize request
2020-10-17 14:24:05.290 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:24:05.334 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:05.358 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:24:05.396 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:24:05.434 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"a32a721aa83f4b3e87526477261d17e8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"a32a721aa83f4b3e87526477261d17e8","code_challenge":"rvu7fdAF2hrkUg9b_4YVWwTipcXDp0P6x6tRDlf0vfQ","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:24:05.818 +03:30 [INF] Showing login: User is not authenticated
2020-10-17 14:24:05.892 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:24:05.895 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:05.930 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:24:05.944 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:24:05.968 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:17.700 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:24:17.711 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:24:17.734 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:24:17.761 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:24:17.773 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:25:10.770 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:25:10.786 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:25:10.831 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:25:10.860 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:25:10.916 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:25:10.949 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:25:10.994 +03:30 [DBG] Start discovery request
2020-10-17 14:25:11.306 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-17 14:25:11.334 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-17 14:25:11.375 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-17 14:25:11.385 +03:30 [DBG] Start authorize request
2020-10-17 14:25:11.405 +03:30 [DBG] User in authorize request: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:25:11.439 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:25:11.445 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:25:11.497 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:25:11.533 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:25:11.590 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8bdef73eafb143e496bcfba3398945fd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"kDFzs_6q25GHMm0-hY1--Q","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"8bdef73eafb143e496bcfba3398945fd","code_challenge":"eNrgNwCksLm8LTyL7t-qAJQi02bo-hmitqfO5YEOSew","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:25:11.918 +03:30 [DBG] user_consent grant with value: frontend|ca614e25-06e6-416c-b3e1-dad0b43fddff not found in store.
2020-10-17 14:25:11.925 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-17 14:25:12.037 +03:30 [INF] Showing consent: User has not yet consented
2020-10-17 14:25:12.167 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:25:12.173 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:25:12.228 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:25:12.261 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:25:12.304 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:02.424 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 14:26:02.515 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:26:02.520 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:02.560 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:26:02.583 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:26:02.628 +03:30 [INF] {"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3IH9B00E3E:00000009","TimeStamp":"2020-10-17T10:56:02.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2020-10-17 14:26:02.842 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:03.092 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-17 14:26:03.124 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-17 14:26:03.157 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-17 14:26:03.206 +03:30 [DBG] Start authorize callback request
2020-10-17 14:26:03.255 +03:30 [DBG] User in authorize request: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:26:03.268 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:26:03.282 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:03.288 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:26:03.305 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:26:03.320 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8bdef73eafb143e496bcfba3398945fd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"kDFzs_6q25GHMm0-hY1--Q","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"8bdef73eafb143e496bcfba3398945fd","code_challenge":"eNrgNwCksLm8LTyL7t-qAJQi02bo-hmitqfO5YEOSew","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:26:03.539 +03:30 [DBG] user_consent grant with value: frontend|ca614e25-06e6-416c-b3e1-dad0b43fddff not found in store.
2020-10-17 14:26:03.547 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-17 14:26:03.590 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-17 14:26:03.607 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-17 14:26:03.634 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:26:03.691 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-17 14:26:03.766 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","Endpoint":"Authorize","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qRaQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3IH9B00E3E:0000000B","TimeStamp":"2020-10-17T10:56:03.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-17 14:26:03.876 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ClientId":"frontend","RedirectUri":"http://localhost:8082/callback","State":"8bdef73eafb143e496bcfba3398945fd","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-17 14:26:03.959 +03:30 [DBG] Augmenting SignInContext
2020-10-17 14:26:03.969 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 14:26:06.049 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:26:06.063 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:26:06.094 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:26:06.124 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:26:06.161 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:26:06.164 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:26:06.193 +03:30 [DBG] Start discovery request
2020-10-17 14:26:06.326 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8082
2020-10-17 14:26:06.332 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:26:06.370 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:26:06.396 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-17 14:26:06.454 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-17 14:26:06.472 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-17 14:26:06.512 +03:30 [DBG] Start token request.
2020-10-17 14:26:06.524 +03:30 [DBG] Start client validation
2020-10-17 14:26:06.556 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-17 14:26:06.593 +03:30 [DBG] Start parsing for secret in post body
2020-10-17 14:26:06.620 +03:30 [DBG] client id without secret found
2020-10-17 14:26:06.649 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-17 14:26:06.673 +03:30 [DBG] Secret id found: frontend
2020-10-17 14:26:06.698 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:06.742 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-17 14:26:06.772 +03:30 [DBG] Client validation success
2020-10-17 14:26:06.806 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3IH9B00E3D:00000003","TimeStamp":"2020-10-17T10:56:06.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-17 14:26:06.920 +03:30 [DBG] Start token request validation
2020-10-17 14:26:06.954 +03:30 [DBG] Start validation of authorization code token request
2020-10-17 14:26:07.034 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-17 14:26:07.057 +03:30 [DBG] Validation of authorization code token request success
2020-10-17 14:26:07.078 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3tYLcMR_o3SpUxPKmJ5abq__K_QV_eqy1eN7NkMqRaQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"3tYLcMR_o3SpUxPKmJ5abq__K_QV_eqy1eN7NkMqRaQ","redirect_uri":"http://localhost:8082/callback","code_verifier":"d922ecb14356458f98e1bdf65876efdd0a7dd1646c64404ebe0d484757d90a3d667363fc6fc24d8ebc852c7869ab75a2","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-17 14:26:07.223 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:07.264 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-17 14:26:07.269 +03:30 [DBG] Getting claims for access token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:26:07.950 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:07.969 +03:30 [DBG] Getting claims for identity token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff and client: frontend
2020-10-17 14:26:07.977 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-17 14:26:08.042 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ModA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****FNtg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3IH9B00E3D:00000003","TimeStamp":"2020-10-17T10:56:08.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-17 14:26:08.232 +03:30 [DBG] Token request success.
2020-10-17 14:26:08.352 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-17 14:26:08.375 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:26:08.403 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:26:08.456 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-17 14:26:08.491 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:26:08.519 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:26:08.548 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-17 14:26:08.600 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-17 14:26:08.641 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-17 14:26:08.714 +03:30 [DBG] Start userinfo request
2020-10-17 14:26:08.746 +03:30 [DBG] Bearer token found in header
2020-10-17 14:26:08.900 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:08.917 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:26:08.977 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-17 14:26:08.988 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1602932167,"exp":1602935767,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"ca614e25-06e6-416c-b3e1-dad0b43fddff","auth_time":1602925296,"idp":"local","name":"Alice Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-17 14:26:09.123 +03:30 [DBG] Creating userinfo response
2020-10-17 14:26:09.148 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:26:09.169 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:26:09.192 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-17 14:26:09.227 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:26:09.273 +03:30 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2020-10-17 14:26:09.281 +03:30 [DBG] End userinfo request
2020-10-17 14:26:09.365 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-17 14:26:09.377 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-17 14:26:09.399 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-17 14:26:09.433 +03:30 [DBG] Rendering check session result
2020-10-17 14:27:19.755 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:34:56.498 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:34:56.522 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:34:56.550 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:34:56.559 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:34:56.580 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:34:56.588 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:34:56.597 +03:30 [DBG] Start discovery request
2020-10-17 14:34:56.751 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-17 14:34:56.801 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-17 14:34:56.820 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-17 14:34:56.852 +03:30 [DBG] Start authorize request
2020-10-17 14:34:56.869 +03:30 [DBG] No user present in authorize request
2020-10-17 14:34:56.899 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:34:56.930 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:34:56.966 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:34:57.001 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:34:57.053 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"4bbe72a767d64cbca1303f02d51f162d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"4bbe72a767d64cbca1303f02d51f162d","code_challenge":"2JrjY5xrTeLPRgzmkP__8iStZ0io6Z6aNAd3e_G4jeA","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:34:57.269 +03:30 [INF] Showing login: User is not authenticated
2020-10-17 14:34:57.545 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:34:57.550 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:34:57.573 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:34:57.605 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:34:57.629 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:04.651 +03:30 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-10-17 14:49:04.677 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-10-17 14:49:04.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-10-17 14:49:04.746 +03:30 [DBG] Processing signout request for ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:49:04.779 +03:30 [DBG] Start end session request validation
2020-10-17 14:49:04.803 +03:30 [DBG] Start identity token validation
2020-10-17 14:49:04.829 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:04.881 +03:30 [DBG] Client found: frontend / MarketPlace JavaScript Client
2020-10-17 14:49:04.922 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-17 14:49:04.927 +03:30 [DBG] Token validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1602932168,"exp":1602932468,"iss":"http://localhost:5000","aud":"frontend","iat":1602932167,"at_hash":"BsdSMer7LDkzCTGqgLIFQg","s_hash":"UPxDFkoUNWfn2zgwWMB0qA","sid":"kDFzs_6q25GHMm0-hY1--Q","sub":"ca614e25-06e6-416c-b3e1-dad0b43fddff","auth_time":1602925296,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-17 14:49:05.064 +03:30 [INF] End session request validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","PostLogOutUri":"http://localhost:8082","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:8082"},"$type":"EndSessionRequestValidationLog"}
2020-10-17 14:49:05.113 +03:30 [DBG] Success validating end session request from frontend
2020-10-17 14:49:05.255 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-17 14:49:05.263 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-17 14:49:05.277 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-17 14:49:05.298 +03:30 [INF] {"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HM3IH9B00E3K:00000002","TimeStamp":"2020-10-17T11:19:05.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2020-10-17 14:49:05.685 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-10-17 14:49:05.715 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-10-17 14:49:05.769 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-10-17 14:49:05.870 +03:30 [DBG] Processing signout callback request
2020-10-17 14:49:05.895 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:05.903 +03:30 [DBG] No client front-channel logout URLs
2020-10-17 14:49:05.931 +03:30 [DBG] No client back-channel logout URLs
2020-10-17 14:49:05.937 +03:30 [INF] Successful signout callback.
2020-10-17 14:49:05.970 +03:30 [DBG] No client front-channel iframe urls
2020-10-17 14:49:06.015 +03:30 [DBG] No client back-channel iframe urls
2020-10-17 14:49:34.352 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:49:34.410 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:49:34.445 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:49:34.493 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:49:34.586 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:49:34.648 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:49:34.702 +03:30 [DBG] Start discovery request
2020-10-17 14:49:34.821 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-17 14:49:34.828 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-17 14:49:34.851 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-17 14:49:34.901 +03:30 [DBG] Start authorize request
2020-10-17 14:49:34.933 +03:30 [DBG] No user present in authorize request
2020-10-17 14:49:34.966 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:49:34.991 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:35.025 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:49:35.038 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:49:35.056 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da30dd782d6846e2830d7e4771ed1724","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"da30dd782d6846e2830d7e4771ed1724","code_challenge":"bv3DIWRYhX8UxUSvGcuVvdC3bBnxH4wnnAQ5RdmmK4c","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:49:35.319 +03:30 [INF] Showing login: User is not authenticated
2020-10-17 14:49:35.519 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:49:35.526 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:35.573 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:49:35.610 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:49:35.632 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:38.069 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-17 14:49:38.081 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:49:38.103 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:38.125 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:49:38.142 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:49:38.202 +03:30 [DBG] Augmenting SignInContext
2020-10-17 14:49:38.205 +03:30 [DBG] Adding idp claim with value: local
2020-10-17 14:49:38.223 +03:30 [DBG] Adding auth_time claim with value: 1602933578
2020-10-17 14:49:38.255 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 14:49:38.295 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IH9B00E3K:00000006","TimeStamp":"2020-10-17T11:19:38.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-10-17 14:49:38.406 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:38.537 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-17 14:49:38.583 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-17 14:49:38.638 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-17 14:49:38.679 +03:30 [DBG] Start authorize callback request
2020-10-17 14:49:38.726 +03:30 [DBG] User in authorize request: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:49:38.768 +03:30 [DBG] Start authorize request protocol validation
2020-10-17 14:49:38.801 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:38.861 +03:30 [DBG] Checking for PKCE parameters
2020-10-17 14:49:38.871 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-17 14:49:38.937 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da30dd782d6846e2830d7e4771ed1724","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"TqwSKGlx0l-tRetcD6aQoQ","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"da30dd782d6846e2830d7e4771ed1724","code_challenge":"bv3DIWRYhX8UxUSvGcuVvdC3bBnxH4wnnAQ5RdmmK4c","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-17 14:49:39.243 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-17 14:49:39.249 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-17 14:49:39.285 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","Endpoint":"Authorize","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****UfPY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3IH9B00E3K:00000007","TimeStamp":"2020-10-17T11:19:39.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-17 14:49:39.454 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ClientId":"frontend","RedirectUri":"http://localhost:8082/callback","State":"da30dd782d6846e2830d7e4771ed1724","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-17 14:49:39.540 +03:30 [DBG] Augmenting SignInContext
2020-10-17 14:49:39.564 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-17 14:49:41.586 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 14:49:41.592 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:49:41.642 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:49:41.648 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 14:49:41.701 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 14:49:41.732 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 14:49:41.787 +03:30 [DBG] Start discovery request
2020-10-17 14:49:42.035 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8082
2020-10-17 14:49:42.042 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:49:42.065 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:49:42.088 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-17 14:49:42.141 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-17 14:49:42.190 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-17 14:49:42.215 +03:30 [DBG] Start token request.
2020-10-17 14:49:42.237 +03:30 [DBG] Start client validation
2020-10-17 14:49:42.240 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-17 14:49:42.273 +03:30 [DBG] Start parsing for secret in post body
2020-10-17 14:49:42.304 +03:30 [DBG] client id without secret found
2020-10-17 14:49:42.342 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-17 14:49:42.349 +03:30 [DBG] Secret id found: frontend
2020-10-17 14:49:42.382 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:42.434 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-17 14:49:42.455 +03:30 [DBG] Client validation success
2020-10-17 14:49:42.487 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3IH9B00E3P:00000003","TimeStamp":"2020-10-17T11:19:42.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-17 14:49:42.593 +03:30 [DBG] Start token request validation
2020-10-17 14:49:42.620 +03:30 [DBG] Start validation of authorization code token request
2020-10-17 14:49:42.645 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-17 14:49:42.681 +03:30 [DBG] Validation of authorization code token request success
2020-10-17 14:49:42.698 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"wMkGuONzcuSGzGLsx1FcF4MDpnJlrv3FaOmZRKZUfPY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"wMkGuONzcuSGzGLsx1FcF4MDpnJlrv3FaOmZRKZUfPY","redirect_uri":"http://localhost:8082/callback","code_verifier":"c9100c5867ec484c9f460e67676dede287beea4452fd41dfb421ef500fb4a19208c3050fe1664840a5d652224165671d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-17 14:49:42.882 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:42.927 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-17 14:49:42.950 +03:30 [DBG] Getting claims for access token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-17 14:49:43.005 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:43.019 +03:30 [DBG] Getting claims for identity token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff and client: frontend
2020-10-17 14:49:43.026 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-17 14:49:43.056 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****EOog","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eKaA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3IH9B00E3P:00000003","TimeStamp":"2020-10-17T11:19:43.0000000Z","ProcessId":42956,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-17 14:49:43.216 +03:30 [DBG] Token request success.
2020-10-17 14:49:43.285 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-17 14:49:43.315 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:49:43.431 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:49:43.480 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-17 14:49:43.506 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 14:49:43.545 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 14:49:43.552 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-17 14:49:43.607 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-17 14:49:43.647 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-17 14:49:43.667 +03:30 [DBG] Start userinfo request
2020-10-17 14:49:43.690 +03:30 [DBG] Bearer token found in header
2020-10-17 14:49:43.707 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:43.744 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-17 14:49:43.785 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-17 14:49:43.821 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1602933582,"exp":1602937182,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"ca614e25-06e6-416c-b3e1-dad0b43fddff","auth_time":1602933578,"idp":"local","name":"Alice Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-17 14:49:44.061 +03:30 [DBG] Creating userinfo response
2020-10-17 14:49:44.083 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:49:44.119 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:49:44.156 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-17 14:49:44.204 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-17 14:49:44.261 +03:30 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2020-10-17 14:49:44.275 +03:30 [DBG] End userinfo request
2020-10-17 14:49:44.581 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-17 14:49:44.612 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-17 14:49:44.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-17 14:49:44.684 +03:30 [DBG] Rendering check session result
2020-10-17 23:14:42.407 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-17 23:14:42.452 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-17 23:14:42.468 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-17 23:14:42.516 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-17 23:14:42.552 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-17 23:14:42.573 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-17 23:14:42.602 +03:30 [DBG] Start discovery request
2020-10-17 23:14:57.838 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-17 23:14:57.859 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-17 23:14:57.907 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-17 23:14:57.926 +03:30 [DBG] Rendering check session result
2020-10-18 01:43:22.216 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-18 01:43:50.997 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 01:43:51.079 +03:30 [DBG] Augmenting SignInContext
2020-10-18 01:43:51.083 +03:30 [DBG] Adding idp claim with value: local
2020-10-18 01:43:51.094 +03:30 [DBG] Adding auth_time claim with value: 1602972831
2020-10-18 01:43:51.120 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 01:43:51.183 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3IH9B00E3V:00000004","TimeStamp":"2020-10-17T22:13:51.0000000Z","ProcessId":42956,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-18 01:43:51.347 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-18 01:44:54.008 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:01:44.399 +03:30 [INF] Starting host...
2020-10-18 10:01:45.231 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-18 10:01:45.263 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-18 10:01:45.279 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-18 10:01:45.281 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-18 10:01:45.284 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-18 10:01:45.286 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-18 10:01:45.288 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-18 10:01:45.291 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-18 10:02:05.099 +03:30 [DBG] Login Url: /Account/Login
2020-10-18 10:02:05.112 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-18 10:02:05.140 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-18 10:02:05.170 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-18 10:02:05.195 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-18 10:02:05.224 +03:30 [DBG] Error Url: /home/error
2020-10-18 10:02:05.241 +03:30 [DBG] Error Id Parameter: errorId
2020-10-18 10:11:21.230 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:11:21.246 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:11:21.261 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:11:21.300 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:11:21.865 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:11:21.900 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:11:21.945 +03:30 [DBG] Start discovery request
2020-10-18 10:11:22.541 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-18 10:11:22.566 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-18 10:11:22.609 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-18 10:11:22.654 +03:30 [DBG] Start authorize request
2020-10-18 10:11:22.701 +03:30 [DBG] No user present in authorize request
2020-10-18 10:11:22.749 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:11:22.810 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:22.879 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:11:22.931 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:11:22.976 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"663924fcd57e4ce894ae480053e2aea6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"663924fcd57e4ce894ae480053e2aea6","code_challenge":"9k8FKkf3gOSXK9bjSxt1RkrXxAlfgaHKs1wktmaJRY8","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-18 10:11:23.193 +03:30 [INF] Showing login: User is not authenticated
2020-10-18 10:11:23.357 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:11:23.360 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:23.384 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:11:23.388 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:11:23.411 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:29.678 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:11:29.770 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:11:29.774 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:29.806 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:11:29.832 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:11:32.920 +03:30 [DBG] Augmenting SignInContext
2020-10-18 10:11:32.926 +03:30 [DBG] Adding idp claim with value: local
2020-10-18 10:11:32.973 +03:30 [DBG] Adding auth_time claim with value: 1603003292
2020-10-18 10:11:33.057 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 10:11:33.161 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3J5U3A0RS3:00000004","TimeStamp":"2020-10-18T06:41:33.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-10-18 10:11:33.418 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:33.617 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-18 10:11:33.656 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-18 10:11:33.705 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-18 10:11:33.758 +03:30 [DBG] Start authorize callback request
2020-10-18 10:11:33.802 +03:30 [DBG] User in authorize request: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-18 10:11:33.849 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:11:33.875 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:33.933 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:11:33.990 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:11:34.056 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"663924fcd57e4ce894ae480053e2aea6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"-RzS72iSbrREHuE3LqGpLA","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"663924fcd57e4ce894ae480053e2aea6","code_challenge":"9k8FKkf3gOSXK9bjSxt1RkrXxAlfgaHKs1wktmaJRY8","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-18 10:11:34.523 +03:30 [DBG] user_consent grant with value: frontend|ca614e25-06e6-416c-b3e1-dad0b43fddff not found in store.
2020-10-18 10:11:34.540 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-18 10:11:34.569 +03:30 [INF] Showing consent: User has not yet consented
2020-10-18 10:11:34.725 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:11:34.728 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:11:34.792 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:11:34.800 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:11:34.830 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:05.225 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:12:05.400 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:12:05.404 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:05.431 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:12:05.466 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:12:05.499 +03:30 [INF] {"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3J5U3A0RS3:00000007","TimeStamp":"2020-10-18T06:42:05.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2020-10-18 10:12:05.692 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:06.859 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-18 10:12:06.887 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-18 10:12:06.903 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-18 10:12:06.934 +03:30 [DBG] Start authorize callback request
2020-10-18 10:12:07.045 +03:30 [DBG] User in authorize request: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-18 10:12:07.060 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:12:07.083 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:07.119 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:12:07.146 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:12:07.162 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"663924fcd57e4ce894ae480053e2aea6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"-RzS72iSbrREHuE3LqGpLA","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"663924fcd57e4ce894ae480053e2aea6","code_challenge":"9k8FKkf3gOSXK9bjSxt1RkrXxAlfgaHKs1wktmaJRY8","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-18 10:12:07.476 +03:30 [DBG] user_consent grant with value: frontend|ca614e25-06e6-416c-b3e1-dad0b43fddff not found in store.
2020-10-18 10:12:07.481 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-18 10:12:07.520 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-18 10:12:07.541 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-18 10:12:07.560 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-18 10:12:07.620 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-18 10:12:07.698 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","Endpoint":"Authorize","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ixO4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3J5U3A0RS3:00000008","TimeStamp":"2020-10-18T06:42:07.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-18 10:12:07.804 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","ClientId":"frontend","RedirectUri":"http://localhost:8082/callback","State":"663924fcd57e4ce894ae480053e2aea6","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-18 10:12:07.973 +03:30 [DBG] Augmenting SignInContext
2020-10-18 10:12:08.008 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 10:12:10.873 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:12:10.907 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:12:10.935 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:12:10.969 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:12:11.030 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:12:11.085 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:12:11.127 +03:30 [DBG] Start discovery request
2020-10-18 10:12:15.920 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8082
2020-10-18 10:12:15.932 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:12:16.011 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:12:16.056 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-18 10:12:16.147 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-18 10:12:16.199 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-18 10:12:16.245 +03:30 [DBG] Start token request.
2020-10-18 10:12:16.281 +03:30 [DBG] Start client validation
2020-10-18 10:12:16.315 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-18 10:12:16.337 +03:30 [DBG] Start parsing for secret in post body
2020-10-18 10:12:16.362 +03:30 [DBG] client id without secret found
2020-10-18 10:12:16.395 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-18 10:12:16.426 +03:30 [DBG] Secret id found: frontend
2020-10-18 10:12:16.519 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:16.608 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-18 10:12:16.641 +03:30 [DBG] Client validation success
2020-10-18 10:12:16.701 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3J5U3A0RS2:00000003","TimeStamp":"2020-10-18T06:42:16.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-18 10:12:16.849 +03:30 [DBG] Start token request validation
2020-10-18 10:12:16.910 +03:30 [DBG] Start validation of authorization code token request
2020-10-18 10:12:17.001 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-18 10:12:17.024 +03:30 [DBG] Validation of authorization code token request success
2020-10-18 10:12:17.037 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"sOk22y2p2K9LakUb6qoz4Led_QATMdELvNlRVoJixO4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"sOk22y2p2K9LakUb6qoz4Led_QATMdELvNlRVoJixO4","redirect_uri":"http://localhost:8082/callback","code_verifier":"bfa3d5e331094398b96535109b11d5bcd4e2edbb48c14a0a8c138bd464995c5d02fc80678c3d448791662965cc23da89","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-18 10:12:17.340 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:17.455 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-18 10:12:17.539 +03:30 [DBG] Getting claims for access token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-18 10:12:17.932 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:17.964 +03:30 [DBG] Getting claims for identity token for subject: ca614e25-06e6-416c-b3e1-dad0b43fddff and client: frontend
2020-10-18 10:12:17.986 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-18 10:12:18.121 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****FfRg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****38nw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3J5U3A0RS2:00000003","TimeStamp":"2020-10-18T06:42:18.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-18 10:12:18.346 +03:30 [DBG] Token request success.
2020-10-18 10:12:19.122 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-18 10:12:19.144 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:12:19.181 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:12:19.249 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8082
2020-10-18 10:12:19.277 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:12:19.287 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:12:19.321 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-18 10:12:19.359 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-18 10:12:19.383 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-18 10:12:19.424 +03:30 [DBG] Start userinfo request
2020-10-18 10:12:19.437 +03:30 [DBG] Bearer token found in header
2020-10-18 10:12:19.635 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:19.648 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:12:19.700 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-18 10:12:19.724 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603003337,"exp":1603006937,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"ca614e25-06e6-416c-b3e1-dad0b43fddff","auth_time":1603003292,"idp":"local","name":"Alice Smith","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-18 10:12:19.938 +03:30 [DBG] Creating userinfo response
2020-10-18 10:12:19.960 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-18 10:12:19.997 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-18 10:12:20.034 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-18 10:12:20.074 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-18 10:12:20.145 +03:30 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username
2020-10-18 10:12:20.153 +03:30 [DBG] End userinfo request
2020-10-18 10:12:20.320 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:12:20.346 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:12:20.398 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:12:20.436 +03:30 [DBG] Rendering check session result
2020-10-18 10:16:37.060 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:16:37.069 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:16:37.112 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:16:37.138 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:16:37.217 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:16:37.225 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:16:37.266 +03:30 [DBG] Start discovery request
2020-10-18 10:16:37.639 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-18 10:16:37.692 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-18 10:16:37.701 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-18 10:16:37.718 +03:30 [DBG] Start authorize request
2020-10-18 10:16:37.724 +03:30 [DBG] No user present in authorize request
2020-10-18 10:16:37.738 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:16:37.744 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:16:37.747 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:16:37.748 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:16:37.750 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"faac661b50c34a23b84d32ea6da80dc7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"faac661b50c34a23b84d32ea6da80dc7","code_challenge":"3Ogj93wgJjXTYcLFeFDCtxfSiTa6tE0sx2Cl7C4GtgI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-18 10:16:37.913 +03:30 [INF] Showing login: User is not authenticated
2020-10-18 10:16:37.946 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:16:37.948 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:16:37.966 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:16:37.985 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:16:38.014 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:16:41.131 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:16:41.207 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:16:41.231 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:16:41.314 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:16:41.349 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:16:41.435 +03:30 [INF] {"Username":"salimian.mehrdad@gmail.com","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HM3J5U3A0RS7:00000003","TimeStamp":"2020-10-18T06:46:41.0000000Z","ProcessId":17456,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-18 10:16:41.564 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:16:41.599 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:16:41.657 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:16:41.686 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:16:41.720 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:02.237 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:17:02.277 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:17:02.280 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:02.344 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:17:02.376 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:17:02.491 +03:30 [DBG] Augmenting SignInContext
2020-10-18 10:17:02.495 +03:30 [DBG] Adding idp claim with value: local
2020-10-18 10:17:02.526 +03:30 [DBG] Adding auth_time claim with value: 1603003622
2020-10-18 10:17:02.577 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 10:17:02.646 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3J5U3A0RS7:00000004","TimeStamp":"2020-10-18T06:47:02.0000000Z","ProcessId":17456,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-18 10:17:02.857 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:02.981 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-18 10:17:03.020 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-18 10:17:03.043 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-18 10:17:03.133 +03:30 [DBG] Start authorize callback request
2020-10-18 10:17:03.141 +03:30 [DBG] No user present in authorize request
2020-10-18 10:17:03.175 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:17:03.251 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:03.314 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:17:03.322 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:17:03.348 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8082/callback","AllowedRedirectUris":["http://localhost:8082","http://localhost:8082/callback","http://localhost:8082/silent","http://localhost:8082/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"faac661b50c34a23b84d32ea6da80dc7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"faac661b50c34a23b84d32ea6da80dc7","code_challenge":"3Ogj93wgJjXTYcLFeFDCtxfSiTa6tE0sx2Cl7C4GtgI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-18 10:17:03.646 +03:30 [INF] Showing login: User is not authenticated
2020-10-18 10:17:03.706 +03:30 [DBG] Start authorize request protocol validation
2020-10-18 10:17:03.715 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:03.757 +03:30 [DBG] Checking for PKCE parameters
2020-10-18 10:17:03.815 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-18 10:17:03.863 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:17:30.723 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:17:30.770 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:17:30.818 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:17:30.872 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:17:30.959 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:17:31.003 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:17:31.035 +03:30 [DBG] Start discovery request
2020-10-18 10:17:40.854 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:17:40.866 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:17:40.899 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:17:40.944 +03:30 [DBG] Rendering check session result
2020-10-18 10:18:23.869 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:18:23.892 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:18:23.933 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:18:23.958 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:18:23.977 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:18:23.987 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:18:24.034 +03:30 [DBG] Start discovery request
2020-10-18 10:18:29.442 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:18:29.472 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:18:29.495 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:18:29.517 +03:30 [DBG] Rendering check session result
2020-10-18 10:20:36.983 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:20:37.036 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:20:37.095 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:20:37.121 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:20:37.157 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:20:37.185 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:20:37.252 +03:30 [DBG] Start discovery request
2020-10-18 10:20:41.093 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:20:41.134 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:20:41.157 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:20:41.175 +03:30 [DBG] Rendering check session result
2020-10-18 10:28:17.509 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:28:17.543 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:28:17.559 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:28:17.581 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:28:17.633 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:28:17.662 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:28:17.708 +03:30 [DBG] Start discovery request
2020-10-18 10:28:38.882 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:28:38.919 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:28:38.946 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:28:38.981 +03:30 [DBG] Rendering check session result
2020-10-18 10:29:58.100 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8082
2020-10-18 10:29:58.139 +03:30 [DBG] Client list checked and origin: http://localhost:8082 is allowed
2020-10-18 10:29:58.204 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8082
2020-10-18 10:29:58.235 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-18 10:29:58.260 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-18 10:29:58.275 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-18 10:29:58.317 +03:30 [DBG] Start discovery request
2020-10-18 10:30:12.335 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-18 10:30:12.367 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-18 10:30:12.408 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-18 10:30:12.447 +03:30 [DBG] Rendering check session result
2020-10-18 10:30:59.024 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-18 10:31:18.664 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:31:18.794 +03:30 [DBG] Augmenting SignInContext
2020-10-18 10:31:18.798 +03:30 [DBG] Adding idp claim with value: local
2020-10-18 10:31:18.843 +03:30 [DBG] Adding auth_time claim with value: 1603004478
2020-10-18 10:31:18.913 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 10:31:18.955 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3J5U3A0RSF:00000004","TimeStamp":"2020-10-18T07:01:18.0000000Z","ProcessId":17456,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-18 10:31:19.121 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-18 10:32:05.324 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:32:05.382 +03:30 [WRN] Invalid password for user ca614e25-06e6-416c-b3e1-dad0b43fddff.
2020-10-18 10:32:05.389 +03:30 [WRN] User ca614e25-06e6-416c-b3e1-dad0b43fddff failed to provide the correct password.
2020-10-18 10:32:05.992 +03:30 [INF] {"Username":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HM3J5U3A0RSJ:00000002","TimeStamp":"2020-10-18T07:02:05.0000000Z","ProcessId":17456,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-18 10:32:19.085 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-18 10:32:19.247 +03:30 [DBG] Augmenting SignInContext
2020-10-18 10:32:19.251 +03:30 [DBG] Adding idp claim with value: local
2020-10-18 10:32:19.292 +03:30 [DBG] Adding auth_time claim with value: 1603004539
2020-10-18 10:32:19.321 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-18 10:32:19.357 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3J5U3A0RSJ:00000003","TimeStamp":"2020-10-18T07:02:19.0000000Z","ProcessId":17456,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-18 10:32:19.546 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-18 10:33:51.910 +03:30 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-10-18 10:33:51.931 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-10-18 10:33:51.971 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-10-18 10:33:52.028 +03:30 [DBG] Processing signout request for ca614e25-06e6-416c-b3e1-dad0b43fddff
2020-10-18 10:33:52.073 +03:30 [DBG] Start end session request validation
2020-10-18 10:33:52.117 +03:30 [DBG] Start identity token validation
2020-10-18 10:33:52.135 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:33:52.171 +03:30 [DBG] Client found: frontend / MarketPlace JavaScript Client
2020-10-18 10:33:52.232 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-18 10:33:52.253 +03:30 [DBG] Token validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603003338,"exp":1603003638,"iss":"http://localhost:5000","aud":"frontend","iat":1603003337,"at_hash":"rVm-Amw-QK38Lu3fvejtkQ","s_hash":"cH_KWskTL65ttQ4uAAQJJQ","sid":"-RzS72iSbrREHuE3LqGpLA","sub":"ca614e25-06e6-416c-b3e1-dad0b43fddff","auth_time":1603003292,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-18 10:33:52.505 +03:30 [INF] End session request validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","PostLogOutUri":"http://localhost:8082","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:8082"},"$type":"EndSessionRequestValidationLog"}
2020-10-18 10:33:52.599 +03:30 [DBG] Success validating end session request from frontend
2020-10-18 10:33:53.059 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-18 10:33:53.072 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-18 10:33:53.151 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-18 10:33:53.192 +03:30 [INF] {"SubjectId":"ca614e25-06e6-416c-b3e1-dad0b43fddff","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HM3J5U3A0RSM:00000002","TimeStamp":"2020-10-18T07:03:53.0000000Z","ProcessId":17456,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2020-10-18 10:33:53.843 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-10-18 10:33:53.859 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-10-18 10:33:53.887 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-10-18 10:33:53.921 +03:30 [DBG] Processing signout callback request
2020-10-18 10:33:53.977 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-18 10:33:54.017 +03:30 [DBG] No client front-channel logout URLs
2020-10-18 10:33:54.020 +03:30 [DBG] No client back-channel logout URLs
2020-10-18 10:33:54.055 +03:30 [INF] Successful signout callback.
2020-10-18 10:33:54.085 +03:30 [DBG] No client front-channel iframe urls
2020-10-18 10:33:54.120 +03:30 [DBG] No client back-channel iframe urls
2020-10-18 23:27:47.652 +03:30 [INF] Seeding database...
2020-10-18 23:27:50.556 +03:30 [INF] Done seeding database.
2020-10-18 23:30:06.743 +03:30 [INF] Starting host...
2020-10-18 23:30:07.527 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-18 23:30:07.566 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-18 23:30:07.582 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-18 23:30:07.585 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-18 23:30:07.593 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-18 23:30:07.597 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-18 23:30:07.599 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-18 23:30:07.601 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-18 23:30:08.398 +03:30 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address http://127.0.0.1:5000: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2020-10-18 23:30:09.309 +03:30 [FTL] Host terminated unexpectedly.
System.IO.IOException: Failed to bind to address http://127.0.0.1:5000: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 59
2020-10-19 00:44:37.861 +03:30 [INF] Seeding database...
2020-10-19 00:44:39.884 +03:30 [INF] Done seeding database.
2020-10-19 00:56:06.201 +03:30 [INF] Seeding database...
2020-10-19 00:56:08.368 +03:30 [INF] Done seeding database.
2020-10-19 01:08:50.340 +03:30 [INF] Seeding database...
2020-10-19 01:08:53.554 +03:30 [FTL] Host terminated unexpectedly.
System.ArgumentException: Keyword not supported: 'initial catalog'.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection()
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(DatabaseFacade databaseFacade)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 37
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-19 01:12:24.486 +03:30 [INF] Seeding database...
2020-10-19 01:12:28.194 +03:30 [FTL] Host terminated unexpectedly.
System.InvalidOperationException: No service for type 'Microsoft.AspNetCore.Identity.RoleManager`1[Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 41
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-19 01:19:18.988 +03:30 [INF] Seeding database...
2020-10-19 01:19:23.565 +03:30 [FTL] Host terminated unexpectedly.
System.InvalidOperationException: No service for type 'Microsoft.AspNetCore.Identity.RoleManager`1[Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]]' has been registered.
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 41
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-19 01:29:17.017 +03:30 [INF] Seeding database...
2020-10-19 01:29:23.609 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:d2aaa5a1-7070-4006-a71a-b0b4f9fab8cf
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 60
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-19 01:33:51.963 +03:30 [INF] Seeding database...
2020-10-19 01:33:57.955 +03:30 [DBG] alice already exists
2020-10-19 01:33:58.962 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:e988b767-5d2d-411b-979d-d52123f28e7d
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 95
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-19 01:36:10.545 +03:30 [INF] Seeding database...
2020-10-19 01:36:14.622 +03:30 [DBG] alice already exists
2020-10-19 01:36:14.639 +03:30 [DBG] bob already exists
2020-10-19 01:36:14.650 +03:30 [INF] Done seeding database.
2020-10-19 01:54:37.872 +03:30 [INF] Starting host...
2020-10-19 01:54:38.937 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 01:54:38.975 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 01:54:38.991 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 01:54:39.017 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 01:54:39.029 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 01:54:39.038 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 01:54:39.058 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 01:54:39.061 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 01:54:44.668 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 01:54:44.681 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 01:54:44.693 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 01:54:44.727 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 01:54:44.782 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 01:54:44.833 +03:30 [DBG] Error Url: /home/error
2020-10-19 01:54:44.858 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 04:37:06.533 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:37:06.616 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is not allowed
2020-10-19 04:37:06.628 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:8081
2020-10-19 04:37:06.667 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:37:07.332 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:37:07.357 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:37:07.392 +03:30 [DBG] Start discovery request
2020-10-19 04:43:42.970 +03:30 [INF] Starting host...
2020-10-19 04:43:43.656 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 04:43:43.721 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 04:43:43.749 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 04:43:43.752 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 04:43:43.765 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 04:43:43.767 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 04:43:43.773 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 04:43:43.783 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 04:43:49.247 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 04:43:49.259 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 04:43:49.291 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 04:43:49.367 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 04:43:49.390 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 04:43:49.425 +03:30 [DBG] Error Url: /home/error
2020-10-19 04:43:49.450 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 04:45:18.677 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:45:18.696 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:45:18.712 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:45:18.768 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:45:19.193 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:45:19.225 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:45:19.284 +03:30 [DBG] Start discovery request
2020-10-19 04:46:21.855 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 04:46:22.049 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 04:46:22.080 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 04:46:22.118 +03:30 [DBG] Start authorize request
2020-10-19 04:46:22.158 +03:30 [DBG] No user present in authorize request
2020-10-19 04:46:22.174 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:46:22.230 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:22.293 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:46:22.385 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:46:22.491 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da3d5b7ba8344f3f8f1fc917611aae00","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"da3d5b7ba8344f3f8f1fc917611aae00","code_challenge":"qSXDqhuGJ-rx4SYoyIs7LYK-k3RqXUgN1VOu0IXZHGg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:46:22.981 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 04:46:23.330 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:46:23.335 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:23.406 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:46:23.446 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:46:23.521 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:50.237 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 04:46:50.453 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:46:50.457 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:50.500 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:46:50.519 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:46:56.021 +03:30 [DBG] Augmenting SignInContext
2020-10-19 04:46:56.029 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 04:46:56.060 +03:30 [DBG] Adding auth_time claim with value: 1603070216
2020-10-19 04:46:56.123 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 04:46:56.195 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3JPGTIK55M:00000005","TimeStamp":"2020-10-19T01:16:56.0000000Z","ProcessId":15008,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-19 04:46:56.329 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:56.427 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 04:46:56.466 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 04:46:56.509 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 04:46:56.571 +03:30 [DBG] Start authorize callback request
2020-10-19 04:46:56.601 +03:30 [DBG] No user present in authorize request
2020-10-19 04:46:56.637 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:46:56.677 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:56.726 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:46:56.764 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:46:56.868 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da3d5b7ba8344f3f8f1fc917611aae00","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"da3d5b7ba8344f3f8f1fc917611aae00","code_challenge":"qSXDqhuGJ-rx4SYoyIs7LYK-k3RqXUgN1VOu0IXZHGg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:46:57.304 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 04:46:57.407 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:46:57.414 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:46:57.454 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:46:57.483 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:46:57.532 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:48:35.931 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 04:48:35.987 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:48:36.006 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:48:36.044 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:48:36.068 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:48:36.178 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:48:36.673 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 04:48:36.699 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 04:48:36.735 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 04:48:36.809 +03:30 [DBG] Start authorize callback request
2020-10-19 04:48:36.894 +03:30 [DBG] No user present in authorize request
2020-10-19 04:48:36.897 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:48:36.909 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:48:36.956 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:48:36.986 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:48:37.029 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da3d5b7ba8344f3f8f1fc917611aae00","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"da3d5b7ba8344f3f8f1fc917611aae00","code_challenge":"qSXDqhuGJ-rx4SYoyIs7LYK-k3RqXUgN1VOu0IXZHGg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:48:37.218 +03:30 [INF] Error: User denied consent
2020-10-19 04:48:37.249 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"da3d5b7ba8344f3f8f1fc917611aae00","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"da3d5b7ba8344f3f8f1fc917611aae00","code_challenge":"qSXDqhuGJ-rx4SYoyIs7LYK-k3RqXUgN1VOu0IXZHGg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:48:37.468 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3JPGTIK55M:0000000A","TimeStamp":"2020-10-19T01:18:37.0000000Z","ProcessId":15008,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-19 04:53:06.411 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:53:06.470 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:53:06.513 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:53:06.557 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:53:06.621 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:53:06.656 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:53:06.705 +03:30 [DBG] Start discovery request
2020-10-19 04:53:06.844 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:06.878 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:06.966 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 04:53:07.094 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 04:53:07.166 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 04:53:07.180 +03:30 [DBG] Start authorize request
2020-10-19 04:53:07.189 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:07.230 +03:30 [DBG] No user present in authorize request
2020-10-19 04:53:07.247 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:07.262 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:07.305 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:07.328 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:07.351 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"97e021b4f6944a04a39c3ea8ec2d9daf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"97e021b4f6944a04a39c3ea8ec2d9daf","code_challenge":"CQeTferV8LF2PpwlT-aQrYgdosBMsL_ObMYyYOurDS0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:53:07.532 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 04:53:07.609 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:07.642 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:07.680 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:07.702 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:07.739 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:07.775 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:07.824 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:07.855 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:09.199 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:09.207 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:09.240 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 04:53:09.300 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 04:53:09.331 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 04:53:09.359 +03:30 [DBG] Start authorize request
2020-10-19 04:53:09.376 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:09.418 +03:30 [DBG] No user present in authorize request
2020-10-19 04:53:09.440 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:09.462 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:09.512 +03:30 [ERR] Invalid redirect_uri: http://localhost:8082/callback
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid","state":"5ed49b230c2b477a895561a21d9f643a","code_challenge":"L1hmfOxLIJCU1dUyX7HSfEpUb3ibOYmYDx0vUhSljx4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:53:09.793 +03:30 [ERR] Request validation failed
2020-10-19 04:53:09.836 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid","state":"5ed49b230c2b477a895561a21d9f643a","code_challenge":"L1hmfOxLIJCU1dUyX7HSfEpUb3ibOYmYDx0vUhSljx4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:53:10.091 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3JPGTIK55T:00000002","TimeStamp":"2020-10-19T01:23:10.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2020-10-19 04:53:10.328 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:10.349 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:14.153 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 04:53:14.182 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:14.231 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:14.269 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:14.295 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:14.330 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:14.385 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:14.416 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:14.740 +03:30 [DBG] Augmenting SignInContext
2020-10-19 04:53:14.745 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 04:53:14.762 +03:30 [DBG] Adding auth_time claim with value: 1603070594
2020-10-19 04:53:14.798 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-10-19 04:53:14.882 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 04:53:14.978 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3JPGTIK55T:00000004","TimeStamp":"2020-10-19T01:23:14.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-10-19 04:53:15.188 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:15.292 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 04:53:15.338 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 04:53:15.371 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 04:53:15.406 +03:30 [DBG] Start authorize callback request
2020-10-19 04:53:15.433 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:53:15.463 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:15.488 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:15.552 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:15.579 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:15.655 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"97e021b4f6944a04a39c3ea8ec2d9daf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bGqbbiYHR6kX4FR6yLiUYg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"97e021b4f6944a04a39c3ea8ec2d9daf","code_challenge":"CQeTferV8LF2PpwlT-aQrYgdosBMsL_ObMYyYOurDS0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:53:16.116 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 04:53:16.129 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 04:53:16.154 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 04:53:16.257 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:16.260 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:16.307 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:16.333 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:16.383 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:45.985 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 04:53:46.203 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:46.210 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:46.278 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:46.310 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:46.360 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3JPGTIK55T:00000008","TimeStamp":"2020-10-19T01:23:46.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2020-10-19 04:53:46.651 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:47.086 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 04:53:47.120 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 04:53:47.180 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 04:53:47.213 +03:30 [DBG] Start authorize callback request
2020-10-19 04:53:47.278 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:53:47.298 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:53:47.325 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:47.376 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:53:47.399 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:53:47.443 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"97e021b4f6944a04a39c3ea8ec2d9daf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bGqbbiYHR6kX4FR6yLiUYg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"97e021b4f6944a04a39c3ea8ec2d9daf","code_challenge":"CQeTferV8LF2PpwlT-aQrYgdosBMsL_ObMYyYOurDS0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:53:47.768 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 04:53:47.793 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 04:53:47.851 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-19 04:53:47.896 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-19 04:53:47.923 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:53:48.014 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 04:53:48.122 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HR0A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JPGTIK55T:0000000A","TimeStamp":"2020-10-19T01:23:48.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 04:53:48.368 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"97e021b4f6944a04a39c3ea8ec2d9daf","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 04:53:48.462 +03:30 [DBG] Augmenting SignInContext
2020-10-19 04:53:48.477 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 04:53:51.467 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:53:51.494 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:53:51.527 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:53:51.548 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:53:51.643 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:53:51.865 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:53:51.892 +03:30 [DBG] Start discovery request
2020-10-19 04:53:52.327 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 04:53:52.354 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:53:52.391 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:53:52.430 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 04:53:52.498 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 04:53:52.532 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 04:53:52.596 +03:30 [DBG] Start token request.
2020-10-19 04:53:52.620 +03:30 [DBG] Start client validation
2020-10-19 04:53:52.659 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 04:53:52.687 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 04:53:52.714 +03:30 [DBG] client id without secret found
2020-10-19 04:53:52.748 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 04:53:52.774 +03:30 [DBG] Secret id found: frontend
2020-10-19 04:53:52.802 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:52.862 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 04:53:52.900 +03:30 [DBG] Client validation success
2020-10-19 04:53:52.945 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JPGTIK55Q:00000003","TimeStamp":"2020-10-19T01:23:52.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 04:53:53.097 +03:30 [DBG] Start token request validation
2020-10-19 04:53:53.140 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 04:53:53.249 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 04:53:53.281 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 04:53:53.310 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"asIWqX_xku3EDWOlKD9dKpS12BQEwnrQKHZ3WQYHR0A","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"asIWqX_xku3EDWOlKD9dKpS12BQEwnrQKHZ3WQYHR0A","redirect_uri":"http://localhost:8081/callback","code_verifier":"6cd622cb3a794de592030f8298e0b8f20a6c82410929468a8f600deb5894818336e4ec51a3e3487bbe2cc39f66142bfd","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 04:53:53.535 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:53.593 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 04:53:53.597 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:53:54.336 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:54.378 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 04:53:54.428 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 04:53:54.498 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****dAMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cNYQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JPGTIK55Q:00000003","TimeStamp":"2020-10-19T01:23:54.0000000Z","ProcessId":15008,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 04:53:54.710 +03:30 [DBG] Token request success.
2020-10-19 04:53:54.807 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 04:53:54.833 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:53:54.885 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:53:54.945 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 04:53:54.973 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:53:55.006 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:53:55.026 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 04:53:55.065 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 04:53:55.086 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 04:53:55.174 +03:30 [DBG] Start userinfo request
2020-10-19 04:53:55.194 +03:30 [DBG] Bearer token found in header
2020-10-19 04:53:55.400 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:55.438 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:53:55.546 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 04:53:55.574 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603070634,"exp":1603074234,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603070594,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 04:53:55.774 +03:30 [DBG] Creating userinfo response
2020-10-19 04:53:55.786 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:53:55.811 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:53:55.840 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 04:53:55.856 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:53:55.966 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 04:53:55.975 +03:30 [DBG] End userinfo request
2020-10-19 04:53:56.090 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 04:53:56.127 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 04:53:56.161 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 04:53:56.213 +03:30 [DBG] Rendering check session result
2020-10-19 04:56:56.695 +03:30 [INF] Starting host...
2020-10-19 04:56:57.498 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 04:56:57.544 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 04:56:57.579 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 04:56:57.585 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 04:56:57.588 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 04:56:57.590 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 04:56:57.595 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 04:56:57.598 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 04:57:01.312 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 04:57:01.320 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 04:57:01.342 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 04:57:01.365 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 04:57:01.407 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 04:57:01.425 +03:30 [DBG] Error Url: /home/error
2020-10-19 04:57:01.449 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 04:57:13.899 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:57:13.945 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:57:13.965 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:57:14.009 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:57:14.529 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:57:14.558 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:57:14.610 +03:30 [DBG] Start discovery request
2020-10-19 04:57:15.219 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 04:57:15.248 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 04:57:15.268 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 04:57:15.312 +03:30 [DBG] Start authorize request
2020-10-19 04:57:15.349 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:57:15.395 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:57:15.452 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:57:15.512 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:57:15.598 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:57:15.663 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"3056b7834ed64c6dadd9951b8139a1cc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bGqbbiYHR6kX4FR6yLiUYg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"3056b7834ed64c6dadd9951b8139a1cc","code_challenge":"zVuNDMd4kZHbKdLxr80B0gAUuX1VBAYuF6c1Cg86Z2A","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:57:20.342 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 04:57:20.354 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 04:57:20.391 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 04:57:20.710 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:57:20.716 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:57:20.780 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:57:20.855 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:57:20.945 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:14.405 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 04:59:14.593 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:59:14.597 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:14.657 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:59:14.698 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:59:14.807 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3JPO9E7PF4:00000003","TimeStamp":"2020-10-19T01:29:14.0000000Z","ProcessId":19744,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2020-10-19 04:59:15.116 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:15.229 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 04:59:15.269 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 04:59:15.356 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 04:59:15.417 +03:30 [DBG] Start authorize callback request
2020-10-19 04:59:15.506 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:59:15.514 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 04:59:15.536 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:15.602 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 04:59:15.637 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 04:59:15.703 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"3056b7834ed64c6dadd9951b8139a1cc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bGqbbiYHR6kX4FR6yLiUYg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"3056b7834ed64c6dadd9951b8139a1cc","code_challenge":"zVuNDMd4kZHbKdLxr80B0gAUuX1VBAYuF6c1Cg86Z2A","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 04:59:16.451 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 04:59:16.463 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 04:59:16.530 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-19 04:59:16.564 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-19 04:59:16.593 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:59:16.660 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 04:59:16.733 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4qhE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JPO9E7PF4:00000004","TimeStamp":"2020-10-19T01:29:16.0000000Z","ProcessId":19744,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 04:59:16.914 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"3056b7834ed64c6dadd9951b8139a1cc","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 04:59:21.809 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:59:21.827 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:59:21.925 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 04:59:21.935 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:59:21.961 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:59:22.012 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:59:22.042 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:59:22.118 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:59:22.122 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 04:59:22.171 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:59:22.232 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 04:59:22.270 +03:30 [DBG] Start discovery request
2020-10-19 04:59:22.310 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 04:59:22.350 +03:30 [DBG] Start discovery request
2020-10-19 04:59:39.683 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 04:59:39.721 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 04:59:39.746 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 04:59:39.796 +03:30 [DBG] Rendering check session result
2020-10-19 04:59:41.454 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 04:59:41.483 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:59:41.542 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:59:41.565 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 04:59:41.601 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 04:59:41.641 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 04:59:41.691 +03:30 [DBG] Start token request.
2020-10-19 04:59:41.705 +03:30 [DBG] Start client validation
2020-10-19 04:59:41.741 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 04:59:41.765 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 04:59:41.794 +03:30 [DBG] client id without secret found
2020-10-19 04:59:41.846 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 04:59:41.895 +03:30 [DBG] Secret id found: frontend
2020-10-19 04:59:41.910 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:41.945 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 04:59:41.968 +03:30 [DBG] Client validation success
2020-10-19 04:59:42.004 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JPO9E7PF5:00000002","TimeStamp":"2020-10-19T01:29:42.0000000Z","ProcessId":19744,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 04:59:42.154 +03:30 [DBG] Start token request validation
2020-10-19 04:59:42.190 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 04:59:42.284 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 04:59:42.345 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 04:59:42.362 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"qqHI-bK4pVl-EoeTAFrXSanFauEUycZsqqxcj4E4qhE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"qqHI-bK4pVl-EoeTAFrXSanFauEUycZsqqxcj4E4qhE","redirect_uri":"http://localhost:8081/callback","code_verifier":"9350ea13f35843aca31f1f734ab47a7976847741326e4ab6b1d678dae881da966f4c5b94f94d47cab4d0c81385ac0fc8","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 04:59:42.575 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:42.638 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 04:59:42.646 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 04:59:43.453 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:43.501 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 04:59:43.523 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 04:59:43.570 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****s0xw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****m8Ag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JPO9E7PF5:00000002","TimeStamp":"2020-10-19T01:29:43.0000000Z","ProcessId":19744,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 04:59:43.783 +03:30 [DBG] Token request success.
2020-10-19 04:59:44.877 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 04:59:44.930 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:59:44.958 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:59:45.151 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 04:59:45.187 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 04:59:45.231 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 04:59:45.259 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 04:59:45.334 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 04:59:45.428 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 04:59:45.509 +03:30 [DBG] Start userinfo request
2020-10-19 04:59:45.567 +03:30 [DBG] Bearer token found in header
2020-10-19 04:59:45.722 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:45.768 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 04:59:45.846 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 04:59:45.897 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603070983,"exp":1603074583,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603070594,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 04:59:46.137 +03:30 [DBG] Creating userinfo response
2020-10-19 04:59:46.184 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:59:46.247 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:59:46.314 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 04:59:46.372 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 04:59:46.496 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 04:59:46.500 +03:30 [DBG] End userinfo request
2020-10-19 09:17:52.529 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:17:52.543 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:17:52.554 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:17:52.563 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:17:52.573 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:17:52.582 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:17:52.603 +03:30 [DBG] Start discovery request
2020-10-19 09:18:11.146 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 09:18:11.180 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 09:18:11.220 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 09:18:11.256 +03:30 [DBG] Rendering check session result
2020-10-19 09:21:41.136 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:21:41.189 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:21:41.273 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:21:41.277 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:21:41.321 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:21:41.354 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:21:41.381 +03:30 [DBG] Start discovery request
2020-10-19 09:22:07.000 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 09:22:07.010 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 09:22:07.056 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 09:22:07.107 +03:30 [DBG] Rendering check session result
2020-10-19 09:31:19.154 +03:30 [INF] Starting host...
2020-10-19 09:31:21.273 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 09:31:21.386 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 09:31:21.405 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 09:31:21.407 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 09:31:21.408 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 09:31:21.408 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 09:31:21.409 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 09:31:21.410 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 09:31:39.516 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 09:31:39.539 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 09:31:39.541 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 09:31:39.542 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 09:31:39.544 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 09:31:39.558 +03:30 [DBG] Error Url: /home/error
2020-10-19 09:31:39.569 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 09:33:04.150 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:33:04.194 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:33:04.258 +03:30 [ERR] Invalid redirect_uri: http://localhost:8082/callback
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8082/callback","response_type":"code","scope":"openid profile backend","state":"4bbe72a767d64cbca1303f02d51f162d","code_challenge":"2JrjY5xrTeLPRgzmkP__8iStZ0io6Z6aNAd3e_G4jeA","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:36:55.749 +03:30 [INF] Starting host...
2020-10-19 09:36:56.351 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 09:36:56.385 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 09:36:56.399 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 09:36:56.400 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 09:36:56.401 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 09:36:56.402 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 09:36:56.403 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 09:36:56.404 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 09:36:58.832 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 09:36:58.838 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 09:36:58.843 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 09:36:58.845 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 09:36:58.850 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 09:36:58.851 +03:30 [DBG] Error Url: /home/error
2020-10-19 09:36:58.853 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 09:41:20.838 +03:30 [INF] Starting host...
2020-10-19 09:41:21.594 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 09:41:21.638 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 09:41:21.712 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 09:41:21.719 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 09:41:21.721 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 09:41:21.721 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 09:41:21.722 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 09:41:21.723 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 09:41:25.004 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 09:41:25.028 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 09:41:25.047 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 09:41:25.067 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 09:41:25.068 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 09:41:25.072 +03:30 [DBG] Error Url: /home/error
2020-10-19 09:41:25.079 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 09:44:59.310 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:44:59.328 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:44:59.337 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:44:59.353 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:44:59.699 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:44:59.705 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:44:59.713 +03:30 [DBG] Start discovery request
2020-10-19 09:45:00.137 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 09:45:00.153 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 09:45:00.156 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 09:45:00.164 +03:30 [DBG] Start authorize request
2020-10-19 09:45:00.189 +03:30 [DBG] No user present in authorize request
2020-10-19 09:45:00.195 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:45:00.229 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:45:00.259 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:45:00.322 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:45:00.366 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"2bee221517c349539f1629139581e51a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"2bee221517c349539f1629139581e51a","code_challenge":"JeBJ6lbuBLn3r8q3P_a8Mdz99W16e40l_f1JQAhK5GM","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:45:00.472 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 09:45:00.605 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:45:00.611 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:45:00.632 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:45:00.639 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:45:00.658 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:46:35.472 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:46:35.504 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:46:35.508 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:46:35.515 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:46:35.529 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:46:35.537 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:46:35.540 +03:30 [DBG] Start discovery request
2020-10-19 09:47:28.776 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 09:47:28.786 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 09:47:28.789 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 09:47:28.799 +03:30 [DBG] Start authorize request
2020-10-19 09:47:28.802 +03:30 [DBG] No user present in authorize request
2020-10-19 09:47:28.805 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:47:28.810 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:47:28.819 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:47:28.825 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:47:28.835 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"f9ad917bd4344e3584da6f4dd7a386ab","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"f9ad917bd4344e3584da6f4dd7a386ab","code_challenge":"i7s2090UQzzTIK4OLeSIzCSRoyHVc68U2LM_sX1cUpI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:47:28.876 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 09:47:28.904 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:47:28.905 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:47:28.908 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:47:28.910 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:47:28.912 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:48:32.597 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:48:32.699 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:48:32.707 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:48:32.718 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:48:32.789 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:48:32.793 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:48:32.804 +03:30 [DBG] Start discovery request
2020-10-19 09:52:14.579 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:52:14.626 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:52:14.636 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:52:14.640 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:52:14.645 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:52:14.653 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:52:14.656 +03:30 [DBG] Start discovery request
2020-10-19 09:52:54.280 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 09:52:54.302 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 09:52:54.307 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 09:52:54.316 +03:30 [DBG] Start authorize request
2020-10-19 09:52:54.317 +03:30 [DBG] No user present in authorize request
2020-10-19 09:52:54.319 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:52:54.321 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:52:54.329 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:52:54.339 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:52:54.344 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"642cd63a405b41bdaa34acccdd923a55","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"642cd63a405b41bdaa34acccdd923a55","code_challenge":"2ueFLV6bylFfRGb3CYX_9xD8t7hXwaJIQGBUtQatxak","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:52:54.382 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 09:52:54.404 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:52:54.405 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:52:54.411 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:52:54.414 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:52:54.419 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:55:30.485 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 09:55:30.496 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 09:55:30.516 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 09:55:30.522 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 09:55:30.529 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 09:55:30.531 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 09:55:30.536 +03:30 [DBG] Start discovery request
2020-10-19 09:56:25.043 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 09:56:25.053 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 09:56:25.055 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 09:56:25.057 +03:30 [DBG] Start authorize request
2020-10-19 09:56:25.059 +03:30 [DBG] No user present in authorize request
2020-10-19 09:56:25.060 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:56:25.061 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:25.064 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:56:25.069 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:56:25.077 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"7c86a84c331248a4a8dc7f4f7b233252","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"7c86a84c331248a4a8dc7f4f7b233252","code_challenge":"-fHyAc41EnwlguIkmjAmGcYxy72QEMDIB3f_Z14s07E","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:56:25.108 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 09:56:25.129 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:56:25.137 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:25.144 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:56:25.149 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:56:25.158 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:47.612 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 09:56:47.734 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:56:47.736 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:47.759 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:56:47.772 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:56:53.681 +03:30 [DBG] Augmenting SignInContext
2020-10-19 09:56:53.686 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 09:56:53.688 +03:30 [DBG] Adding auth_time claim with value: 1603088813
2020-10-19 09:56:53.733 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 09:56:53.781 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3JUN70DBO2:00000005","TimeStamp":"2020-10-19T06:26:53.0000000Z","ProcessId":3296,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-19 09:56:53.800 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:53.903 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 09:56:53.918 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 09:56:53.923 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 09:56:53.939 +03:30 [DBG] Start authorize callback request
2020-10-19 09:56:53.955 +03:30 [DBG] No user present in authorize request
2020-10-19 09:56:53.957 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:56:53.959 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:53.960 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:56:53.968 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:56:53.982 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"7c86a84c331248a4a8dc7f4f7b233252","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"7c86a84c331248a4a8dc7f4f7b233252","code_challenge":"-fHyAc41EnwlguIkmjAmGcYxy72QEMDIB3f_Z14s07E","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 09:56:54.020 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 09:56:54.061 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 09:56:54.064 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 09:56:54.074 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 09:56:54.076 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 09:56:54.079 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:04:41.805 +03:30 [INF] Starting host...
2020-10-19 10:04:42.474 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 10:04:42.521 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 10:04:42.538 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 10:04:42.543 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 10:04:42.544 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 10:04:42.545 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 10:04:42.547 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 10:04:42.547 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 10:04:45.259 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 10:04:45.264 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 10:04:45.267 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 10:04:45.268 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 10:04:45.269 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 10:04:45.270 +03:30 [DBG] Error Url: /home/error
2020-10-19 10:04:45.272 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 10:07:14.336 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:07:14.355 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:07:14.358 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:07:14.372 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:07:14.802 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:07:14.818 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:07:14.833 +03:30 [DBG] Start discovery request
2020-10-19 10:07:23.781 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:07:23.808 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:07:23.809 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:07:23.814 +03:30 [DBG] Start authorize request
2020-10-19 10:07:23.832 +03:30 [DBG] No user present in authorize request
2020-10-19 10:07:23.836 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:07:23.863 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:23.898 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:07:23.952 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:07:23.988 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8519d378275d41ecb2c73781d4748cf3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"8519d378275d41ecb2c73781d4748cf3","code_challenge":"u7KHgTpFaTGnV6vge-nN032PYMBNSfbxpHnV158zIw0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:07:24.067 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 10:07:24.234 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:07:24.237 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:24.244 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:07:24.246 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:07:24.254 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:45.730 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 10:07:45.851 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:07:45.854 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:45.861 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:07:45.865 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:07:51.180 +03:30 [DBG] Augmenting SignInContext
2020-10-19 10:07:51.185 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 10:07:51.187 +03:30 [DBG] Adding auth_time claim with value: 1603089471
2020-10-19 10:07:51.228 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 10:07:51.294 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3JV48BKAND:00000004","TimeStamp":"2020-10-19T06:37:51.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-19 10:07:51.318 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:51.442 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 10:07:51.452 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 10:07:51.455 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 10:07:51.469 +03:30 [DBG] Start authorize callback request
2020-10-19 10:07:51.484 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:07:51.488 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:07:51.496 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:51.504 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:07:51.508 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:07:51.513 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8519d378275d41ecb2c73781d4748cf3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"8519d378275d41ecb2c73781d4748cf3","code_challenge":"u7KHgTpFaTGnV6vge-nN032PYMBNSfbxpHnV158zIw0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:07:51.787 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 10:07:51.789 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 10:07:51.810 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 10:07:51.898 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:07:51.900 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:07:51.910 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:07:51.917 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:07:51.930 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:32.592 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 10:08:32.802 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:08:32.804 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:32.809 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:08:32.812 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:08:32.819 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3JV48BKANF:00000004","TimeStamp":"2020-10-19T06:38:32.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-10-19 10:08:32.911 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:33.312 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 10:08:33.321 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 10:08:33.324 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 10:08:33.327 +03:30 [DBG] Start authorize callback request
2020-10-19 10:08:33.411 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:08:33.417 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:08:33.420 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:33.426 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:08:33.432 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:08:33.436 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8519d378275d41ecb2c73781d4748cf3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"8519d378275d41ecb2c73781d4748cf3","code_challenge":"u7KHgTpFaTGnV6vge-nN032PYMBNSfbxpHnV158zIw0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:08:33.521 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 10:08:33.526 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 10:08:33.538 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-19 10:08:33.544 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-19 10:08:33.553 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:08:33.601 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:08:33.681 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****faig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANF:00000006","TimeStamp":"2020-10-19T06:38:33.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:08:33.704 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"8519d378275d41ecb2c73781d4748cf3","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:08:33.746 +03:30 [DBG] Augmenting SignInContext
2020-10-19 10:08:33.749 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 10:08:46.163 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:08:46.199 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:08:46.221 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:08:46.226 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:08:46.232 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:08:46.267 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:08:46.272 +03:30 [DBG] Start discovery request
2020-10-19 10:08:46.426 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:08:46.434 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:08:46.437 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:08:46.440 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:08:46.454 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:08:46.458 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:08:46.472 +03:30 [DBG] Start token request.
2020-10-19 10:08:46.478 +03:30 [DBG] Start client validation
2020-10-19 10:08:46.489 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:08:46.495 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:08:46.496 +03:30 [DBG] client id without secret found
2020-10-19 10:08:46.498 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:08:46.499 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:08:46.502 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:46.505 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:08:46.521 +03:30 [DBG] Client validation success
2020-10-19 10:08:46.527 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANE:00000003","TimeStamp":"2020-10-19T06:38:46.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:08:46.545 +03:30 [DBG] Start token request validation
2020-10-19 10:08:46.556 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:08:46.619 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:08:46.650 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:08:46.665 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"cVFOtOtHkATg6ObZOiPI39j4s2DlMemxS5tXoDAfaig","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"cVFOtOtHkATg6ObZOiPI39j4s2DlMemxS5tXoDAfaig","redirect_uri":"http://localhost:8081/callback","code_verifier":"1fcc2184739e4e89b02bc4df6fe28094860b2f2cc31541f79eeae86fb359c3380001d43c3a0943aaa7490530a0081e6d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:08:46.692 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:46.715 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:08:46.717 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:08:47.370 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:47.386 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:08:47.393 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:08:47.412 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****iThQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XDtw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANE:00000003","TimeStamp":"2020-10-19T06:38:47.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:08:47.439 +03:30 [DBG] Token request success.
2020-10-19 10:08:47.493 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:08:47.512 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:08:47.520 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:08:47.534 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:08:47.539 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:08:47.550 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:08:47.559 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 10:08:47.569 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 10:08:47.570 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 10:08:47.582 +03:30 [DBG] Start userinfo request
2020-10-19 10:08:47.593 +03:30 [DBG] Bearer token found in header
2020-10-19 10:08:47.731 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:47.774 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:08:47.804 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 10:08:47.822 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603089527,"exp":1603093127,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 10:08:47.854 +03:30 [DBG] Creating userinfo response
2020-10-19 10:08:47.863 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:08:47.868 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:08:47.872 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 10:08:47.874 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:08:47.905 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 10:08:47.908 +03:30 [DBG] End userinfo request
2020-10-19 10:08:47.976 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:08:47.992 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:08:48.005 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:08:48.017 +03:30 [DBG] Rendering check session result
2020-10-19 10:10:32.974 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:10:32.986 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:10:32.989 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:10:32.993 +03:30 [DBG] Start authorize request
2020-10-19 10:10:33.003 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:10:33.008 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:10:33.016 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:10:33.021 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:10:33.025 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:10:33.032 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"f5fb0cb71b7c4ba894997a8f14e8c189","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"f5fb0cb71b7c4ba894997a8f14e8c189","code_challenge":"bnxHkwuQkNZvgayllAsGsMXLRgOpI9tqczPOu2NQ6Ig","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:10:33.114 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:10:33.119 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:10:33.124 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cMKs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANF:00000008","TimeStamp":"2020-10-19T06:40:33.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:10:33.226 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"f5fb0cb71b7c4ba894997a8f14e8c189","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:10:41.927 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:10:41.935 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:10:41.946 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:10:41.950 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:10:41.961 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:10:41.965 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:10:41.968 +03:30 [DBG] Start discovery request
2020-10-19 10:10:42.028 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:10:42.033 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:10:42.036 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:10:42.040 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:10:42.043 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:10:42.046 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:10:42.049 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:10:42.059 +03:30 [DBG] Rendering check session result
2020-10-19 10:10:42.062 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:10:42.067 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:10:42.078 +03:30 [DBG] Start discovery request
2020-10-19 10:10:42.162 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:10:42.170 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:10:42.182 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:10:42.186 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:10:42.192 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:10:42.201 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:10:42.204 +03:30 [DBG] Start token request.
2020-10-19 10:10:42.205 +03:30 [DBG] Start client validation
2020-10-19 10:10:42.207 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:10:42.210 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:10:42.218 +03:30 [DBG] client id without secret found
2020-10-19 10:10:42.222 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:10:42.224 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:10:42.227 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:10:42.236 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:10:42.240 +03:30 [DBG] Client validation success
2020-10-19 10:10:42.247 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANG:00000002","TimeStamp":"2020-10-19T06:40:42.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:10:42.255 +03:30 [DBG] Start token request validation
2020-10-19 10:10:42.270 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:10:42.273 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:10:42.289 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:10:42.292 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"L9aMY4vnA0hiLhzZV04ffSgTIejIMKwXwqWBXCncMKs","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"L9aMY4vnA0hiLhzZV04ffSgTIejIMKwXwqWBXCncMKs","redirect_uri":"http://localhost:8081/callback","code_verifier":"62f3677282244ae38f8d810f29670865f62005a036de476580bbe9f72bd4e54bd53b9b2bdd47426aa2a74841cf281c51","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:10:42.312 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:10:42.322 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:10:42.332 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:10:42.381 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:10:42.386 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:10:42.389 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:10:42.398 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****gRhg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****D1WA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANG:00000002","TimeStamp":"2020-10-19T06:40:42.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:10:42.418 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:10:42.426 +03:30 [DBG] Token request success.
2020-10-19 10:10:42.444 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:10:42.446 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:10:42.451 +03:30 [DBG] Start authorize request
2020-10-19 10:10:42.453 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:10:42.456 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:10:42.459 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:10:42.472 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:10:42.476 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:10:42.485 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4aef781b9b634c54a4dc457d0b27d1ec","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"4aef781b9b634c54a4dc457d0b27d1ec","code_challenge":"2IxFi-VDKUSbbiEZNHF9pesTnfS-RYUqta_wekmvSFI","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:10:42.545 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:10:42.549 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:10:42.554 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****p_lo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANF:0000000A","TimeStamp":"2020-10-19T06:40:42.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:10:42.586 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"4aef781b9b634c54a4dc457d0b27d1ec","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:31:48.099 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:31:48.142 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:31:48.156 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:31:48.159 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:31:48.163 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:31:48.169 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:31:48.175 +03:30 [DBG] Start discovery request
2020-10-19 10:32:00.670 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:32:00.697 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:32:00.728 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:32:00.735 +03:30 [DBG] Start authorize request
2020-10-19 10:32:00.737 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:32:00.742 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:32:00.744 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:00.748 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:32:00.751 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:32:00.756 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"7dad149d6e4f40f1926372476e3c7896","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"7dad149d6e4f40f1926372476e3c7896","code_challenge":"n-tmJIUG9yHB9etQfnor86QDH8H_2GsxiyD4oP5cyWQ","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:32:01.167 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:32:01.172 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:32:01.179 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****aylI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANI:00000001","TimeStamp":"2020-10-19T07:02:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:32:01.191 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7dad149d6e4f40f1926372476e3c7896","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:32:16.477 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:32:16.583 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:32:16.623 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:32:16.629 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:32:16.656 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:32:16.712 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:32:16.714 +03:30 [DBG] Start discovery request
2020-10-19 10:32:17.007 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:32:17.012 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:32:17.015 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:32:17.019 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:32:17.082 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:32:17.119 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:32:17.120 +03:30 [DBG] Start token request.
2020-10-19 10:32:17.126 +03:30 [DBG] Start client validation
2020-10-19 10:32:17.126 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:32:17.128 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:32:17.130 +03:30 [DBG] client id without secret found
2020-10-19 10:32:17.131 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:32:17.132 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:32:17.134 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:17.141 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:32:17.148 +03:30 [DBG] Client validation success
2020-10-19 10:32:17.150 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANH:00000003","TimeStamp":"2020-10-19T07:02:17.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:32:17.156 +03:30 [DBG] Start token request validation
2020-10-19 10:32:17.157 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:32:17.160 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:32:17.189 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:32:17.190 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"MW4qB2fMgzdRIck1LidBT0E-YGUELv9T8mz1HRGaylI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"MW4qB2fMgzdRIck1LidBT0E-YGUELv9T8mz1HRGaylI","redirect_uri":"http://localhost:8081/callback","code_verifier":"22efa8b0dca24562a1e87d5e86cfb4873170d5837cb64553a7a15ef70625fc51db9d29df64fd4178bc7b8ce3f8e54834","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:32:17.198 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:17.200 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:32:17.201 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:32:17.256 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:17.259 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:32:17.260 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:32:17.267 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****CjFA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3Gwg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANH:00000003","TimeStamp":"2020-10-19T07:02:17.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:32:17.278 +03:30 [DBG] Token request success.
2020-10-19 10:32:17.309 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:32:17.312 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:32:17.316 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:32:17.324 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:32:17.329 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:32:17.331 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:32:17.333 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 10:32:17.339 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 10:32:17.341 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 10:32:17.345 +03:30 [DBG] Start userinfo request
2020-10-19 10:32:17.346 +03:30 [DBG] Bearer token found in header
2020-10-19 10:32:17.350 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:17.358 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:17.383 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 10:32:17.388 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603090937,"exp":1603094537,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 10:32:17.408 +03:30 [DBG] Creating userinfo response
2020-10-19 10:32:17.410 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:32:17.413 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:32:17.417 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 10:32:17.419 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:32:17.462 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 10:32:17.465 +03:30 [DBG] End userinfo request
2020-10-19 10:32:17.504 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:32:17.508 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:32:17.513 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:32:17.516 +03:30 [DBG] Rendering check session result
2020-10-19 10:32:27.807 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:32:27.834 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:32:27.836 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:32:27.856 +03:30 [DBG] Start authorize request
2020-10-19 10:32:27.867 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:32:27.906 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:32:27.916 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:32:27.923 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:32:27.926 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:32:27.949 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e4f28eb522be437c858ebed954511421","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e4f28eb522be437c858ebed954511421","code_challenge":"gbGrEYYNL3FTgNKinzNS9Pu8PuEjj7tllmLX2TnSvyo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:32:28.013 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:32:28.015 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:32:28.024 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****exOU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANI:00000003","TimeStamp":"2020-10-19T07:02:28.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:32:28.038 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e4f28eb522be437c858ebed954511421","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:32:28.234 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:32:28.238 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:32:28.242 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:32:28.244 +03:30 [DBG] Start discovery request
2020-10-19 10:32:29.346 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-19 10:32:29.354 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-19 10:32:29.360 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-19 10:32:29.372 +03:30 [DBG] Start key discovery request
2020-10-19 10:35:17.897 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:35:17.930 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:35:17.973 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:35:17.978 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:35:17.983 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:35:17.985 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:35:17.988 +03:30 [DBG] Start discovery request
2020-10-19 10:35:41.143 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:35:41.149 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:35:41.151 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:35:41.156 +03:30 [DBG] Start authorize request
2020-10-19 10:35:41.158 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:35:41.159 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:35:41.162 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:35:41.166 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:35:41.169 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:35:41.177 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"e76dfb665acc471c8ee7f2d1d8ccc55a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"e76dfb665acc471c8ee7f2d1d8ccc55a","code_challenge":"S2rzkIEs0qb0wzwJsr3rLhlOJhh95XlnrbaUf33SyDI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:35:41.224 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:35:41.232 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:35:41.237 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****VSB4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANI:00000004","TimeStamp":"2020-10-19T07:05:41.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:35:41.252 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e76dfb665acc471c8ee7f2d1d8ccc55a","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:36:06.554 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:36:06.557 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:36:06.563 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:36:06.570 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:36:06.587 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:36:06.591 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:36:06.595 +03:30 [DBG] Start discovery request
2020-10-19 10:36:06.803 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:36:06.815 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:36:06.816 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:36:06.819 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:36:06.821 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:36:06.823 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:36:06.825 +03:30 [DBG] Start token request.
2020-10-19 10:36:06.825 +03:30 [DBG] Start client validation
2020-10-19 10:36:06.827 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:36:06.828 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:36:06.852 +03:30 [DBG] client id without secret found
2020-10-19 10:36:06.854 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:36:06.856 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:36:06.857 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:36:06.859 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:36:06.868 +03:30 [DBG] Client validation success
2020-10-19 10:36:06.875 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANH:00000008","TimeStamp":"2020-10-19T07:06:06.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:36:06.894 +03:30 [DBG] Start token request validation
2020-10-19 10:36:06.895 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:36:06.898 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:36:06.932 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:36:06.934 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"7m_e26OQZT-9NnxW_X7ndPcwrw6WFzXCF9vwvhgVSB4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"7m_e26OQZT-9NnxW_X7ndPcwrw6WFzXCF9vwvhgVSB4","redirect_uri":"http://localhost:8081/callback","code_verifier":"44b17ccc418448d988fb595c4bf82f205874e84857644d20966055de42c2dc7421eb29a4ce7247c6b162179fd8c8c90b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:36:06.947 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:36:06.949 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:36:06.950 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:36:07.152 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:36:07.157 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:36:07.158 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:36:07.169 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****5j8w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZiAw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANH:00000008","TimeStamp":"2020-10-19T07:06:07.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:36:07.185 +03:30 [DBG] Token request success.
2020-10-19 10:36:07.485 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:36:07.490 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:36:07.491 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:36:07.500 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 10:36:07.503 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:36:07.509 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:36:07.512 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 10:36:07.526 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 10:36:07.531 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 10:36:07.538 +03:30 [DBG] Start userinfo request
2020-10-19 10:36:07.543 +03:30 [DBG] Bearer token found in header
2020-10-19 10:36:07.549 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:36:07.553 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:36:07.576 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 10:36:07.579 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603091167,"exp":1603094767,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 10:36:07.591 +03:30 [DBG] Creating userinfo response
2020-10-19 10:36:07.593 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:36:07.594 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:36:07.595 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 10:36:07.599 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 10:36:07.685 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 10:36:07.687 +03:30 [DBG] End userinfo request
2020-10-19 10:36:07.744 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:36:07.746 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:36:07.750 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:36:07.753 +03:30 [DBG] Rendering check session result
2020-10-19 10:37:30.426 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:37:30.468 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:37:30.501 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:37:30.503 +03:30 [DBG] Start authorize request
2020-10-19 10:37:30.504 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:37:30.507 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:37:30.509 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:37:30.514 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:37:30.520 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:37:30.528 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"dc59898194a546b8a5e1e931dcb75985","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"dc59898194a546b8a5e1e931dcb75985","code_challenge":"0OVXOOVn2l1xLnXjTmdGW8CqlxoxfAk-SEaDylq8asw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:37:30.669 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:37:30.674 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:37:30.676 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****O50o","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANI:00000006","TimeStamp":"2020-10-19T07:07:30.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:37:30.684 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"dc59898194a546b8a5e1e931dcb75985","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:43:26.348 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:43:26.396 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:43:26.410 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:43:26.413 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:43:26.472 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:43:26.490 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:43:26.508 +03:30 [DBG] Start discovery request
2020-10-19 10:43:27.376 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:43:27.378 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:43:27.380 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:43:27.384 +03:30 [DBG] Rendering check session result
2020-10-19 10:43:34.839 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:43:34.843 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:43:34.847 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:43:34.852 +03:30 [DBG] Start authorize request
2020-10-19 10:43:34.853 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:43:34.855 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:43:34.856 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:43:34.858 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:43:34.860 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:43:34.870 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"abcb98c6afc241048610d6435c9e7d15","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"abcb98c6afc241048610d6435c9e7d15","code_challenge":"AlwmnxwLI9V7opUmJICREDwE0ka425IKZY8xoPm6H2c","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:43:34.927 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:43:34.930 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:43:34.934 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****h6K8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANN:00000002","TimeStamp":"2020-10-19T07:13:34.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:43:34.944 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"abcb98c6afc241048610d6435c9e7d15","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:43:45.826 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:43:45.836 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:43:45.836 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:43:45.839 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:43:45.862 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:43:45.942 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:43:45.986 +03:30 [DBG] Start discovery request
2020-10-19 10:57:16.085 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:57:16.091 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:16.093 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:16.101 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:57:16.110 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:57:16.124 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:57:16.126 +03:30 [DBG] Start discovery request
2020-10-19 10:57:16.224 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:57:16.226 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:57:16.227 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:57:16.229 +03:30 [DBG] Rendering check session result
2020-10-19 10:57:16.543 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:57:16.596 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:57:16.599 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:57:16.604 +03:30 [DBG] Start authorize request
2020-10-19 10:57:16.605 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:57:16.607 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:57:16.608 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:16.610 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:57:16.612 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:57:16.614 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"3a72281421304ef4a60db4f789624629","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"3a72281421304ef4a60db4f789624629","code_challenge":"WgxWkEftqmZTYGRT0Rkxr9D0fFiokkCJJWsD7k99STE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:57:18.424 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:57:18.426 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:57:18.431 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****p9fo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANP:00000002","TimeStamp":"2020-10-19T07:27:18.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:57:18.438 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"3a72281421304ef4a60db4f789624629","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:57:21.843 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:57:21.846 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:21.852 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:21.855 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:57:21.858 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:57:21.861 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:57:21.868 +03:30 [DBG] Start discovery request
2020-10-19 10:57:21.884 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:57:21.887 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:21.894 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:21.907 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:57:21.913 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:57:21.915 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:57:21.917 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:57:21.921 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:57:21.925 +03:30 [DBG] Start discovery request
2020-10-19 10:57:21.929 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:57:21.935 +03:30 [DBG] Rendering check session result
2020-10-19 10:57:22.033 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:57:22.045 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:22.047 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:22.048 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:57:22.050 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:57:22.053 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:57:22.058 +03:30 [DBG] Start token request.
2020-10-19 10:57:22.059 +03:30 [DBG] Start client validation
2020-10-19 10:57:22.061 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:57:22.062 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:57:22.063 +03:30 [DBG] client id without secret found
2020-10-19 10:57:22.064 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:57:22.065 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:57:22.069 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:22.071 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:57:22.072 +03:30 [DBG] Client validation success
2020-10-19 10:57:22.073 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANQ:00000002","TimeStamp":"2020-10-19T07:27:22.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:57:22.083 +03:30 [DBG] Start token request validation
2020-10-19 10:57:22.094 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:57:22.104 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:57:22.121 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:57:22.123 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"TjiyINqGyMTQ6TUyd2H1MVStCCOcupTOSA26Q0ap9fo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"TjiyINqGyMTQ6TUyd2H1MVStCCOcupTOSA26Q0ap9fo","redirect_uri":"http://localhost:8081/callback","code_verifier":"cbcc00dd7efa4fa397e7d23217e7f730978b50ee7308424a904204f07522d12d53373822664442b49e19034e798de0d9","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:57:22.139 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:22.140 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:57:22.141 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:57:22.200 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:22.203 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:57:22.203 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:57:22.212 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****UfNg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8p9g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANQ:00000002","TimeStamp":"2020-10-19T07:27:22.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:57:22.243 +03:30 [DBG] Token request success.
2020-10-19 10:57:22.545 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:57:22.547 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:57:22.548 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:57:22.551 +03:30 [DBG] Start authorize request
2020-10-19 10:57:22.553 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:57:22.555 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:57:22.556 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:22.559 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:57:22.561 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:57:22.562 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"62f8bae2c3f542a4bd06ef5ff451e25f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"62f8bae2c3f542a4bd06ef5ff451e25f","code_challenge":"HzXvNSJvdorQ23vYFwBYxTJfCDKuk27_k1Lpltz4aBc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:57:22.613 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:57:22.615 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:57:22.618 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ZhIo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANP:00000004","TimeStamp":"2020-10-19T07:27:22.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:57:22.632 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"62f8bae2c3f542a4bd06ef5ff451e25f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:57:22.827 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 10:57:22.830 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 10:57:22.834 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 10:57:22.836 +03:30 [DBG] Start authorize request
2020-10-19 10:57:22.838 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:57:22.840 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 10:57:22.841 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:22.846 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 10:57:22.848 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 10:57:22.852 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"41790fb20ec54caaae88dbf00f9950c2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"41790fb20ec54caaae88dbf00f9950c2","code_challenge":"HMmeRtL2K08l6jqNTUCCDPajGlfRdxrb1rqcusuNSEA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 10:57:22.886 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 10:57:22.889 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 10:57:22.892 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****05hc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANP:00000005","TimeStamp":"2020-10-19T07:27:22.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:57:22.902 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"41790fb20ec54caaae88dbf00f9950c2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 10:57:25.698 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:57:25.712 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:25.716 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:25.719 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:57:25.723 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:57:25.724 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:57:25.727 +03:30 [DBG] Start discovery request
2020-10-19 10:57:25.733 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 10:57:25.740 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:25.742 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:25.751 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 10:57:25.755 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 10:57:25.757 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 10:57:25.759 +03:30 [DBG] Start discovery request
2020-10-19 10:57:25.783 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 10:57:25.794 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 10:57:25.799 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 10:57:25.805 +03:30 [DBG] Rendering check session result
2020-10-19 10:57:25.880 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 10:57:25.883 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 10:57:25.885 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 10:57:25.887 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 10:57:25.889 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 10:57:25.891 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 10:57:25.894 +03:30 [DBG] Start token request.
2020-10-19 10:57:25.894 +03:30 [DBG] Start client validation
2020-10-19 10:57:25.895 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 10:57:25.897 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 10:57:25.900 +03:30 [DBG] client id without secret found
2020-10-19 10:57:25.901 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 10:57:25.902 +03:30 [DBG] Secret id found: frontend
2020-10-19 10:57:25.905 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:25.906 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 10:57:25.909 +03:30 [DBG] Client validation success
2020-10-19 10:57:25.911 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANO:00000004","TimeStamp":"2020-10-19T07:27:25.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 10:57:25.920 +03:30 [DBG] Start token request validation
2020-10-19 10:57:25.922 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 10:57:25.926 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 10:57:25.957 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 10:57:25.959 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"CC7dPNDikzqG_QREz1LO7VAl-rIafSAeWupiyHjZhIo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"CC7dPNDikzqG_QREz1LO7VAl-rIafSAeWupiyHjZhIo","redirect_uri":"http://localhost:8081/callback","code_verifier":"f81eb8323ae448a8adaf6756ef8fe7faf05ce798e86940109fee4dd230501342589ebff1753148cd87cd6d402fde4f66","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 10:57:25.966 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:25.968 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 10:57:25.969 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 10:57:26.046 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 10:57:26.049 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 10:57:26.052 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 10:57:26.060 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****eJlw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eLhw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANO:00000004","TimeStamp":"2020-10-19T07:27:26.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 10:57:26.089 +03:30 [DBG] Token request success.
2020-10-19 11:28:45.495 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:28:45.511 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:28:45.513 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:28:45.514 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:28:45.518 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:28:45.622 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:28:45.749 +03:30 [DBG] Start discovery request
2020-10-19 11:28:48.987 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:28:48.990 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:28:49.048 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:28:49.126 +03:30 [DBG] Rendering check session result
2020-10-19 11:28:49.963 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:28:49.967 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:28:49.969 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:28:49.970 +03:30 [DBG] Start authorize request
2020-10-19 11:28:49.971 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:28:49.972 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:28:49.973 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:28:49.979 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:28:49.981 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:28:49.983 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"97a98ad7cb27453a89a86ded1e991dde","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"97a98ad7cb27453a89a86ded1e991dde","code_challenge":"n1iplaE3BWqbw9-1khJ27xwE_6iBrZ9KmFp9jwwiOkY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:28:50.024 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:28:50.026 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:28:50.029 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****fM5M","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000002","TimeStamp":"2020-10-19T07:58:50.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:28:50.042 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"97a98ad7cb27453a89a86ded1e991dde","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:28:52.793 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:28:52.818 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:28:52.848 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:28:52.852 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:28:52.857 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:28:52.859 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:28:52.860 +03:30 [DBG] Start discovery request
2020-10-19 11:28:55.949 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:28:55.952 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:28:55.955 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:28:55.956 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:28:55.959 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:28:55.961 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:28:55.964 +03:30 [DBG] Start discovery request
2020-10-19 11:28:56.097 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:28:56.100 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:28:56.103 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:28:56.105 +03:30 [DBG] Rendering check session result
2020-10-19 11:28:56.904 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:28:56.938 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:28:56.958 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:28:56.960 +03:30 [DBG] Start authorize request
2020-10-19 11:28:56.962 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:28:56.963 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:28:56.978 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:28:56.982 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:28:56.983 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:28:56.989 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e086504287c64f5ebd0578265caf5fc0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e086504287c64f5ebd0578265caf5fc0","code_challenge":"FRh69RpQQ6ytjfcj1LEEQ7inJhDkBVNuwkvnI5l0W2k","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:28:57.078 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:28:57.187 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:28:57.249 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****X2hU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000004","TimeStamp":"2020-10-19T07:58:57.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:28:57.273 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e086504287c64f5ebd0578265caf5fc0","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:29:00.611 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:29:00.633 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:00.669 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:00.681 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:29:00.692 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:29:00.695 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:29:00.697 +03:30 [DBG] Start discovery request
2020-10-19 11:29:00.745 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:29:00.751 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:00.758 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:00.764 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:29:00.771 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:29:00.775 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:29:00.779 +03:30 [DBG] Start discovery request
2020-10-19 11:29:00.894 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:29:00.897 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:29:00.900 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:29:00.905 +03:30 [DBG] Rendering check session result
2020-10-19 11:29:00.909 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:29:00.919 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:00.921 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:00.924 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:29:00.928 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:29:00.934 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:29:00.937 +03:30 [DBG] Start token request.
2020-10-19 11:29:00.938 +03:30 [DBG] Start client validation
2020-10-19 11:29:00.940 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:29:00.941 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:29:00.944 +03:30 [DBG] client id without secret found
2020-10-19 11:29:00.945 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:29:00.947 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:29:00.948 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:00.950 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:29:00.951 +03:30 [DBG] Client validation success
2020-10-19 11:29:00.952 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANU:00000002","TimeStamp":"2020-10-19T07:59:00.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:29:00.958 +03:30 [DBG] Start token request validation
2020-10-19 11:29:00.963 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:29:00.966 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:29:01.026 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:29:01.054 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"O0K74Udn01j7JICzHLuA9Cp6LXzTmEN_XRp-pG0X2hU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"O0K74Udn01j7JICzHLuA9Cp6LXzTmEN_XRp-pG0X2hU","redirect_uri":"http://localhost:8081/callback","code_verifier":"0b525a0d7e304908aca2ab97734840c5f2513c94f62b48a2b517649b18751a01fbfa4836ed5644b491880f1345a05773","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:29:01.087 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:01.092 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:29:01.096 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:29:01.140 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:01.144 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:29:01.147 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:29:01.155 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****p_qQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hu4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANU:00000002","TimeStamp":"2020-10-19T07:59:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:29:01.170 +03:30 [DBG] Token request success.
2020-10-19 11:29:01.216 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:29:01.223 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:29:01.224 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:29:01.228 +03:30 [DBG] Start authorize request
2020-10-19 11:29:01.237 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:29:01.239 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:29:01.240 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:01.243 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:29:01.244 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:29:01.246 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"45e0363eb1f2419ea8f0f72defc20044","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"45e0363eb1f2419ea8f0f72defc20044","code_challenge":"6hvtyP7hHcLmTon42ZvvNRgVAWc-2WbMOKQ22QzhBu4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:29:01.324 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:29:01.326 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:29:01.328 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****SBpI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000006","TimeStamp":"2020-10-19T07:59:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:29:01.342 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"45e0363eb1f2419ea8f0f72defc20044","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:29:01.480 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:29:01.482 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:29:01.484 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:29:01.500 +03:30 [DBG] Start authorize request
2020-10-19 11:29:01.501 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:29:01.503 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:29:01.505 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:01.529 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:29:01.531 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:29:01.543 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"a2f466e80b9149688fa01efc82a34f29","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"a2f466e80b9149688fa01efc82a34f29","code_challenge":"RB26DW3CKr-EX5QhmN7NeBtepUyf5mCIBbEjJhipKrY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:29:01.592 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:29:01.594 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:29:01.600 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ScWI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000007","TimeStamp":"2020-10-19T07:59:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:29:01.674 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"a2f466e80b9149688fa01efc82a34f29","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:29:04.583 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:29:04.593 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:04.601 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:04.621 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:29:04.623 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:29:04.628 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:29:04.633 +03:30 [DBG] Start discovery request
2020-10-19 11:29:04.644 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:29:04.647 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:04.650 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:04.652 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:29:04.657 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:29:04.660 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:29:04.667 +03:30 [DBG] Start discovery request
2020-10-19 11:29:04.745 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:29:04.749 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:29:04.750 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:29:04.752 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:29:04.753 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:29:04.754 +03:30 [DBG] Rendering check session result
2020-10-19 11:29:04.755 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:29:04.757 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:29:04.760 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:29:04.764 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:29:04.767 +03:30 [DBG] Start token request.
2020-10-19 11:29:04.768 +03:30 [DBG] Start client validation
2020-10-19 11:29:04.769 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:29:04.770 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:29:04.772 +03:30 [DBG] client id without secret found
2020-10-19 11:29:04.773 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:29:04.774 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:29:04.775 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:04.777 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:29:04.777 +03:30 [DBG] Client validation success
2020-10-19 11:29:04.779 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANT:00000004","TimeStamp":"2020-10-19T07:59:04.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:29:04.785 +03:30 [DBG] Start token request validation
2020-10-19 11:29:04.786 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:29:04.789 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:29:04.800 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:29:04.803 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"AQ4Ufg5A5ZF6Zya7eq11LeAgl0TY8yBF1YYMu0USBpI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"AQ4Ufg5A5ZF6Zya7eq11LeAgl0TY8yBF1YYMu0USBpI","redirect_uri":"http://localhost:8081/callback","code_verifier":"ff273fca81104e5b892c4e29afae74fdd80381a64c0145f88845efd1e2d6a2d6e4e8f2634d2a40ea90bbd3fdfe6ba54a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:29:04.825 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:04.828 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:29:04.829 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:29:04.877 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:29:04.881 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:29:04.883 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:29:04.890 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****wAgQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JmiA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANT:00000004","TimeStamp":"2020-10-19T07:59:04.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:29:04.901 +03:30 [DBG] Token request success.
2020-10-19 11:31:25.525 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:25.536 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:25.581 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:25.585 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:25.599 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:25.602 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:25.607 +03:30 [DBG] Start discovery request
2020-10-19 11:31:25.833 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:31:25.838 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:31:25.841 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:31:25.843 +03:30 [DBG] Rendering check session result
2020-10-19 11:31:26.138 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:31:26.147 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:31:26.151 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:31:26.152 +03:30 [DBG] Start authorize request
2020-10-19 11:31:26.154 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:26.155 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:31:26.156 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:26.160 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:31:26.162 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:31:26.172 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b9de0d430ea749c186a5d4f1fe642507","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b9de0d430ea749c186a5d4f1fe642507","code_challenge":"VWHCrM88QwKXwFPOM18ryAS7ueKoaVN6STbJPNlObQY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:31:26.207 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:31:26.209 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:31:26.213 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****jtDY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:0000000A","TimeStamp":"2020-10-19T08:01:26.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:26.224 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b9de0d430ea749c186a5d4f1fe642507","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:31:29.286 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:29.312 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:29.313 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:29.315 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:29.320 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:29.327 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:29.333 +03:30 [DBG] Start discovery request
2020-10-19 11:31:29.355 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:29.366 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:29.373 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:29.380 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:29.395 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:29.406 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:29.410 +03:30 [DBG] Start discovery request
2020-10-19 11:31:29.425 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:31:29.430 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:31:29.436 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:31:29.441 +03:30 [DBG] Rendering check session result
2020-10-19 11:31:29.549 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:31:29.554 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:29.570 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:29.577 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:31:29.579 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:31:29.581 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:31:29.586 +03:30 [DBG] Start token request.
2020-10-19 11:31:29.595 +03:30 [DBG] Start client validation
2020-10-19 11:31:29.597 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:31:29.598 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:31:29.601 +03:30 [DBG] client id without secret found
2020-10-19 11:31:29.602 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:31:29.603 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:31:29.610 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:29.615 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:31:29.616 +03:30 [DBG] Client validation success
2020-10-19 11:31:29.618 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANU:00000005","TimeStamp":"2020-10-19T08:01:29.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:31:29.626 +03:30 [DBG] Start token request validation
2020-10-19 11:31:29.628 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:31:29.629 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:31:29.645 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:31:29.646 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"VM5KWi3Aio_7l03NC0dsREQWV03NYwt3S3DrcRHjtDY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"VM5KWi3Aio_7l03NC0dsREQWV03NYwt3S3DrcRHjtDY","redirect_uri":"http://localhost:8081/callback","code_verifier":"bcc398590eb5491a8bd86ca2158cad7780312f297d13438483345870dfb5deddbf417b1d30b44e70b2531abb4dd23aba","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:31:29.659 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:29.661 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:31:29.662 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:29.724 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:29.728 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:31:29.730 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:31:29.759 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****6X5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kYZA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANU:00000005","TimeStamp":"2020-10-19T08:01:29.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:29.778 +03:30 [DBG] Token request success.
2020-10-19 11:31:29.806 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:31:29.813 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:31:29.814 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:31:29.817 +03:30 [DBG] Start authorize request
2020-10-19 11:31:29.818 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:29.820 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:31:29.831 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:29.835 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:31:29.837 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:31:29.839 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"3da7685b84d64853a119ae5b9d560023","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"3da7685b84d64853a119ae5b9d560023","code_challenge":"2yJn_9sE9o4pEGX4fAr5qvG4V3YtAX6Q443keABxtg4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:31:29.881 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:31:29.883 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:31:29.884 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7ebA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:0000000C","TimeStamp":"2020-10-19T08:01:29.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:29.893 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"3da7685b84d64853a119ae5b9d560023","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:31:30.051 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:31:30.054 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:31:30.083 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:31:30.100 +03:30 [DBG] Start authorize request
2020-10-19 11:31:30.119 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:30.125 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:31:30.126 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:30.127 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:31:30.133 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:31:30.141 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"52a3cadb796a4aeba31b418bc3ed6fa3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"52a3cadb796a4aeba31b418bc3ed6fa3","code_challenge":"dwPGldDRKnWgjHDwS-eztm8czCSC04npIHwmcxcM4hc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:31:30.187 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:31:30.196 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:31:30.198 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****X-GY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:0000000D","TimeStamp":"2020-10-19T08:01:30.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:30.212 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"52a3cadb796a4aeba31b418bc3ed6fa3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:31:32.870 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:32.877 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:32.887 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:32.888 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:32.892 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:32.895 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:32.900 +03:30 [DBG] Start discovery request
2020-10-19 11:31:32.915 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:32.917 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:32.919 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:32.922 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:32.925 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:32.931 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:32.936 +03:30 [DBG] Start discovery request
2020-10-19 11:31:32.999 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:31:33.001 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:31:33.006 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:31:33.013 +03:30 [DBG] Rendering check session result
2020-10-19 11:31:35.627 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:35.628 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:31:35.634 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:35.638 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:35.642 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:35.644 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:35.646 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:35.654 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:31:35.660 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:35.663 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:31:35.667 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:35.670 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:31:35.674 +03:30 [DBG] Start discovery request
2020-10-19 11:31:35.678 +03:30 [DBG] Start token request.
2020-10-19 11:31:35.684 +03:30 [DBG] Start client validation
2020-10-19 11:31:35.685 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:31:35.686 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:31:35.688 +03:30 [DBG] client id without secret found
2020-10-19 11:31:35.691 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:31:35.692 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:31:35.694 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:35.695 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:31:35.699 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:35.700 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:35.702 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:31:35.703 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:31:35.706 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:31:35.706 +03:30 [DBG] Client validation success
2020-10-19 11:31:35.708 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:31:35.709 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANT:00000008","TimeStamp":"2020-10-19T08:01:35.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:31:35.710 +03:30 [DBG] Start discovery request
2020-10-19 11:31:35.720 +03:30 [DBG] Start token request validation
2020-10-19 11:31:35.724 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:31:35.726 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:31:35.739 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:31:35.741 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Qh2tmDEB6FCVNFhkoe3tCh-yTzmLserzQ6Nuff87ebA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Qh2tmDEB6FCVNFhkoe3tCh-yTzmLserzQ6Nuff87ebA","redirect_uri":"http://localhost:8081/callback","code_verifier":"edfea39ece814404822e91b603258433a40953c0979a4a1b9ead4bdf2314019a095b67185ef348a8bdb333a07877df84","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:31:35.760 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:35.765 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:31:35.769 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:35.821 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:31:35.825 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:35.828 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:31:35.830 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:31:35.833 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:31:35.835 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:31:35.840 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:31:35.844 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:31:35.847 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:31:35.848 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:31:35.858 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****J4Eg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vYWw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANT:00000008","TimeStamp":"2020-10-19T08:01:35.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:35.860 +03:30 [DBG] Rendering check session result
2020-10-19 11:31:35.863 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:31:35.880 +03:30 [DBG] Token request success.
2020-10-19 11:31:35.885 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:31:35.891 +03:30 [DBG] Start token request.
2020-10-19 11:31:35.892 +03:30 [DBG] Start client validation
2020-10-19 11:31:35.893 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:31:35.894 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:31:35.896 +03:30 [DBG] client id without secret found
2020-10-19 11:31:35.897 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:31:35.898 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:31:35.901 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:35.904 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:31:35.906 +03:30 [DBG] Client validation success
2020-10-19 11:31:35.907 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:31:35.908 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKANV:00000002","TimeStamp":"2020-10-19T08:01:35.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:31:35.911 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:31:35.924 +03:30 [DBG] Start token request validation
2020-10-19 11:31:35.926 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:31:35.929 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:31:35.931 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:31:35.933 +03:30 [DBG] Start authorize request
2020-10-19 11:31:35.937 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:35.940 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:31:35.941 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:35.945 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:31:35.949 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:31:35.973 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:31:35.973 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"hW74PMy-uyVM_jG0dF4QVJxG7br0Qz9TufMfQG5X-GY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"hW74PMy-uyVM_jG0dF4QVJxG7br0Qz9TufMfQG5X-GY","redirect_uri":"http://localhost:8081/callback","code_verifier":"5fa6d57b62174be0ab5d878f91f31affb4e1b45f91124079895b272c20b7374dd2295d7e74064e4fb7df406ef5154180","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:31:35.977 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b00c558aba40470ebfa9c3b3807612b7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b00c558aba40470ebfa9c3b3807612b7","code_challenge":"s0tc7Hzc0iOOFyvGs4fqmliPn1osSRg27Y9WQbsrpZw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:31:35.991 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:36.033 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:31:36.036 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:36.040 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:31:36.049 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:31:36.058 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****8mgU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000010","TimeStamp":"2020-10-19T08:01:36.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:36.069 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b00c558aba40470ebfa9c3b3807612b7","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:31:36.107 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:36.116 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:31:36.120 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:31:36.135 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****TpJw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****387w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANV:00000002","TimeStamp":"2020-10-19T08:01:36.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:36.174 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:31:36.180 +03:30 [DBG] Token request success.
2020-10-19 11:31:36.187 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:31:36.192 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:31:36.195 +03:30 [DBG] Start authorize request
2020-10-19 11:31:36.197 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:31:36.203 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:31:36.205 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:31:36.208 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:31:36.210 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:31:36.213 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b13474ef7eaf4f0f9a0fbc926499872b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b13474ef7eaf4f0f9a0fbc926499872b","code_challenge":"EJG0rHT6QMc8QVSbA73mW7_BEci6QVfe6N3C6wsU5B8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:31:36.260 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:31:36.275 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:31:36.303 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cITI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKANS:00000011","TimeStamp":"2020-10-19T08:01:36.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:31:36.327 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b13474ef7eaf4f0f9a0fbc926499872b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:38:33.548 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:38:33.552 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:38:33.558 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:38:33.559 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:38:33.562 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:38:33.564 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:38:33.567 +03:30 [DBG] Start discovery request
2020-10-19 11:38:51.969 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:38:51.982 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:38:51.994 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:38:51.997 +03:30 [DBG] Start authorize request
2020-10-19 11:38:51.999 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:38:52.000 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:38:52.008 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:52.011 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:38:52.013 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:38:52.016 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"9ec2ca16315b4bdfa7a4122ac117ab9c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"9ec2ca16315b4bdfa7a4122ac117ab9c","code_challenge":"t9q7jgABbqbLGylQYq3N1qMY4HTkIjS15ukFVOKk54Q","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:38:52.394 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:38:52.406 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:38:52.408 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****PIMI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO2:00000001","TimeStamp":"2020-10-19T08:08:52.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:38:52.453 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"9ec2ca16315b4bdfa7a4122ac117ab9c","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:38:56.750 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:38:56.752 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:38:56.754 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:38:56.757 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:38:56.761 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:38:56.763 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:38:56.766 +03:30 [DBG] Start discovery request
2020-10-19 11:38:56.888 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:38:56.891 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:38:56.893 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:38:56.894 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:38:56.911 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:38:56.928 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:38:56.970 +03:30 [DBG] Start token request.
2020-10-19 11:38:56.980 +03:30 [DBG] Start client validation
2020-10-19 11:38:56.998 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:38:57.002 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:38:57.004 +03:30 [DBG] client id without secret found
2020-10-19 11:38:57.007 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:38:57.008 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:38:57.012 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:57.053 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:38:57.057 +03:30 [DBG] Client validation success
2020-10-19 11:38:57.061 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO0:00000003","TimeStamp":"2020-10-19T08:08:57.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:38:57.204 +03:30 [DBG] Start token request validation
2020-10-19 11:38:57.222 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:38:57.229 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:38:57.238 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:38:57.239 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"X7uDI8TT71kyeOPpMMg5TMLwJFQRqpaCs5l_wVmPIMI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"X7uDI8TT71kyeOPpMMg5TMLwJFQRqpaCs5l_wVmPIMI","redirect_uri":"http://localhost:8081/callback","code_verifier":"0823b241d50e4669beb6afb4c7c75711e1db90b049254f1e903bbb8334dae5481fbdb251e6e446a09edef715b197f57c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:38:57.298 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:57.301 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:38:57.302 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:38:57.411 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:57.415 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:38:57.419 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:38:57.428 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****vJ2Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sNLw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO0:00000003","TimeStamp":"2020-10-19T08:08:57.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:38:57.445 +03:30 [DBG] Token request success.
2020-10-19 11:38:57.479 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 11:38:57.482 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:38:57.484 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:38:57.491 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 11:38:57.493 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:38:57.496 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:38:57.499 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 11:38:57.502 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 11:38:57.505 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 11:38:57.507 +03:30 [DBG] Start userinfo request
2020-10-19 11:38:57.511 +03:30 [DBG] Bearer token found in header
2020-10-19 11:38:57.520 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:57.538 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:57.550 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 11:38:57.553 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603094937,"exp":1603098537,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 11:38:57.564 +03:30 [DBG] Creating userinfo response
2020-10-19 11:38:57.565 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 11:38:57.566 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 11:38:57.567 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 11:38:57.573 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 11:38:57.604 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 11:38:57.606 +03:30 [DBG] End userinfo request
2020-10-19 11:38:57.736 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:38:57.742 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:38:57.747 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:38:57.754 +03:30 [DBG] Rendering check session result
2020-10-19 11:38:58.139 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:38:58.142 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:38:58.146 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:38:58.149 +03:30 [DBG] Start authorize request
2020-10-19 11:38:58.151 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:38:58.152 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:38:58.153 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:38:58.155 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:38:58.156 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:38:58.159 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"86ab058544004f108324b0c467ee51d6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"86ab058544004f108324b0c467ee51d6","code_challenge":"EtDzjZztRoF2957T18pgLLVa6nHYirKPEwnMrmYQwZM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:38:58.189 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:38:58.194 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:38:58.196 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****gn74","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO2:00000003","TimeStamp":"2020-10-19T08:08:58.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:38:58.215 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"86ab058544004f108324b0c467ee51d6","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:39:01.209 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:39:01.212 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:39:01.213 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:39:01.216 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:39:01.228 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:39:01.230 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:39:01.232 +03:30 [DBG] Start discovery request
2020-10-19 11:39:01.265 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:39:01.269 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:39:01.271 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:39:01.272 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:39:01.274 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:39:01.277 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:39:01.296 +03:30 [DBG] Start discovery request
2020-10-19 11:39:01.505 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 11:39:01.540 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 11:39:01.645 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:39:01.691 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:39:01.691 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 11:39:01.692 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 11:39:01.693 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 11:39:01.694 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 11:39:01.698 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 11:39:01.706 +03:30 [DBG] Rendering check session result
2020-10-19 11:39:01.709 +03:30 [DBG] Start token request.
2020-10-19 11:39:01.710 +03:30 [DBG] Start client validation
2020-10-19 11:39:01.716 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 11:39:01.717 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 11:39:01.723 +03:30 [DBG] client id without secret found
2020-10-19 11:39:01.723 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 11:39:01.725 +03:30 [DBG] Secret id found: frontend
2020-10-19 11:39:01.726 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:39:01.728 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 11:39:01.730 +03:30 [DBG] Client validation success
2020-10-19 11:39:01.732 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO3:00000002","TimeStamp":"2020-10-19T08:09:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 11:39:01.736 +03:30 [DBG] Start token request validation
2020-10-19 11:39:01.736 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 11:39:01.741 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 11:39:01.781 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 11:39:01.831 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"zVpNdnuUH-GMpH7BfQipIcvTRjtyWRGBTTgiUwUgn74","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"zVpNdnuUH-GMpH7BfQipIcvTRjtyWRGBTTgiUwUgn74","redirect_uri":"http://localhost:8081/callback","code_verifier":"8bd3eee1a4af4054919b2140351dd3c81e1b28d1b6e24300a31a302f73d28328b1ea3de08cc94cf986d1697d85d2a784","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 11:39:01.879 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:39:01.880 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 11:39:01.881 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:39:01.967 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:39:01.971 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 11:39:01.973 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 11:39:01.980 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****iKXA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MuMg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO3:00000002","TimeStamp":"2020-10-19T08:09:01.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:39:01.998 +03:30 [DBG] Token request success.
2020-10-19 11:39:02.023 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:39:02.025 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:39:02.027 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:39:02.030 +03:30 [DBG] Start authorize request
2020-10-19 11:39:02.031 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:39:02.033 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:39:02.034 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:39:02.036 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:39:02.039 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:39:02.042 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b45a024cf86248b781017537c2bb4301","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b45a024cf86248b781017537c2bb4301","code_challenge":"gwwykrYomg3OmIpR9zcCorDJC4jl9StNo01fGiHL054","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:39:02.071 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:39:02.076 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:39:02.080 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ehho","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO2:00000005","TimeStamp":"2020-10-19T08:09:02.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:39:02.116 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b45a024cf86248b781017537c2bb4301","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:39:02.312 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 11:39:02.317 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 11:39:02.319 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 11:39:02.320 +03:30 [DBG] Start authorize request
2020-10-19 11:39:02.321 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 11:39:02.325 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 11:39:02.328 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 11:39:02.329 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 11:39:02.332 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 11:39:02.341 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d8e48c85a4ca4226a6bc3333a0dd3c33","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d8e48c85a4ca4226a6bc3333a0dd3c33","code_challenge":"6YBUUIy1pWnuyLX5lhrbIyxq7UqRGCJe1a3Ssvha-us","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 11:39:02.388 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 11:39:02.394 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 11:39:02.400 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cse8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO2:00000006","TimeStamp":"2020-10-19T08:09:02.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 11:39:02.415 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d8e48c85a4ca4226a6bc3333a0dd3c33","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 11:39:05.486 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:39:05.508 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:39:05.509 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:39:05.511 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:39:05.538 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:39:05.542 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:39:05.545 +03:30 [DBG] Start discovery request
2020-10-19 11:39:05.549 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 11:39:05.562 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 11:39:05.563 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 11:39:05.566 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 11:39:05.570 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 11:39:05.571 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 11:39:05.578 +03:30 [DBG] Start discovery request
2020-10-19 12:21:28.658 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:28.687 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:28.696 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:28.698 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:28.701 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:28.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:28.709 +03:30 [DBG] Start discovery request
2020-10-19 12:21:32.210 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:21:32.219 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:21:32.231 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:21:32.240 +03:30 [DBG] Rendering check session result
2020-10-19 12:21:32.824 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:21:32.857 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:21:32.902 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:21:32.907 +03:30 [DBG] Start authorize request
2020-10-19 12:21:32.910 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:21:32.913 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:21:32.915 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:32.923 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:21:32.924 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:21:32.927 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"00d346d0b5254b509eb18a98fc80038c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"00d346d0b5254b509eb18a98fc80038c","code_challenge":"TYl76sKksFinZGKZtDPV2wd62TJBEga4ndQLG4b6NxA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:21:33.113 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:21:33.257 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:21:33.341 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****xAH4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:00000002","TimeStamp":"2020-10-19T08:51:33.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:21:33.948 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"00d346d0b5254b509eb18a98fc80038c","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:21:37.789 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:37.814 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:37.820 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:37.823 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:37.830 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:37.836 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:37.842 +03:30 [DBG] Start discovery request
2020-10-19 12:21:37.859 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:37.862 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:37.865 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:37.868 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:37.872 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:37.874 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:37.890 +03:30 [DBG] Start discovery request
2020-10-19 12:21:37.930 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:21:37.931 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:21:37.932 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:37.933 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:21:37.934 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:37.936 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:21:37.937 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:21:37.938 +03:30 [DBG] Rendering check session result
2020-10-19 12:21:37.940 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:21:37.943 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:21:37.946 +03:30 [DBG] Start token request.
2020-10-19 12:21:37.947 +03:30 [DBG] Start client validation
2020-10-19 12:21:37.948 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:21:37.949 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:21:37.950 +03:30 [DBG] client id without secret found
2020-10-19 12:21:37.951 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:21:37.952 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:21:37.953 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:37.961 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:21:37.966 +03:30 [DBG] Client validation success
2020-10-19 12:21:37.967 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000002","TimeStamp":"2020-10-19T08:51:37.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:21:37.974 +03:30 [DBG] Start token request validation
2020-10-19 12:21:37.975 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:21:37.977 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:21:37.996 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:21:37.999 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"u5Y9x9iu3klht4fMqCZJMPMKNmfJvxV0sVnCe0BxAH4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"u5Y9x9iu3klht4fMqCZJMPMKNmfJvxV0sVnCe0BxAH4","redirect_uri":"http://localhost:8081/callback","code_verifier":"49d1b5c822154eaca39a836b022d48a4f98d66f706d748b6bfecefda0115f2f80546e4756390498bbdb35a277fdfd4ea","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:21:38.027 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:38.031 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:21:38.034 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:21:38.198 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:38.204 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:21:38.208 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:21:38.214 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:21:38.227 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:21:38.227 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****uB_w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QHFw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000002","TimeStamp":"2020-10-19T08:51:38.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:21:38.239 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:21:38.336 +03:30 [DBG] Token request success.
2020-10-19 12:21:38.348 +03:30 [DBG] Start authorize request
2020-10-19 12:21:38.352 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:21:38.353 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:21:38.354 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:38.357 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:21:38.358 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:21:38.368 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e6a47a9c0ba344e191f411a22f8b8477","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e6a47a9c0ba344e191f411a22f8b8477","code_challenge":"iwtC_FZtb9dOhfLZx4rQEIXwmSx_4J86sCDep9MtRGI","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:21:38.407 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:21:38.411 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:21:38.413 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****UlOE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:00000004","TimeStamp":"2020-10-19T08:51:38.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:21:38.431 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e6a47a9c0ba344e191f411a22f8b8477","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:21:38.531 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:21:38.535 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:21:38.537 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:21:38.540 +03:30 [DBG] Start authorize request
2020-10-19 12:21:38.541 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:21:38.543 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:21:38.564 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:38.568 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:21:38.568 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:21:38.571 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d39b6c4ff5cd431cb3cf0d3c592141e7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d39b6c4ff5cd431cb3cf0d3c592141e7","code_challenge":"JhTGS62weKrttkjTGP1F9-T8qJR2b_IPDBxLpTb77b4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:21:38.636 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:21:38.640 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:21:38.649 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****KbkE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:00000005","TimeStamp":"2020-10-19T08:51:38.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:21:38.666 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d39b6c4ff5cd431cb3cf0d3c592141e7","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:21:41.194 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:41.198 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:41.200 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:41.206 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:41.208 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:41.211 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:41.214 +03:30 [DBG] Start discovery request
2020-10-19 12:21:41.217 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:41.222 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:41.223 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:41.224 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:41.226 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:41.228 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:41.229 +03:30 [DBG] Start discovery request
2020-10-19 12:21:41.309 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:21:41.311 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:21:41.314 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:41.318 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:21:41.321 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:21:41.323 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:41.330 +03:30 [DBG] Rendering check session result
2020-10-19 12:21:41.333 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:21:41.336 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:21:41.338 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:21:41.341 +03:30 [DBG] Start token request.
2020-10-19 12:21:41.343 +03:30 [DBG] Start client validation
2020-10-19 12:21:41.345 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:21:41.348 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:21:41.352 +03:30 [DBG] client id without secret found
2020-10-19 12:21:41.353 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:21:41.354 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:21:41.356 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:41.371 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:21:41.373 +03:30 [DBG] Client validation success
2020-10-19 12:21:41.376 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000004","TimeStamp":"2020-10-19T08:51:41.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:21:41.382 +03:30 [DBG] Start token request validation
2020-10-19 12:21:41.383 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:21:41.385 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:21:41.395 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:21:41.397 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"HfbDOTXZo9M04L4-h6E6i41KbBx5CDiGmmz-XQ_UlOE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"HfbDOTXZo9M04L4-h6E6i41KbBx5CDiGmmz-XQ_UlOE","redirect_uri":"http://localhost:8081/callback","code_verifier":"7e308a9c492246429d8fab69ec15d885c70bd5832b5f4f0bb01d76841000205493dfc8aca9a44d58bcfff59bafff1003","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:21:41.417 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:41.423 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:21:41.426 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:21:41.491 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:21:41.502 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:21:41.504 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:21:41.515 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****x-lQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Mqeg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000004","TimeStamp":"2020-10-19T08:51:41.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:21:41.529 +03:30 [DBG] Token request success.
2020-10-19 12:21:43.926 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:43.927 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:43.931 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:43.933 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:43.938 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:43.940 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:43.944 +03:30 [DBG] Start discovery request
2020-10-19 12:21:43.951 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:21:43.960 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:21:43.962 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:21:43.965 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:21:43.968 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:21:43.978 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:21:43.980 +03:30 [DBG] Start discovery request
2020-10-19 12:23:06.687 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:06.699 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:06.704 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:06.706 +03:30 [DBG] Start authorize request
2020-10-19 12:23:06.709 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:06.711 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:06.714 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:06.717 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:06.727 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:06.739 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"1be00aca7201469f84ca0afc368fe89d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"1be00aca7201469f84ca0afc368fe89d","code_challenge":"l_24I5I8C_F0jtPI8jqfeLKogshM_7m2FiLQtcp5ygU","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:06.824 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:06.826 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:06.828 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****m9JQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:00000007","TimeStamp":"2020-10-19T08:53:06.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:06.838 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"1be00aca7201469f84ca0afc368fe89d","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:23:10.331 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:10.334 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:10.337 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:10.340 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:10.342 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:10.344 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:10.346 +03:30 [DBG] Start discovery request
2020-10-19 12:23:10.351 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:10.353 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:10.357 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:10.358 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:10.361 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:10.363 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:10.365 +03:30 [DBG] Start discovery request
2020-10-19 12:23:10.426 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:23:10.427 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:23:10.429 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:10.431 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:23:10.434 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:10.440 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:23:10.441 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:23:10.444 +03:30 [DBG] Rendering check session result
2020-10-19 12:23:10.446 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:23:10.449 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:23:10.454 +03:30 [DBG] Start token request.
2020-10-19 12:23:10.455 +03:30 [DBG] Start client validation
2020-10-19 12:23:10.455 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:23:10.456 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:23:10.458 +03:30 [DBG] client id without secret found
2020-10-19 12:23:10.459 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:23:10.460 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:23:10.461 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.464 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:23:10.465 +03:30 [DBG] Client validation success
2020-10-19 12:23:10.467 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000007","TimeStamp":"2020-10-19T08:53:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:23:10.475 +03:30 [DBG] Start token request validation
2020-10-19 12:23:10.476 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:23:10.478 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:23:10.494 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:23:10.496 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"E9Qb2TLDH4q8SkvEIC9JQF2dkSK9tCmO0MYZfO8m9JQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"E9Qb2TLDH4q8SkvEIC9JQF2dkSK9tCmO0MYZfO8m9JQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"453f4af26adb40cc9b9de00e6caf6a3a536e92ffa5564b5984ac896fd88647ba3a51866de6c249129086d1b6e26594b7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:23:10.512 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.517 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:23:10.520 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:10.565 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.567 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:23:10.569 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:23:10.576 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****JK1w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LqhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000007","TimeStamp":"2020-10-19T08:53:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:10.586 +03:30 [DBG] Token request success.
2020-10-19 12:23:10.681 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:23:10.683 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:10.686 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:10.726 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:23:10.728 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:10.730 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:10.731 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 12:23:10.734 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 12:23:10.741 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 12:23:10.744 +03:30 [DBG] Start userinfo request
2020-10-19 12:23:10.745 +03:30 [DBG] Bearer token found in header
2020-10-19 12:23:10.748 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.752 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:10.758 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.760 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:10.763 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:10.767 +03:30 [DBG] Start authorize request
2020-10-19 12:23:10.774 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:10.776 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:10.777 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:10.777 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 12:23:10.779 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:10.782 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603097590,"exp":1603101190,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 12:23:10.784 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:10.790 +03:30 [DBG] Creating userinfo response
2020-10-19 12:23:10.791 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"5804f1740a2b4a60bec69402ca353c96","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"5804f1740a2b4a60bec69402ca353c96","code_challenge":"tgY5jFgZslIr6dchAfDFneZZHgjAfDgYINqohPNgnRQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:10.795 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:23:10.807 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:23:10.808 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 12:23:10.811 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:23:10.821 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:10.825 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:10.830 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****wvAU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:00000009","TimeStamp":"2020-10-19T08:53:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:10.921 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"5804f1740a2b4a60bec69402ca353c96","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:23:11.021 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 12:23:11.024 +03:30 [DBG] End userinfo request
2020-10-19 12:23:11.337 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:11.340 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:11.343 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:11.345 +03:30 [DBG] Start authorize request
2020-10-19 12:23:11.355 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:11.361 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:11.362 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:11.365 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:11.367 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:11.369 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"cddbe6e3775d486f9098a9aeab9c8187","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"cddbe6e3775d486f9098a9aeab9c8187","code_challenge":"waDrnxxwgqfuRYbx6EDUU7zBDmusyF73RDwHU80wPNQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:11.409 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:11.411 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:11.413 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7zzI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:0000000A","TimeStamp":"2020-10-19T08:53:11.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:11.427 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"cddbe6e3775d486f9098a9aeab9c8187","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:23:14.056 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:14.058 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:14.059 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:14.060 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:14.063 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:14.066 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:14.068 +03:30 [DBG] Start discovery request
2020-10-19 12:23:14.076 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:14.080 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:14.083 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:14.084 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:14.085 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:14.088 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:14.093 +03:30 [DBG] Start discovery request
2020-10-19 12:23:14.152 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:23:14.157 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:23:14.160 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:23:14.172 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:23:14.187 +03:30 [DBG] Rendering check session result
2020-10-19 12:23:14.190 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:14.200 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:14.201 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:23:14.206 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:23:14.208 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:23:14.212 +03:30 [DBG] Start token request.
2020-10-19 12:23:14.213 +03:30 [DBG] Start client validation
2020-10-19 12:23:14.214 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:23:14.215 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:23:14.216 +03:30 [DBG] client id without secret found
2020-10-19 12:23:14.217 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:23:14.218 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:23:14.219 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:14.221 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:23:14.222 +03:30 [DBG] Client validation success
2020-10-19 12:23:14.224 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000007","TimeStamp":"2020-10-19T08:53:14.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:23:14.232 +03:30 [DBG] Start token request validation
2020-10-19 12:23:14.233 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:23:14.235 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:23:14.247 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:23:14.254 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"keKstJXzJ_rCxFZHiWQixOuKVNG1g0KCUVWMeBbwvAU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"keKstJXzJ_rCxFZHiWQixOuKVNG1g0KCUVWMeBbwvAU","redirect_uri":"http://localhost:8081/callback","code_verifier":"98574d4a88d946928b071d380184a2278eaf54188b67480faaeceda2d9f9d09c36aecf10fade44bd939cc0bde8eec5fa","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:23:14.267 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:14.269 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:23:14.271 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:14.334 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:14.339 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:23:14.342 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:23:14.352 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7ZwQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MtdA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000007","TimeStamp":"2020-10-19T08:53:14.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:14.382 +03:30 [DBG] Token request success.
2020-10-19 12:23:18.947 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:18.957 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:18.964 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:18.969 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:18.972 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:18.973 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:18.983 +03:30 [DBG] Start discovery request
2020-10-19 12:23:18.990 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:23:18.992 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:18.997 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:18.999 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:23:19.002 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:23:19.048 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:23:19.075 +03:30 [DBG] Start discovery request
2020-10-19 12:23:19.443 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:19.481 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:23:19.483 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:23:19.488 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:19.502 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:23:19.504 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:23:19.510 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:19.522 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:23:19.528 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:23:19.535 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:23:19.537 +03:30 [DBG] Rendering check session result
2020-10-19 12:23:19.539 +03:30 [DBG] Start authorize request
2020-10-19 12:23:19.545 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:23:19.545 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:19.547 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:23:19.550 +03:30 [DBG] Start token request.
2020-10-19 12:23:19.551 +03:30 [DBG] Start client validation
2020-10-19 12:23:19.552 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:23:19.554 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:19.556 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:19.558 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:23:19.560 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:19.561 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:19.563 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"48c8516930654b7491dc1246498bd926","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"48c8516930654b7491dc1246498bd926","code_challenge":"yAUmGXop2na8JM7Lwbn5eQ0o7bDwTiJIQtE2sBtQoXE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:19.565 +03:30 [DBG] client id without secret found
2020-10-19 12:23:19.691 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:23:19.692 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:23:19.694 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:19.702 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:23:19.722 +03:30 [DBG] Client validation success
2020-10-19 12:23:19.737 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:19.739 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000000C","TimeStamp":"2020-10-19T08:53:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:23:19.754 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:19.760 +03:30 [DBG] Start token request validation
2020-10-19 12:23:19.762 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****bMw0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:0000000C","TimeStamp":"2020-10-19T08:53:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:19.762 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:23:19.786 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"48c8516930654b7491dc1246498bd926","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:23:19.789 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:23:19.838 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:23:19.914 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:19.929 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"CnwATijwyl29TDOtyNLvkNlpWEvVtSrBxlh13xF7zzI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"CnwATijwyl29TDOtyNLvkNlpWEvVtSrBxlh13xF7zzI","redirect_uri":"http://localhost:8081/callback","code_verifier":"aa6a4e8ff94f4ed0a31001f26839a41312d87fab9e394411a5940962c7ab1403797cd65cb7c44672a374a0f508fdd48d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:23:19.977 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:19.995 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:20.014 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:20.037 +03:30 [DBG] Start authorize request
2020-10-19 12:23:20.041 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:23:20.043 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:20.048 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:20.067 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:20.071 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:20.083 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:20.085 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:20.087 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"95abc7542501471da1ddc1a42c30521d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"95abc7542501471da1ddc1a42c30521d","code_challenge":"lOiuJCJtPT1CuWB5g2SHPmZfdmFCMhQmwtpzIbx9mIQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:20.149 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:20.158 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:23:20.219 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:23:20.254 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nsLw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****oaYQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000000C","TimeStamp":"2020-10-19T08:53:20.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:20.292 +03:30 [DBG] Token request success.
2020-10-19 12:23:20.366 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:20.369 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:20.372 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****WtOo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:0000000D","TimeStamp":"2020-10-19T08:53:20.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:20.379 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"95abc7542501471da1ddc1a42c30521d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:23:21.191 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:23:21.224 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:23:21.268 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:23:21.348 +03:30 [DBG] Start authorize request
2020-10-19 12:23:21.424 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:23:21.625 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:23:21.657 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:23:21.686 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:23:21.690 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:23:21.693 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"af86fa60d16c4285be0f33433ae4920f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"af86fa60d16c4285be0f33433ae4920f","code_challenge":"mrfCpg1rk-MD-ipprMxcm4TyiougSXweejj94QqDpS4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:23:21.792 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:23:21.794 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:23:21.796 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****DH3k","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO5:0000000E","TimeStamp":"2020-10-19T08:53:21.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:23:21.805 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"af86fa60d16c4285be0f33433ae4920f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:25:19.830 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:25:19.838 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:25:19.840 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:25:19.841 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:25:19.843 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:25:19.846 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:25:19.849 +03:30 [DBG] Start discovery request
2020-10-19 12:25:19.973 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:25:19.976 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:25:19.978 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:25:19.980 +03:30 [DBG] Rendering check session result
2020-10-19 12:25:20.363 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:25:20.368 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:25:20.370 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:25:20.373 +03:30 [DBG] Start authorize request
2020-10-19 12:25:20.374 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:25:20.376 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:25:20.378 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:20.379 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:25:20.381 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:25:20.389 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4ba4802b368746e09ef6f110ee79f599","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"4ba4802b368746e09ef6f110ee79f599","code_challenge":"7Yu_WtrjoQ0UnxS51wHoatg_n310hPcNw33htOMneiM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:25:20.416 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:25:20.418 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:25:20.421 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****DTWw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:00000003","TimeStamp":"2020-10-19T08:55:20.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:25:20.429 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"4ba4802b368746e09ef6f110ee79f599","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:25:23.821 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:25:23.852 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:25:23.854 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:25:23.864 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:25:23.866 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:25:23.867 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:25:23.868 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:25:23.871 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:25:23.873 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:25:23.877 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:25:23.879 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:25:23.881 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:25:23.882 +03:30 [DBG] Start discovery request
2020-10-19 12:25:23.885 +03:30 [DBG] Start discovery request
2020-10-19 12:25:23.978 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:25:24.022 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:25:24.043 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:25:24.148 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:25:24.234 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:25:24.251 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:25:24.294 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:25:24.363 +03:30 [DBG] Rendering check session result
2020-10-19 12:25:24.516 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:25:24.595 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:25:24.672 +03:30 [DBG] Start token request.
2020-10-19 12:25:24.709 +03:30 [DBG] Start client validation
2020-10-19 12:25:24.746 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:25:24.768 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:25:24.802 +03:30 [DBG] client id without secret found
2020-10-19 12:25:24.836 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:25:24.880 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:25:24.953 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:24.976 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:25:24.990 +03:30 [DBG] Client validation success
2020-10-19 12:25:25.024 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000000A","TimeStamp":"2020-10-19T08:55:25.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:25:25.060 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:25:25.282 +03:30 [DBG] Start token request validation
2020-10-19 12:25:25.285 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:25:25.286 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:25:25.289 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:25:25.291 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:25:25.292 +03:30 [DBG] Start authorize request
2020-10-19 12:25:25.295 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:25:25.330 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:25:25.346 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:25.349 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:25:25.352 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:25:25.355 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"27c6e5a7ae114973b93d4f5adb35964e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"27c6e5a7ae114973b93d4f5adb35964e","code_challenge":"yAW6NqY83K3h9xkXoou-zxsey-W7H6dk8uGQkaGmBCs","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:25:25.396 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:25:25.621 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"wBlokhTSmEFg7vC3DVhWhbtnwjAuk2sVbF0SjSLDTWw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"wBlokhTSmEFg7vC3DVhWhbtnwjAuk2sVbF0SjSLDTWw","redirect_uri":"http://localhost:8081/callback","code_verifier":"e4b53a8fb5184814b00c4c7b7e056e4a7b3509bedb6b49e4a3a6dd95f5ee09861cf5a7e570dd47beb9a41ceecc9af428","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:25:25.633 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:25.634 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:25:25.635 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:25:26.194 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:25:26.231 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:25:26.233 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Rye8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:00000005","TimeStamp":"2020-10-19T08:55:26.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:25:26.242 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:26.263 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"27c6e5a7ae114973b93d4f5adb35964e","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:25:26.270 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:25:26.276 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:25:26.297 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****J-gA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NbpQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000000A","TimeStamp":"2020-10-19T08:55:26.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:25:26.331 +03:30 [DBG] Token request success.
2020-10-19 12:25:26.610 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:25:26.618 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:25:26.629 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:25:26.634 +03:30 [DBG] Start authorize request
2020-10-19 12:25:26.637 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:25:26.640 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:25:26.643 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:25:26.648 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:25:26.650 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:25:26.653 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"35e59eeb2fca478c9405f4109fedef3b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"35e59eeb2fca478c9405f4109fedef3b","code_challenge":"nj2Al92eQvsP_uQe9ZZYILiNSXjDQBIVaQB8w6JIyYA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:25:26.756 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:25:26.759 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:25:26.819 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****PDz8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:00000006","TimeStamp":"2020-10-19T08:55:26.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:25:27.214 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"35e59eeb2fca478c9405f4109fedef3b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:28:04.422 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:28:04.642 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:04.644 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:04.647 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:28:04.650 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:28:04.655 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:28:04.659 +03:30 [DBG] Start discovery request
2020-10-19 12:28:04.859 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:28:04.862 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:28:04.865 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:28:04.884 +03:30 [DBG] Rendering check session result
2020-10-19 12:28:05.147 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:28:05.150 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:28:05.202 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:28:05.212 +03:30 [DBG] Start authorize request
2020-10-19 12:28:05.214 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:28:05.215 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:28:05.219 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:05.221 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:28:05.223 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:28:05.225 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"10ef77a7039a4a89b1e934506056ee31","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"10ef77a7039a4a89b1e934506056ee31","code_challenge":"47-8ZLO6_2lQlmpwNft5RCQg9v9QLK37gu7ij3B0wxc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:28:05.276 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:28:05.280 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:28:05.287 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****1J40","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:00000008","TimeStamp":"2020-10-19T08:58:05.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:28:05.296 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"10ef77a7039a4a89b1e934506056ee31","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:28:08.662 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:28:08.665 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:08.667 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:08.669 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:28:08.671 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:28:08.673 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:28:08.676 +03:30 [DBG] Start discovery request
2020-10-19 12:28:08.694 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:28:08.697 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:08.700 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:08.702 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:28:08.704 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:28:08.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:28:08.711 +03:30 [DBG] Start discovery request
2020-10-19 12:28:08.808 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:28:08.811 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:28:08.813 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:08.815 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:28:08.818 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:08.822 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:28:08.824 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:28:08.826 +03:30 [DBG] Rendering check session result
2020-10-19 12:28:08.830 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:28:08.834 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:28:08.860 +03:30 [DBG] Start token request.
2020-10-19 12:28:08.861 +03:30 [DBG] Start client validation
2020-10-19 12:28:08.863 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:28:08.865 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:28:08.867 +03:30 [DBG] client id without secret found
2020-10-19 12:28:08.868 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:28:08.869 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:28:08.870 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:08.870 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:28:08.871 +03:30 [DBG] Client validation success
2020-10-19 12:28:08.871 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000010","TimeStamp":"2020-10-19T08:58:08.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:28:08.878 +03:30 [DBG] Start token request validation
2020-10-19 12:28:08.879 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:28:08.882 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:28:08.900 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:28:08.901 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"0VhwQPqvRTmR_INTKEjY6QJFlZRQ_shHkz0GtMD1J40","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"0VhwQPqvRTmR_INTKEjY6QJFlZRQ_shHkz0GtMD1J40","redirect_uri":"http://localhost:8081/callback","code_verifier":"bc69b3f526c540d68034b62fa49b787bfc3ed661a322442e86ad00a02f32ba3379528c6d60f142e79562a900da90669e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:28:08.940 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:08.949 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:28:08.953 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:28:08.990 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:08.992 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:28:08.994 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:28:09.003 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****oWlQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9fgw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000010","TimeStamp":"2020-10-19T08:58:09.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:28:09.017 +03:30 [DBG] Token request success.
2020-10-19 12:28:09.254 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:28:09.258 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:28:09.260 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:28:09.263 +03:30 [DBG] Start authorize request
2020-10-19 12:28:09.265 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:28:09.267 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:28:09.269 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:09.271 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:28:09.278 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:28:09.285 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"9e3bf712e737453db7e9528308dbc91d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"9e3bf712e737453db7e9528308dbc91d","code_challenge":"AlOTnmPZTdYPVTDJeDQbRG3KhRXV1T06HYZk7HaLnfA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:28:09.302 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:28:09.316 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:28:09.320 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:28:09.322 +03:30 [DBG] Start authorize request
2020-10-19 12:28:09.325 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:28:09.330 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:28:09.332 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:28:09.333 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:28:09.335 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:28:09.337 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:28:09.338 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:28:09.340 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****IEZk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:0000000A","TimeStamp":"2020-10-19T08:58:09.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:28:09.344 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b1ac6357e96246d3bd645003a17323d5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b1ac6357e96246d3bd645003a17323d5","code_challenge":"hF34bT-yVwJ2cRhy4fq8OePNZ7FnmtNZXIbJfJpB8uA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:28:09.357 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"9e3bf712e737453db7e9528308dbc91d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:28:09.390 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:28:09.403 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:28:09.411 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RfJA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000001","TimeStamp":"2020-10-19T08:58:09.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:28:09.433 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b1ac6357e96246d3bd645003a17323d5","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:28:12.506 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:28:12.558 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:12.560 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:12.562 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:28:12.563 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:28:12.565 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:28:12.567 +03:30 [DBG] Start discovery request
2020-10-19 12:28:12.576 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:28:12.579 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:28:12.581 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:28:12.583 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:28:12.586 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:28:12.588 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:28:12.590 +03:30 [DBG] Start discovery request
2020-10-19 12:29:47.705 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:29:47.715 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:29:47.736 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:29:47.739 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:29:47.748 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:29:47.750 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:29:47.753 +03:30 [DBG] Start discovery request
2020-10-19 12:29:47.872 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:29:47.878 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:29:47.880 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:29:47.887 +03:30 [DBG] Rendering check session result
2020-10-19 12:29:48.252 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:29:48.254 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:29:48.256 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:29:48.260 +03:30 [DBG] Start authorize request
2020-10-19 12:29:48.262 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:29:48.266 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:29:48.267 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:48.269 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:29:48.270 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:29:48.272 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e373d46faac24ce3967a9c09fa19a236","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e373d46faac24ce3967a9c09fa19a236","code_challenge":"rfQrxZPkxn7gvR64zR6bF7gQqZoxMf_DaRv-ZJxTphY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:29:48.337 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:29:48.340 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:29:48.345 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****rIdE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000003","TimeStamp":"2020-10-19T08:59:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:29:48.361 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e373d46faac24ce3967a9c09fa19a236","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:29:54.132 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:29:54.134 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:29:54.257 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:29:54.348 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:29:54.350 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:29:54.352 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:29:54.357 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:29:54.362 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:29:54.363 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:29:54.364 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:29:54.366 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:29:54.368 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:29:54.370 +03:30 [DBG] Start discovery request
2020-10-19 12:29:54.373 +03:30 [DBG] Start discovery request
2020-10-19 12:29:54.402 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:29:54.403 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:29:54.405 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:29:54.407 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:29:54.412 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:29:54.414 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:29:54.416 +03:30 [DBG] Rendering check session result
2020-10-19 12:29:54.419 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:29:54.429 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:29:54.431 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:29:54.435 +03:30 [DBG] Start token request.
2020-10-19 12:29:54.437 +03:30 [DBG] Start client validation
2020-10-19 12:29:54.438 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:29:54.444 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:29:54.446 +03:30 [DBG] client id without secret found
2020-10-19 12:29:54.447 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:29:54.449 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:29:54.450 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:54.451 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:29:54.452 +03:30 [DBG] Client validation success
2020-10-19 12:29:54.453 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000013","TimeStamp":"2020-10-19T08:59:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:29:54.464 +03:30 [DBG] Start token request validation
2020-10-19 12:29:54.466 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:29:54.467 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:29:54.480 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:29:54.486 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"amYp6Nx0Okyp0UsY2IXvCWGzp_5iwNagtQy-yP9rIdE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"amYp6Nx0Okyp0UsY2IXvCWGzp_5iwNagtQy-yP9rIdE","redirect_uri":"http://localhost:8081/callback","code_verifier":"d7dc96f8c48146a286abcc9025c76deb2be388603bf74a3595fd19fffe879c20bf5c1db901ec49879d7207c8aa6054cf","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:29:54.497 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:54.499 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:29:54.501 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:29:54.609 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:54.615 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:29:54.618 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:29:54.626 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****tUZA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Krkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000013","TimeStamp":"2020-10-19T08:59:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:29:54.638 +03:30 [DBG] Token request success.
2020-10-19 12:29:54.666 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:29:54.669 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:29:54.670 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:29:54.672 +03:30 [DBG] Start authorize request
2020-10-19 12:29:54.673 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:29:54.689 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:29:54.707 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:54.760 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:29:54.763 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:29:54.767 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"01a34bc40a8345629d9e67803f02f1ad","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"01a34bc40a8345629d9e67803f02f1ad","code_challenge":"5SSW6kfZMvJmmRCodSX9l0b8mL1iGA2lDWWv0QOMfFc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:29:54.832 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:29:54.841 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:29:54.842 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RyUM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000005","TimeStamp":"2020-10-19T08:59:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:29:54.853 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"01a34bc40a8345629d9e67803f02f1ad","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:29:54.984 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:29:54.987 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:29:54.989 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:29:55.002 +03:30 [DBG] Start authorize request
2020-10-19 12:29:55.009 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:29:55.012 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:29:55.013 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:29:55.021 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:29:55.022 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:29:55.027 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"af3917dd2acc48b199f60a28c6638be2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"af3917dd2acc48b199f60a28c6638be2","code_challenge":"la4ShOmOsUCOFZ9_gHTkMMOADpvLhMMTYjKKgMwwotM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:29:55.075 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:29:55.077 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:29:55.079 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****1vXE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000006","TimeStamp":"2020-10-19T08:59:55.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:29:55.087 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"af3917dd2acc48b199f60a28c6638be2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:43.215 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:43.233 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:43.256 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:43.261 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:43.271 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:43.273 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:43.275 +03:30 [DBG] Start discovery request
2020-10-19 12:30:43.719 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:43.731 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:43.735 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:43.737 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:44.146 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:44.149 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:44.153 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:44.156 +03:30 [DBG] Start authorize request
2020-10-19 12:30:44.159 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:44.165 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:44.167 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:44.170 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:44.173 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:44.178 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d9390c0939ef43769d4ab4dcb2220e27","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d9390c0939ef43769d4ab4dcb2220e27","code_challenge":"00rrPdJCPDaddk3aQ-F9fo1Ln9k-XuBlCgqMadYmhLE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:44.218 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:44.221 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:44.224 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****fMvE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000008","TimeStamp":"2020-10-19T09:00:44.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:44.234 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d9390c0939ef43769d4ab4dcb2220e27","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:46.066 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:46.068 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:46.070 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:46.072 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:46.075 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:46.077 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:46.094 +03:30 [DBG] Start discovery request
2020-10-19 12:30:46.099 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:46.102 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:46.105 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:46.109 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:46.117 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:46.123 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:46.125 +03:30 [DBG] Start discovery request
2020-10-19 12:30:46.346 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:46.353 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:46.355 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:46.358 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:46.369 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:46.371 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:46.373 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:46.375 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:46.379 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:46.384 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:46.386 +03:30 [DBG] Start token request.
2020-10-19 12:30:46.387 +03:30 [DBG] Start client validation
2020-10-19 12:30:46.397 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:46.400 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:46.406 +03:30 [DBG] client id without secret found
2020-10-19 12:30:46.410 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:46.416 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:46.418 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:46.433 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:46.446 +03:30 [DBG] Client validation success
2020-10-19 12:30:46.447 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000011","TimeStamp":"2020-10-19T09:00:46.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:46.458 +03:30 [DBG] Start token request validation
2020-10-19 12:30:46.469 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:46.472 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:46.493 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:46.501 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3Rp9VIwAMxNVzIwsV_hxD1djj0m2N72PAxDfIkwfMvE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"3Rp9VIwAMxNVzIwsV_hxD1djj0m2N72PAxDfIkwfMvE","redirect_uri":"http://localhost:8081/callback","code_verifier":"93c42d38c2694a61a647c284b4c9051b1a0939f53d004189b97c178fb1d8e73d940a4b0294b3459eba10ab75bfb5edcd","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:46.547 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:46.549 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:46.551 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:46.677 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:46.685 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:46.688 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:46.690 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:46.697 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:46.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:46.713 +03:30 [DBG] Start authorize request
2020-10-19 12:30:46.715 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:46.718 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:46.718 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Ppew","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LNQw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000011","TimeStamp":"2020-10-19T09:00:46.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:46.719 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:46.734 +03:30 [DBG] Token request success.
2020-10-19 12:30:46.744 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:46.746 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:46.749 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d89e09bdb99b44e2aeaa38c0b57dc26f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d89e09bdb99b44e2aeaa38c0b57dc26f","code_challenge":"h5106Nr5N7ErT9JCq00zlEcb-3XoQa37VMl2DZfHzW4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:46.807 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:46.809 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:46.812 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****v08Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:0000000A","TimeStamp":"2020-10-19T09:00:46.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:46.826 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d89e09bdb99b44e2aeaa38c0b57dc26f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:47.184 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:47.242 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:47.265 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:47.270 +03:30 [DBG] Start authorize request
2020-10-19 12:30:47.273 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:47.276 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:47.276 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:47.277 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:47.278 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:47.280 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7d6c18d71bf94f77b0d8240e2170a788","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7d6c18d71bf94f77b0d8240e2170a788","code_challenge":"XugedFLhVclbW8ehnKjKJzIu5A2IpVtBfRgTDOEvKSU","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:47.303 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:47.307 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:47.311 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****eFlk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:0000000B","TimeStamp":"2020-10-19T09:00:47.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:47.322 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7d6c18d71bf94f77b0d8240e2170a788","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:48.139 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:48.163 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:48.171 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:48.174 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:48.179 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:48.185 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:48.194 +03:30 [DBG] Start discovery request
2020-10-19 12:30:48.218 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:48.222 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:48.225 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:48.228 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:48.234 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:48.236 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:48.237 +03:30 [DBG] Start discovery request
2020-10-19 12:30:48.356 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:48.359 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:48.384 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:48.394 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:48.397 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:48.400 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:48.402 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:48.409 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:48.411 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:48.412 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:48.418 +03:30 [DBG] Start token request.
2020-10-19 12:30:48.419 +03:30 [DBG] Start client validation
2020-10-19 12:30:48.423 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:48.424 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:48.426 +03:30 [DBG] client id without secret found
2020-10-19 12:30:48.428 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:48.429 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:48.431 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:48.443 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:48.444 +03:30 [DBG] Client validation success
2020-10-19 12:30:48.446 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000017","TimeStamp":"2020-10-19T09:00:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:48.458 +03:30 [DBG] Start token request validation
2020-10-19 12:30:48.459 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:48.461 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:48.474 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:48.477 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"z1R-2Oi8KOvUh3KpK-9mdB6LSAR00LtBIWsdSsUv08Q","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"z1R-2Oi8KOvUh3KpK-9mdB6LSAR00LtBIWsdSsUv08Q","redirect_uri":"http://localhost:8081/callback","code_verifier":"aba1695f14044a268843e684ae67642b5c69e4c526b742c89742e85ebf36d5044e1654c1e22a493eb964eb6df6bf65ed","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:48.485 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:48.488 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:48.488 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:48.525 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:48.527 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:48.529 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:48.534 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****jj-A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PDbw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:00000017","TimeStamp":"2020-10-19T09:00:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:48.546 +03:30 [DBG] Token request success.
2020-10-19 12:30:48.966 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:48.971 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:48.974 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:48.978 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:48.980 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:48.985 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:48.988 +03:30 [DBG] Start discovery request
2020-10-19 12:30:48.994 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:48.997 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:49.000 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:49.003 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:49.017 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:49.020 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:49.023 +03:30 [DBG] Start discovery request
2020-10-19 12:30:49.100 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:49.107 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:49.127 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:49.151 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:49.151 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:49.154 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:49.158 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:49.164 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:49.166 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:49.171 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:49.175 +03:30 [DBG] Start token request.
2020-10-19 12:30:49.177 +03:30 [DBG] Start client validation
2020-10-19 12:30:49.179 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:49.181 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:49.185 +03:30 [DBG] client id without secret found
2020-10-19 12:30:49.186 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:49.187 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:49.194 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.197 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:49.198 +03:30 [DBG] Client validation success
2020-10-19 12:30:49.203 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000014","TimeStamp":"2020-10-19T09:00:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:49.211 +03:30 [DBG] Start token request validation
2020-10-19 12:30:49.213 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:49.215 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:49.230 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:49.234 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BkHv6R1by-ExeklyNrfjDRwrZVHZrYmene_9H7_eFlk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"BkHv6R1by-ExeklyNrfjDRwrZVHZrYmene_9H7_eFlk","redirect_uri":"http://localhost:8081/callback","code_verifier":"a1ba22d3a92a4b70affa251f890ac5578224f10efe344a588bcb5bfbc5d6390f9b17830fbdc4461f9fc928675bcc31c6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:49.241 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.243 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:49.244 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:49.279 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.282 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:49.284 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:49.291 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****YhEQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cW8Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000014","TimeStamp":"2020-10-19T09:00:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:49.308 +03:30 [DBG] Token request success.
2020-10-19 12:30:49.415 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:49.416 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:49.418 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:49.421 +03:30 [DBG] Start authorize request
2020-10-19 12:30:49.424 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:49.425 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:49.426 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.428 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:49.431 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:49.435 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bc7ea9f3580f47208a34d50e191afcae","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"bc7ea9f3580f47208a34d50e191afcae","code_challenge":"E_VpiZkxrpVJV6FUFLTsrItcX1zY7arknDBrWm_n7pw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:49.496 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:49.499 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:49.502 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****oMcw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:0000000E","TimeStamp":"2020-10-19T09:00:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:49.528 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bc7ea9f3580f47208a34d50e191afcae","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:49.601 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:49.606 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:49.607 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:49.609 +03:30 [DBG] Start authorize request
2020-10-19 12:30:49.617 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:49.620 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:49.622 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.625 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:49.630 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:49.649 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"abe60fbea34843518ea26e813b040277","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"abe60fbea34843518ea26e813b040277","code_challenge":"qZgIpuHQ1p-uU51SdTU69uFGU2JjEeG13T-UFsjEj0s","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:49.670 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:49.674 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:49.677 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Pnww","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:0000000F","TimeStamp":"2020-10-19T09:00:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:49.696 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"abe60fbea34843518ea26e813b040277","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:49.700 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:49.702 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:49.703 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:49.707 +03:30 [DBG] Start authorize request
2020-10-19 12:30:49.708 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:49.709 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:49.709 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:49.711 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:49.713 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:49.715 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"5f4c74d6e37741fc93686507ee990c77","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"5f4c74d6e37741fc93686507ee990c77","code_challenge":"cbUSRYmbqa6N_SSO2ksNtqOPmshiPaQd0r4jWRcRybA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:49.749 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:49.750 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:49.753 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****lb8k","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:0000000B","TimeStamp":"2020-10-19T09:00:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:49.762 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"5f4c74d6e37741fc93686507ee990c77","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:50.577 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:50.581 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:50.584 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:50.591 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:50.595 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:50.599 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:50.607 +03:30 [DBG] Start discovery request
2020-10-19 12:30:50.617 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:50.621 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:50.623 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:50.624 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:50.628 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:50.650 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:50.657 +03:30 [DBG] Start discovery request
2020-10-19 12:30:50.767 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:50.773 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:50.774 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:50.776 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:50.781 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:50.788 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:50.812 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:50.831 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:50.852 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:50.879 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:50.922 +03:30 [DBG] Start token request.
2020-10-19 12:30:50.929 +03:30 [DBG] Start client validation
2020-10-19 12:30:50.932 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:50.934 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:50.936 +03:30 [DBG] client id without secret found
2020-10-19 12:30:50.941 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:50.949 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:50.952 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:50.957 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:50.967 +03:30 [DBG] Client validation success
2020-10-19 12:30:50.970 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001A","TimeStamp":"2020-10-19T09:00:50.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:50.994 +03:30 [DBG] Start token request validation
2020-10-19 12:30:50.995 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:50.999 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:51.034 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:51.036 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"yEHbhitM8ldK6MFNhyquVIusNHJPxSRzbd9Fy6WoMcw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"yEHbhitM8ldK6MFNhyquVIusNHJPxSRzbd9Fy6WoMcw","redirect_uri":"http://localhost:8081/callback","code_verifier":"946739ddfde84c8b9770bad71c81d5441b948fe53db2495887e15179ec41761b1196fb43ccc5499ea412336aa20d4210","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:51.042 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:51.046 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:51.047 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:51.090 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:51.095 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:51.098 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:51.105 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****aUJA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NnnA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001A","TimeStamp":"2020-10-19T09:00:51.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:51.114 +03:30 [DBG] Token request success.
2020-10-19 12:30:51.735 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:51.747 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:51.751 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:51.753 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:51.763 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:51.771 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:51.778 +03:30 [DBG] Start discovery request
2020-10-19 12:30:51.787 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:51.790 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:51.792 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:51.795 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:51.798 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:51.803 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:51.806 +03:30 [DBG] Start discovery request
2020-10-19 12:30:53.169 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:53.175 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:53.190 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:53.202 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:53.205 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:53.207 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:53.215 +03:30 [DBG] Start discovery request
2020-10-19 12:30:53.218 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:53.226 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:53.228 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:53.233 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:53.235 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:53.239 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:53.245 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:53.249 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:53.256 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:53.260 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:53.269 +03:30 [DBG] Start discovery request
2020-10-19 12:30:53.439 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:53.442 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:53.444 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:53.446 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:53.459 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:53.462 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:53.468 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:53.469 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:53.471 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:53.472 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:53.474 +03:30 [DBG] Start token request.
2020-10-19 12:30:53.476 +03:30 [DBG] Start client validation
2020-10-19 12:30:53.476 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:53.478 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:53.481 +03:30 [DBG] client id without secret found
2020-10-19 12:30:53.482 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:53.484 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:53.485 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.488 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:53.489 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:53.492 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:53.493 +03:30 [DBG] Client validation success
2020-10-19 12:30:53.497 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:53.499 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001D","TimeStamp":"2020-10-19T09:00:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:53.504 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:53.506 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:53.510 +03:30 [DBG] Start token request validation
2020-10-19 12:30:53.515 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:53.516 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:53.518 +03:30 [DBG] Start token request.
2020-10-19 12:30:53.521 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:53.521 +03:30 [DBG] Start client validation
2020-10-19 12:30:53.523 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:53.525 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:53.532 +03:30 [DBG] client id without secret found
2020-10-19 12:30:53.533 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:53.534 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:53.534 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.535 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:53.535 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:53.536 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"n_7WCbSXcLjkjmDghys_dqJFaJj8ceKeg3Bf3kglb8k","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"n_7WCbSXcLjkjmDghys_dqJFaJj8ceKeg3Bf3kglb8k","redirect_uri":"http://localhost:8081/callback","code_verifier":"90ba483c0b6d4ba39d9249fa9a42f27c4668a4001d46494a88439d4deddb26abca443fd10677475db0c6c1711c0fdb8d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:53.537 +03:30 [DBG] Client validation success
2020-10-19 12:30:53.545 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.546 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000018","TimeStamp":"2020-10-19T09:00:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:53.547 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:53.555 +03:30 [DBG] Start token request validation
2020-10-19 12:30:53.556 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:53.557 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:53.562 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:53.602 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:53.607 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"WZfD_C6_0s-yxVpyNWPBH8umUkvAFKbMfPO3oGmPnww","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"WZfD_C6_0s-yxVpyNWPBH8umUkvAFKbMfPO3oGmPnww","redirect_uri":"http://localhost:8081/callback","code_verifier":"554564932fa24f7cba612859e4fc9523524030c544ae4be2954634fdf58082950241d218284d4fc1863af6d1a89215dc","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:53.769 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.769 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.775 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:53.780 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:53.782 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:53.789 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:53.807 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ZZ-g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B60g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001D","TimeStamp":"2020-10-19T09:00:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:53.816 +03:30 [DBG] Token request success.
2020-10-19 12:30:53.847 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.852 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:53.855 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:53.865 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****BnDg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B60g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:00000018","TimeStamp":"2020-10-19T09:00:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:53.877 +03:30 [DBG] Token request success.
2020-10-19 12:30:53.924 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:53.926 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:53.927 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:53.928 +03:30 [DBG] Start authorize request
2020-10-19 12:30:53.929 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:53.931 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:53.935 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:53.938 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:53.939 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:53.942 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"37c6252acd2949f388f4fdd7e3810c57","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"37c6252acd2949f388f4fdd7e3810c57","code_challenge":"kVzSS7xCOxETHczsbGv_xSHiHMiYh7sFXnzLr4DiTMU","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:53.972 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:53.974 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:53.976 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****pXB4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:0000000F","TimeStamp":"2020-10-19T09:00:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:54.004 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"37c6252acd2949f388f4fdd7e3810c57","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:54.219 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:54.225 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:54.231 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:54.233 +03:30 [DBG] Start authorize request
2020-10-19 12:30:54.234 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:54.237 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:54.239 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:54.241 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:54.244 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:54.245 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"285df0dd66f84b58aa85297f6f5b5c1e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"285df0dd66f84b58aa85297f6f5b5c1e","code_challenge":"A8HWUXFAJophRBNG6NcRUcQlkf5b8N6TTbIyxIZkgao","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:54.263 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:54.299 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:54.302 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:54.314 +03:30 [DBG] Start authorize request
2020-10-19 12:30:54.317 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:54.321 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:54.322 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:54.327 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:54.327 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:54.328 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:54.332 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"91db948a2ea542999c2d17f97acf0052","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"91db948a2ea542999c2d17f97acf0052","code_challenge":"L5yF1OUUMKbp1N68Y0NTobMdLxbmyk6DnuXOwE5d3ik","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:54.336 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:54.341 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:54.351 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:54.354 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:54.358 +03:30 [DBG] Start authorize request
2020-10-19 12:30:54.363 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:54.366 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:54.368 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:54.368 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****z7Vs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO7:00000010","TimeStamp":"2020-10-19T09:00:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:54.370 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:54.384 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"285df0dd66f84b58aa85297f6f5b5c1e","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:54.384 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:54.425 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:54.430 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:54.432 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ce780aee41624bcf9e10a81ae1e794ae","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ce780aee41624bcf9e10a81ae1e794ae","code_challenge":"6CwiwsbhyWLR7S2eRjakDKBOGJwY72QMZlYpSWN2MUI","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:54.433 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Y_88","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO8:00000010","TimeStamp":"2020-10-19T09:00:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:54.455 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"91db948a2ea542999c2d17f97acf0052","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:54.456 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:54.463 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:54.464 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****iphA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO9:00000001","TimeStamp":"2020-10-19T09:00:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:54.475 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ce780aee41624bcf9e10a81ae1e794ae","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:55.900 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:55.903 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:55.923 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:55.941 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:55.953 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:55.969 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:55.998 +03:30 [DBG] Start discovery request
2020-10-19 12:30:56.078 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:56.082 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:56.084 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:56.091 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:56.288 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:56.291 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:56.294 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:56.297 +03:30 [DBG] Start authorize request
2020-10-19 12:30:56.298 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:56.301 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:56.304 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:56.308 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:56.310 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:56.313 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"3df8a73cb3c14808b1d6b433ec578b6c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"3df8a73cb3c14808b1d6b433ec578b6c","code_challenge":"86ROedHB9sf1pcIpq5p6EnDFVnII3pP5d3cuAMrgCWQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:56.363 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:56.368 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:56.370 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****D2GY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:00000002","TimeStamp":"2020-10-19T09:00:56.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:56.377 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"3df8a73cb3c14808b1d6b433ec578b6c","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:30:57.220 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:57.226 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:57.228 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:57.229 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:57.234 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:57.236 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:57.238 +03:30 [DBG] Start discovery request
2020-10-19 12:30:57.243 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:30:57.250 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:57.256 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:57.258 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:30:57.264 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:30:57.266 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:30:57.268 +03:30 [DBG] Start discovery request
2020-10-19 12:30:58.294 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:30:58.302 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:30:58.304 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:30:58.309 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:30:58.311 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:30:58.312 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:30:58.316 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:30:58.321 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:30:58.323 +03:30 [DBG] Rendering check session result
2020-10-19 12:30:58.327 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:30:58.330 +03:30 [DBG] Start token request.
2020-10-19 12:30:58.332 +03:30 [DBG] Start client validation
2020-10-19 12:30:58.333 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:30:58.337 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:30:58.339 +03:30 [DBG] client id without secret found
2020-10-19 12:30:58.340 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:30:58.341 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:30:58.342 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:58.344 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:30:58.345 +03:30 [DBG] Client validation success
2020-10-19 12:30:58.346 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001F","TimeStamp":"2020-10-19T09:00:58.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:30:58.353 +03:30 [DBG] Start token request validation
2020-10-19 12:30:58.353 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:30:58.355 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:30:58.364 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:30:58.366 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"tCQC50jDKYDTyqlDweyauIxz36tGLsPo3Du29GaD2GY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"tCQC50jDKYDTyqlDweyauIxz36tGLsPo3Du29GaD2GY","redirect_uri":"http://localhost:8081/callback","code_verifier":"9737918223c145faa6da20609b97e4ffbb23d49382754fe8a7680731bc94e7f8d04974c7a7d1425e850a5d875c1767a0","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:30:58.373 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:58.375 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:30:58.376 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:58.406 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:58.408 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:30:58.410 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:30:58.425 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****UVDQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hA7Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO4:0000001F","TimeStamp":"2020-10-19T09:00:58.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:58.448 +03:30 [DBG] Token request success.
2020-10-19 12:30:58.929 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:30:58.969 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:30:58.976 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:30:58.982 +03:30 [DBG] Start authorize request
2020-10-19 12:30:58.983 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:30:58.986 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:30:58.987 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:30:58.999 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:30:59.000 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:30:59.002 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7be418887054481da200aa816ed704d3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7be418887054481da200aa816ed704d3","code_challenge":"z_q3v07Cvgq1f45lpLorUwaFv3gDnj1Pxs9-q8hA3Qs","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:30:59.072 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:30:59.074 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:30:59.076 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****wKW8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:00000004","TimeStamp":"2020-10-19T09:00:59.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:30:59.121 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7be418887054481da200aa816ed704d3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:02.034 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:02.038 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:02.058 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:02.061 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:02.069 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:02.072 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:02.081 +03:30 [DBG] Start discovery request
2020-10-19 12:31:02.104 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:02.107 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:02.109 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:02.135 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:02.138 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:02.154 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:02.173 +03:30 [DBG] Start discovery request
2020-10-19 12:31:02.267 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:31:02.277 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:31:02.279 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:31:02.282 +03:30 [DBG] Rendering check session result
2020-10-19 12:31:02.300 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:31:02.304 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:02.309 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:02.311 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:31:02.320 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:31:02.325 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:31:02.328 +03:30 [DBG] Start token request.
2020-10-19 12:31:02.329 +03:30 [DBG] Start client validation
2020-10-19 12:31:02.332 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:31:02.351 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:31:02.356 +03:30 [DBG] client id without secret found
2020-10-19 12:31:02.363 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:31:02.365 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:31:02.366 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:02.371 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:31:02.373 +03:30 [DBG] Client validation success
2020-10-19 12:31:02.374 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000001C","TimeStamp":"2020-10-19T09:01:02.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:31:02.384 +03:30 [DBG] Start token request validation
2020-10-19 12:31:02.386 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:31:02.389 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:31:02.446 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:31:02.448 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"PwKWcmuv_9I9z3sqwwgKyIOmcXFG-WFUP-gObT9wKW8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"PwKWcmuv_9I9z3sqwwgKyIOmcXFG-WFUP-gObT9wKW8","redirect_uri":"http://localhost:8081/callback","code_verifier":"949630ed85ed4d9ea801f16b236c92580f833d88a8b24d61aff8079bee2bb08c14159747c4f941e397ab3ec2407d343e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:31:02.469 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:02.473 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:31:02.474 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:02.521 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:02.527 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:31:02.530 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:31:02.542 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nTWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ev8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000001C","TimeStamp":"2020-10-19T09:01:02.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:02.616 +03:30 [DBG] Token request success.
2020-10-19 12:31:03.014 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:31:03.017 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:31:03.021 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:31:03.025 +03:30 [DBG] Start authorize request
2020-10-19 12:31:03.047 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:03.068 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:31:03.070 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:03.078 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:31:03.081 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:31:03.084 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"f6c8b26ca6354c21adb8e8ab6cf916a3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"f6c8b26ca6354c21adb8e8ab6cf916a3","code_challenge":"_Zvg-EgaTwCm3QHN7oxrKVR01_W_99pyCnqOBc-S-iI","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:31:03.138 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:31:03.139 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:31:03.141 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2kvM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:00000006","TimeStamp":"2020-10-19T09:01:03.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:03.147 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"f6c8b26ca6354c21adb8e8ab6cf916a3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:03.191 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:31:03.193 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:31:03.195 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:31:03.196 +03:30 [DBG] Start authorize request
2020-10-19 12:31:03.197 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:03.198 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:31:03.199 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:03.200 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:31:03.201 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:31:03.202 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c8784165ca334b008a34929d97167de3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"c8784165ca334b008a34929d97167de3","code_challenge":"Bg7lh-VN5Z1d_se6flBgbZUCMv5r3RlbhsdbGsivY2g","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:31:03.220 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:31:03.221 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:31:03.222 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Xn04","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:00000007","TimeStamp":"2020-10-19T09:01:03.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:03.227 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"c8784165ca334b008a34929d97167de3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:06.164 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:06.166 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:06.168 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:06.172 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:06.173 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:06.175 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:06.178 +03:30 [DBG] Start discovery request
2020-10-19 12:31:06.182 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:06.184 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:06.185 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:06.186 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:06.187 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:06.188 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:06.189 +03:30 [DBG] Start discovery request
2020-10-19 12:31:44.335 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:44.343 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:44.347 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:44.352 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:44.355 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:44.358 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:44.359 +03:30 [DBG] Start discovery request
2020-10-19 12:31:44.432 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:31:44.434 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:31:44.435 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:31:44.435 +03:30 [DBG] Rendering check session result
2020-10-19 12:31:44.845 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:31:44.846 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:31:44.847 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:31:44.848 +03:30 [DBG] Start authorize request
2020-10-19 12:31:44.848 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:44.849 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:31:44.850 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:44.851 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:31:44.853 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:31:44.854 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"84b953df245b466eabb029837e7fb2f5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"84b953df245b466eabb029837e7fb2f5","code_challenge":"WKEUV0ka5JmR5i0BvyFD_9nShwB452y4au0Pg_FdydE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:31:44.869 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:31:44.870 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:31:44.871 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****8pyQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:00000009","TimeStamp":"2020-10-19T09:01:44.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:44.878 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"84b953df245b466eabb029837e7fb2f5","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:48.465 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:48.467 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:48.469 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:48.469 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:48.471 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:48.472 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:48.474 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:48.475 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:48.476 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:48.478 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:48.479 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:48.480 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:48.485 +03:30 [DBG] Start discovery request
2020-10-19 12:31:48.486 +03:30 [DBG] Start discovery request
2020-10-19 12:31:48.602 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:31:48.604 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:31:48.605 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:31:48.606 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:31:48.606 +03:30 [DBG] Rendering check session result
2020-10-19 12:31:48.607 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:48.608 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:48.609 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:31:48.610 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:31:48.612 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:31:48.614 +03:30 [DBG] Start token request.
2020-10-19 12:31:48.614 +03:30 [DBG] Start client validation
2020-10-19 12:31:48.615 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:31:48.616 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:31:48.617 +03:30 [DBG] client id without secret found
2020-10-19 12:31:48.618 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:31:48.618 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:31:48.619 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:48.620 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:31:48.621 +03:30 [DBG] Client validation success
2020-10-19 12:31:48.622 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000001F","TimeStamp":"2020-10-19T09:01:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:31:48.627 +03:30 [DBG] Start token request validation
2020-10-19 12:31:48.628 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:31:48.633 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:31:48.647 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:31:48.652 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"DIz-bK2i2rLHTeJp4eqL0HnS5nFRmpc0F5Ou35k8pyQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"DIz-bK2i2rLHTeJp4eqL0HnS5nFRmpc0F5Ou35k8pyQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"3c765ac0052847d9ab825f2ab3ed716ba6340cdf56984c9994a869dbf0c07320425870a18c15442aac7cf00349726ce7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:31:48.660 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:48.664 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:31:48.666 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:48.797 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:48.799 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:31:48.800 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:31:48.811 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****5EBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****tm8Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAO6:0000001F","TimeStamp":"2020-10-19T09:01:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:48.823 +03:30 [DBG] Token request success.
2020-10-19 12:31:48.857 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:31:48.860 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:31:48.861 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:31:48.861 +03:30 [DBG] Start authorize request
2020-10-19 12:31:48.862 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:48.862 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:31:48.863 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:48.863 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:31:48.864 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:31:48.865 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"92f87b6249d945f4a0239eb33f206105","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"92f87b6249d945f4a0239eb33f206105","code_challenge":"rtJz_MH7PBotSflbOekqESm0AoXBib7Xs6_ESan-2Fc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:31:48.882 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:31:48.883 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:31:48.884 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****TsSQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:0000000B","TimeStamp":"2020-10-19T09:01:48.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:48.889 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"92f87b6249d945f4a0239eb33f206105","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:49.096 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:31:49.098 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:31:49.100 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:31:49.102 +03:30 [DBG] Start authorize request
2020-10-19 12:31:49.103 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:31:49.103 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:31:49.104 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:31:49.105 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:31:49.106 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:31:49.108 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bbba546f7c664c5995be5eb902cca6e8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"bbba546f7c664c5995be5eb902cca6e8","code_challenge":"L2ZNuFeSrqa0ZAFFD-On655t_p88EBQ5oPitu7R8G0U","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:31:49.126 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:31:49.133 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:31:49.134 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****t9vk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOA:0000000C","TimeStamp":"2020-10-19T09:01:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:31:49.142 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bbba546f7c664c5995be5eb902cca6e8","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:31:52.185 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:52.204 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:52.207 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:52.213 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:52.222 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:52.223 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:52.228 +03:30 [DBG] Start discovery request
2020-10-19 12:31:52.231 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:31:52.232 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:31:52.332 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:31:52.333 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:31:52.334 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:31:52.334 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:31:52.335 +03:30 [DBG] Start discovery request
2020-10-19 12:44:18.021 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:44:18.023 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:44:18.024 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:44:18.025 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:44:18.026 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:44:18.027 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:44:18.028 +03:30 [DBG] Start discovery request
2020-10-19 12:44:18.416 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:44:18.454 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:44:18.455 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:44:18.456 +03:30 [DBG] Start authorize request
2020-10-19 12:44:18.457 +03:30 [DBG] No user present in authorize request
2020-10-19 12:44:18.462 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:44:18.464 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:44:18.465 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:44:18.466 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:44:18.468 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"ca622db7b6ef403582e1de2ea1dd426b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"ca622db7b6ef403582e1de2ea1dd426b","code_challenge":"_JPp7YxvpI4ZrtaKPtK6ycOVFuOgM1ME8PqR7Q-UVq4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:44:18.481 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 12:44:18.566 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:44:18.568 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:44:18.569 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:44:18.570 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:44:18.573 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:07.748 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:07.772 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:07.773 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:07.774 +03:30 [DBG] Start authorize request
2020-10-19 12:45:07.775 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:07.775 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:07.776 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:07.777 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:07.777 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:07.779 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"bc77847533224d82b8e8c4c40d3ae533","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"bc77847533224d82b8e8c4c40d3ae533","code_challenge":"0jXr0enjRXInDt2zq9iFaJMu2bxA2ZfYpa5baL9j2PM","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:08.197 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:08.227 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:08.287 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****u0YQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOF:00000001","TimeStamp":"2020-10-19T09:15:08.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:08.294 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bc77847533224d82b8e8c4c40d3ae533","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:45:11.915 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:11.916 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:11.917 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:11.918 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:11.920 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:11.920 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:11.921 +03:30 [DBG] Start discovery request
2020-10-19 12:45:11.933 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:11.934 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:11.935 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:11.935 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:11.936 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:11.937 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:11.940 +03:30 [DBG] Start discovery request
2020-10-19 12:45:12.018 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:45:12.022 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:45:12.042 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:45:12.043 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:45:12.043 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:12.044 +03:30 [DBG] Rendering check session result
2020-10-19 12:45:12.045 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:12.046 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:45:12.047 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:45:12.051 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:45:12.053 +03:30 [DBG] Start token request.
2020-10-19 12:45:12.054 +03:30 [DBG] Start client validation
2020-10-19 12:45:12.054 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:45:12.055 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:45:12.056 +03:30 [DBG] client id without secret found
2020-10-19 12:45:12.056 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:45:12.056 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:45:12.059 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.062 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:45:12.065 +03:30 [DBG] Client validation success
2020-10-19 12:45:12.066 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOI:00000002","TimeStamp":"2020-10-19T09:15:12.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:45:12.068 +03:30 [DBG] Start token request validation
2020-10-19 12:45:12.069 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:45:12.070 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:45:12.081 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:45:12.084 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ppb1MUikMPFSMwuIo4-83mU872CVMlnaXhyOBUau0YQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ppb1MUikMPFSMwuIo4-83mU872CVMlnaXhyOBUau0YQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"db76bfb4eca14856b17b7dc44ba628c96d0d8425e2c44bb18e795cc8477cdf3bd8834fca9246483fa3564872bc40e63a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:45:12.088 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.089 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:45:12.090 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:12.140 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.142 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:45:12.149 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:45:12.174 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****51sA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zCPw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOI:00000002","TimeStamp":"2020-10-19T09:15:12.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:12.187 +03:30 [DBG] Token request success.
2020-10-19 12:45:12.216 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:45:12.217 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:12.218 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:12.225 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:45:12.226 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:12.227 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:12.228 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 12:45:12.229 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 12:45:12.230 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 12:45:12.231 +03:30 [DBG] Start userinfo request
2020-10-19 12:45:12.231 +03:30 [DBG] Bearer token found in header
2020-10-19 12:45:12.233 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.234 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.245 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 12:45:12.246 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603098912,"exp":1603102512,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 12:45:12.257 +03:30 [DBG] Creating userinfo response
2020-10-19 12:45:12.258 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:45:12.259 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:45:12.259 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 12:45:12.261 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:45:12.279 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 12:45:12.280 +03:30 [DBG] End userinfo request
2020-10-19 12:45:12.530 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:12.535 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:12.541 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:12.542 +03:30 [DBG] Start authorize request
2020-10-19 12:45:12.543 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:12.544 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:12.545 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.546 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:12.547 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:12.548 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ff4f84d4bd144278b99b64bb5ca6e718","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ff4f84d4bd144278b99b64bb5ca6e718","code_challenge":"_Wx_gPYuZKujEQW_VcvN_UOqY4YrXaqI4Ny9zhcNaq8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:12.569 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:12.569 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:12.574 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****pS0E","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOF:00000003","TimeStamp":"2020-10-19T09:15:12.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:12.593 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ff4f84d4bd144278b99b64bb5ca6e718","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:45:12.597 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:12.598 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:12.598 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:12.599 +03:30 [DBG] Start authorize request
2020-10-19 12:45:12.600 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:12.600 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:12.601 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:12.601 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:12.602 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:12.603 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"a88020bc21994e489aad2001b46fb521","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"a88020bc21994e489aad2001b46fb521","code_challenge":"aPr7vC74snXjV-F_zNidDTSpDAnCdS34u0f0G6hH7i4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:12.622 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:12.623 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:12.624 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HzsQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOG:00000001","TimeStamp":"2020-10-19T09:15:12.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:12.630 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"a88020bc21994e489aad2001b46fb521","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:45:15.890 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:15.894 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:15.896 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:15.897 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:15.899 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:15.900 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:15.902 +03:30 [DBG] Start discovery request
2020-10-19 12:45:15.907 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:15.908 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:15.910 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:15.911 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:15.912 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:15.913 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:15.914 +03:30 [DBG] Start discovery request
2020-10-19 12:45:18.740 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:18.743 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:45:18.745 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:18.746 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:18.746 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:18.747 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:18.748 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:45:18.748 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:18.751 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:45:18.780 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:45:18.780 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:18.780 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:45:18.783 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:45:18.784 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:18.784 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:45:18.785 +03:30 [DBG] Start token request.
2020-10-19 12:45:18.787 +03:30 [DBG] Start discovery request
2020-10-19 12:45:18.789 +03:30 [DBG] Start client validation
2020-10-19 12:45:18.791 +03:30 [DBG] Rendering check session result
2020-10-19 12:45:18.792 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:45:18.793 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:45:18.794 +03:30 [DBG] client id without secret found
2020-10-19 12:45:18.796 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:45:18.801 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:45:18.802 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:18.803 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:45:18.803 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:45:18.804 +03:30 [DBG] Client validation success
2020-10-19 12:45:18.818 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:18.824 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOI:00000006","TimeStamp":"2020-10-19T09:15:18.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:45:18.825 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:18.835 +03:30 [DBG] Start token request validation
2020-10-19 12:45:18.836 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:45:18.836 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:45:18.838 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:45:18.839 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:45:18.840 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:45:18.841 +03:30 [DBG] Start discovery request
2020-10-19 12:45:18.861 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:45:18.863 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"KqzXSjyxsxLnEyZYpqTrf5oA7wLGO4MM6cy3RTApS0E","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"KqzXSjyxsxLnEyZYpqTrf5oA7wLGO4MM6cy3RTApS0E","redirect_uri":"http://localhost:8081/callback","code_verifier":"5147b255f1cf43e389515b0270b3eb168f5919124f2349b4af5925229222659b35c05d1a3f0a4d97a5235876996e34c1","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:45:18.873 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:18.874 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:45:18.875 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:18.893 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:45:18.899 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:45:18.899 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:45:18.904 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:45:18.905 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:45:18.908 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:45:18.909 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:45:18.910 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:45:18.912 +03:30 [DBG] Rendering check session result
2020-10-19 12:45:18.915 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:45:18.924 +03:30 [DBG] Start token request.
2020-10-19 12:45:18.931 +03:30 [DBG] Start client validation
2020-10-19 12:45:18.939 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:18.952 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:45:18.961 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:45:18.961 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:45:18.962 +03:30 [DBG] client id without secret found
2020-10-19 12:45:18.963 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:45:18.968 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:45:18.969 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:45:18.970 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:18.971 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:45:18.972 +03:30 [DBG] Client validation success
2020-10-19 12:45:18.972 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOJ:00000002","TimeStamp":"2020-10-19T09:15:18.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:45:18.973 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****fYSQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aUBA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOI:00000006","TimeStamp":"2020-10-19T09:15:18.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:18.975 +03:30 [DBG] Start token request validation
2020-10-19 12:45:19.013 +03:30 [DBG] Token request success.
2020-10-19 12:45:19.014 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:45:19.016 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:45:19.030 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:45:19.033 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"nfL_mm6aD5-Z0evhDCMpXK0Iw9kn2Hw4Jst8yeCHzsQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"nfL_mm6aD5-Z0evhDCMpXK0Iw9kn2Hw4Jst8yeCHzsQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"65ddeb793ab347008bbd33a1e9692953b9bb22adcafc40229a187d565368848760a4e6353e5c4a988821274cfd0440de","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:45:19.070 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:19.072 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:45:19.075 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:19.104 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:19.106 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:45:19.109 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:45:19.121 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****LP5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qa8A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOJ:00000002","TimeStamp":"2020-10-19T09:15:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:19.131 +03:30 [DBG] Token request success.
2020-10-19 12:45:19.303 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:19.306 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:19.307 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:19.310 +03:30 [DBG] Start authorize request
2020-10-19 12:45:19.312 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:19.312 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:19.313 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:19.314 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:19.315 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:19.316 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"3ce4ccd8711b470aa4cc026b3fd5b6fa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"3ce4ccd8711b470aa4cc026b3fd5b6fa","code_challenge":"PNDkVqmB2-sm9sdC9o-ZAWkLopwCDi311-AiyygftHw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:19.338 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:19.348 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:19.349 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:19.351 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:19.352 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:19.355 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HQW4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOG:00000004","TimeStamp":"2020-10-19T09:15:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:19.355 +03:30 [DBG] Start authorize request
2020-10-19 12:45:19.361 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"3ce4ccd8711b470aa4cc026b3fd5b6fa","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:45:19.361 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:19.366 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:19.367 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:19.368 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:19.369 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:19.370 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d259fe5764ba42cd80ea7fbe6b7429d6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d259fe5764ba42cd80ea7fbe6b7429d6","code_challenge":"LprIZt66ysqehkBZO8G14NaHqNH_BbOBBOxX1ark03g","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:19.396 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:19.398 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:19.399 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****YMpc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOF:00000004","TimeStamp":"2020-10-19T09:15:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:19.408 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d259fe5764ba42cd80ea7fbe6b7429d6","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:45:19.749 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:45:19.751 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:45:19.753 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:45:19.755 +03:30 [DBG] Start authorize request
2020-10-19 12:45:19.756 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:45:19.757 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:45:19.758 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:45:19.759 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:45:19.760 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:45:19.763 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"643421ea246c4317acb20cd9fbc7a82f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"643421ea246c4317acb20cd9fbc7a82f","code_challenge":"ZmunYn38QGNcfocG230HK3Py-BqRqvIGxzN4PqY_Bl8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:45:19.785 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:45:19.786 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:45:19.787 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****puoM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOF:00000005","TimeStamp":"2020-10-19T09:15:19.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:45:19.804 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"643421ea246c4317acb20cd9fbc7a82f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:51:32.516 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:32.518 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:32.520 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:32.521 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:32.522 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:32.524 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:32.525 +03:30 [DBG] Start discovery request
2020-10-19 12:51:32.582 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:51:32.583 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:51:32.584 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:51:32.585 +03:30 [DBG] Rendering check session result
2020-10-19 12:51:33.608 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:51:33.618 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:51:33.625 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:51:33.629 +03:30 [DBG] Start authorize request
2020-10-19 12:51:33.630 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:33.631 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:51:33.634 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:33.635 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:51:33.636 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:51:33.639 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bc13d9268bb845ea8d023f332fade88b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"bc13d9268bb845ea8d023f332fade88b","code_challenge":"zJXfE-d5bvZmYXB0gxa9KW5ky6IvCtStD4Fknfh0xg4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:51:33.652 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:51:33.653 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:51:33.654 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****45TM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOL:00000002","TimeStamp":"2020-10-19T09:21:33.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:33.668 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bc13d9268bb845ea8d023f332fade88b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:51:36.588 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:36.630 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:36.633 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:36.633 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:36.634 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:36.635 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:36.638 +03:30 [DBG] Start discovery request
2020-10-19 12:51:36.648 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:36.649 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:36.650 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:36.651 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:36.652 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:36.653 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:36.654 +03:30 [DBG] Start discovery request
2020-10-19 12:51:36.694 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:51:36.698 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:51:36.701 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:51:36.701 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:51:36.703 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:36.705 +03:30 [DBG] Rendering check session result
2020-10-19 12:51:36.706 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:36.707 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:51:36.709 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:51:36.710 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:51:36.710 +03:30 [DBG] Start token request.
2020-10-19 12:51:36.711 +03:30 [DBG] Start client validation
2020-10-19 12:51:36.711 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:51:36.712 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:51:36.712 +03:30 [DBG] client id without secret found
2020-10-19 12:51:36.713 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:51:36.713 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:51:36.714 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:36.715 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:51:36.715 +03:30 [DBG] Client validation success
2020-10-19 12:51:36.716 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOM:00000002","TimeStamp":"2020-10-19T09:21:36.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:51:36.721 +03:30 [DBG] Start token request validation
2020-10-19 12:51:36.722 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:51:36.723 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:51:36.736 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:51:36.738 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"q0RnogNvODndkAYTGCn9zjCOvWcRWx1BEFmaRft45TM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"q0RnogNvODndkAYTGCn9zjCOvWcRWx1BEFmaRft45TM","redirect_uri":"http://localhost:8081/callback","code_verifier":"653f29c8de004c14bacbb2e9b01c890d77b0c29617ed4e40aa27d5bbc37345dc6484a40376ec4f63964dc4bf8c8a10c6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:51:36.745 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:36.746 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:51:36.747 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:36.785 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:36.788 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:51:36.794 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:51:36.801 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7MFA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****trWg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOM:00000002","TimeStamp":"2020-10-19T09:21:36.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:36.822 +03:30 [DBG] Token request success.
2020-10-19 12:51:37.349 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:51:37.363 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:51:37.376 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:51:37.385 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:51:37.387 +03:30 [DBG] Start authorize request
2020-10-19 12:51:37.388 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:51:37.388 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:37.389 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:51:37.389 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:51:37.390 +03:30 [DBG] Start authorize request
2020-10-19 12:51:37.390 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:37.391 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:37.392 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:51:37.393 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:51:37.394 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:51:37.394 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:37.395 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"2f197b7db21447d7868b4147f04a067f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"2f197b7db21447d7868b4147f04a067f","code_challenge":"ned3F3-FqlSCVBfM7Vn1_pWjwchzNQEyP1QkjYKa4_4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:51:37.400 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:51:37.414 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:51:37.425 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"6a2c24dbd9d04e71a2a244ddb5af0d52","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"6a2c24dbd9d04e71a2a244ddb5af0d52","code_challenge":"SgJkSuSJeOuTEer65KaMLpOZ6CcdkkixVGaFh4kCS5M","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:51:37.433 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:51:37.441 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:51:37.443 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****pqAY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOL:00000004","TimeStamp":"2020-10-19T09:21:37.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:37.453 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"2f197b7db21447d7868b4147f04a067f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:51:37.454 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:51:37.455 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:51:37.456 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****sB3M","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAON:00000001","TimeStamp":"2020-10-19T09:21:37.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:37.475 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"6a2c24dbd9d04e71a2a244ddb5af0d52","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:51:40.522 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:40.523 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:40.524 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:40.526 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:40.527 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:40.528 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:40.529 +03:30 [DBG] Start discovery request
2020-10-19 12:51:40.544 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:40.545 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:40.546 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:40.546 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:40.547 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:40.548 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:40.549 +03:30 [DBG] Start discovery request
2020-10-19 12:51:43.328 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:43.330 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:43.331 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:43.332 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:43.333 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:43.334 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:43.335 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:51:43.337 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:43.337 +03:30 [DBG] Start discovery request
2020-10-19 12:51:43.339 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:43.341 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:51:43.343 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:51:43.343 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:51:43.345 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:51:43.345 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:51:43.346 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:51:43.347 +03:30 [DBG] Start token request.
2020-10-19 12:51:43.353 +03:30 [DBG] Rendering check session result
2020-10-19 12:51:43.354 +03:30 [DBG] Start client validation
2020-10-19 12:51:43.355 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:51:43.357 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:51:43.360 +03:30 [DBG] client id without secret found
2020-10-19 12:51:43.361 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:51:43.362 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:51:43.362 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:51:43.364 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:43.365 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.366 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:43.367 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:51:43.368 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:51:43.369 +03:30 [DBG] Client validation success
2020-10-19 12:51:43.372 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:51:43.373 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOM:00000004","TimeStamp":"2020-10-19T09:21:43.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:51:43.375 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:51:43.376 +03:30 [DBG] Start discovery request
2020-10-19 12:51:43.380 +03:30 [DBG] Start token request validation
2020-10-19 12:51:43.382 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:51:43.383 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:51:43.397 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:51:43.398 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"JYzl0kqM-0qXu1tdwiSAuOAUnLS6dMVJfMDzAPJpqAY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"JYzl0kqM-0qXu1tdwiSAuOAUnLS6dMVJfMDzAPJpqAY","redirect_uri":"http://localhost:8081/callback","code_verifier":"e060ce7ab7c04b2999f26fe3e5c7bb54488d0813b5f74344baa9945ec2ea75a6365e3ba1b5dc4ecaa33605ef76a4a8e4","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:51:43.405 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.406 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:51:43.407 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:43.465 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:51:43.473 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:51:43.478 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:51:43.509 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:51:43.509 +03:30 [DBG] Rendering check session result
2020-10-19 12:51:43.511 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:51:43.513 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:51:43.516 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:51:43.516 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.518 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:51:43.519 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:51:43.520 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:51:43.521 +03:30 [DBG] Start token request.
2020-10-19 12:51:43.522 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:51:43.522 +03:30 [DBG] Start client validation
2020-10-19 12:51:43.524 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:51:43.525 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:51:43.525 +03:30 [DBG] client id without secret found
2020-10-19 12:51:43.526 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:51:43.529 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:51:43.529 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****emtA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Iy6g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOM:00000004","TimeStamp":"2020-10-19T09:21:43.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:43.529 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.535 +03:30 [DBG] Token request success.
2020-10-19 12:51:43.535 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:51:43.536 +03:30 [DBG] Client validation success
2020-10-19 12:51:43.537 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOO:00000002","TimeStamp":"2020-10-19T09:21:43.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:51:43.541 +03:30 [DBG] Start token request validation
2020-10-19 12:51:43.542 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:51:43.544 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:51:43.556 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:51:43.557 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Yk4dujRVHOttcIHsGoBgUbMuirybBRQbUmUcUoNsB3M","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Yk4dujRVHOttcIHsGoBgUbMuirybBRQbUmUcUoNsB3M","redirect_uri":"http://localhost:8081/callback","code_verifier":"08e5bc7cb5494f47874201d1bc35a3bfa6f755cb3a37484898b52e97fc57a91e60a4e1e0c8b04df2bc05deaf0f343736","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:51:43.566 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.567 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:51:43.568 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:51:43.604 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:51:43.697 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:51:43.708 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:51:43.720 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****2n6A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Iy6g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOO:00000002","TimeStamp":"2020-10-19T09:21:43.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:51:43.740 +03:30 [DBG] Token request success.
2020-10-19 12:52:51.291 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:52:51.311 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:52:51.312 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:52:51.316 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:52:51.317 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:52:51.325 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:52:51.328 +03:30 [DBG] Start discovery request
2020-10-19 12:52:52.298 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:52:52.339 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:52:52.340 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:52:52.341 +03:30 [DBG] Rendering check session result
2020-10-19 12:52:53.035 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:52:53.036 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:52:53.037 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:52:53.039 +03:30 [DBG] Start authorize request
2020-10-19 12:52:53.041 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:52:53.042 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:52:53.043 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:52:53.043 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:52:53.044 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:52:53.045 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e82958c83ddc465f9ffa0cfc5f1deb48","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e82958c83ddc465f9ffa0cfc5f1deb48","code_challenge":"nAi5dCis2duZGJEXl3LudH55zrDLdTb3IaRQNv_fBGo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:52:53.063 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:52:53.063 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:52:53.064 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****_SYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAON:00000005","TimeStamp":"2020-10-19T09:22:53.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:52:53.068 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e82958c83ddc465f9ffa0cfc5f1deb48","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:53:05.422 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:53:05.425 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:53:05.427 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:53:05.430 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:53:05.460 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:53:05.480 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:53:05.515 +03:30 [DBG] Start discovery request
2020-10-19 12:53:55.102 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:53:55.112 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:53:55.115 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:53:55.116 +03:30 [DBG] Start authorize request
2020-10-19 12:53:55.117 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:53:55.118 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:53:55.119 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:53:55.120 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:53:55.121 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:53:55.122 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"104f283c38864dc58dd0ba75a86cdbdc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"104f283c38864dc58dd0ba75a86cdbdc","code_challenge":"na-zMXaWo9mblm3wVxU91D2XtzkRjBwP6PmBK7FbG6U","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:53:55.150 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:53:55.183 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:53:55.184 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****UJqU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAON:00000006","TimeStamp":"2020-10-19T09:23:55.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:53:55.222 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"104f283c38864dc58dd0ba75a86cdbdc","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:54:09.261 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:54:09.264 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:54:09.265 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:54:09.267 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:54:09.269 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:54:09.304 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:54:09.308 +03:30 [DBG] Start discovery request
2020-10-19 12:54:09.322 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:54:09.324 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:54:09.325 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:54:09.326 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:54:09.327 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:54:09.329 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:54:09.330 +03:30 [DBG] Start discovery request
2020-10-19 12:54:09.432 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 12:54:09.433 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 12:54:09.438 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:54:09.439 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 12:54:09.441 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:54:09.443 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 12:54:09.444 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 12:54:09.445 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 12:54:09.446 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 12:54:09.452 +03:30 [DBG] Start token request.
2020-10-19 12:54:09.458 +03:30 [DBG] Rendering check session result
2020-10-19 12:54:09.465 +03:30 [DBG] Start client validation
2020-10-19 12:54:09.467 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 12:54:09.468 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 12:54:09.468 +03:30 [DBG] client id without secret found
2020-10-19 12:54:09.469 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 12:54:09.470 +03:30 [DBG] Secret id found: frontend
2020-10-19 12:54:09.472 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:09.474 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 12:54:09.475 +03:30 [DBG] Client validation success
2020-10-19 12:54:09.477 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOP:00000002","TimeStamp":"2020-10-19T09:24:09.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 12:54:09.485 +03:30 [DBG] Start token request validation
2020-10-19 12:54:09.488 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 12:54:09.490 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 12:54:09.536 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 12:54:09.553 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"617RDgLIXTXgIo9j96SkmNrHhbBHQ3MtnmqZqZsUJqU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"617RDgLIXTXgIo9j96SkmNrHhbBHQ3MtnmqZqZsUJqU","redirect_uri":"http://localhost:8081/callback","code_verifier":"ac3ed5bc5a064581b479f06e1ffca169f1bb51a6d1844bfd9c3d81aacf070bf511d3735c3fa94bb59f2a2809a4cd0c3f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 12:54:09.573 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:09.618 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 12:54:09.619 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:54:09.660 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:09.661 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 12:54:09.662 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 12:54:09.668 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****AvDA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Yn5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOP:00000002","TimeStamp":"2020-10-19T09:24:09.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:54:09.675 +03:30 [DBG] Token request success.
2020-10-19 12:54:09.812 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:54:09.833 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:54:09.834 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:54:09.883 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 12:54:09.886 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:54:09.887 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:54:09.888 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 12:54:09.890 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 12:54:09.891 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 12:54:09.893 +03:30 [DBG] Start userinfo request
2020-10-19 12:54:09.896 +03:30 [DBG] Bearer token found in header
2020-10-19 12:54:09.898 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:09.901 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:09.928 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 12:54:09.929 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603099449,"exp":1603103049,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 12:54:09.936 +03:30 [DBG] Creating userinfo response
2020-10-19 12:54:09.937 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:54:09.938 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:54:09.939 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 12:54:09.940 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 12:54:09.973 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 12:54:09.974 +03:30 [DBG] End userinfo request
2020-10-19 12:54:10.391 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:54:10.393 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:54:10.394 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:54:10.395 +03:30 [DBG] Start authorize request
2020-10-19 12:54:10.397 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:54:10.397 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:54:10.398 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:10.399 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:54:10.400 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:54:10.402 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"fe49bd710fd0469facefeb5bd2c50e50","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"fe49bd710fd0469facefeb5bd2c50e50","code_challenge":"2dDQMC1ud-DmCdpONOjQxvscNYs3NBbNGg3LiK5SoAc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:54:10.418 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:54:10.419 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:54:10.421 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****n0BA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAON:00000008","TimeStamp":"2020-10-19T09:24:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:54:10.424 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"fe49bd710fd0469facefeb5bd2c50e50","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:54:10.569 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 12:54:10.571 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 12:54:10.574 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 12:54:10.576 +03:30 [DBG] Start authorize request
2020-10-19 12:54:10.576 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 12:54:10.578 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 12:54:10.578 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 12:54:10.579 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 12:54:10.581 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 12:54:10.582 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"8bdca02ce9574eb586a2d3c6c48161a1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"8bdca02ce9574eb586a2d3c6c48161a1","code_challenge":"1eNxcSdd0CwmMZ9pgtLRvO8SejRp8YyGjchxj7zFHUo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 12:54:10.600 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 12:54:10.603 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 12:54:10.606 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****QaCk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAON:00000009","TimeStamp":"2020-10-19T09:24:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 12:54:10.611 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"8bdca02ce9574eb586a2d3c6c48161a1","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 12:59:33.892 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 12:59:33.895 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 12:59:33.896 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 12:59:33.897 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 12:59:33.899 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 12:59:33.899 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 12:59:33.922 +03:30 [DBG] Start discovery request
2020-10-19 13:00:28.164 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:00:28.166 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:00:28.168 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:00:28.169 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:00:28.177 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:00:28.188 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:00:28.193 +03:30 [DBG] Start discovery request
2020-10-19 13:00:52.905 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:00:52.908 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:00:52.910 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:00:52.911 +03:30 [DBG] Rendering check session result
2020-10-19 13:00:54.418 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:00:54.420 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:00:54.422 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:00:54.424 +03:30 [DBG] Start authorize request
2020-10-19 13:00:54.425 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:00:54.427 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:00:54.430 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:00:54.436 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:00:54.437 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:00:54.439 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b554184f8e2748ec87f2a3fcddbd6e75","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b554184f8e2748ec87f2a3fcddbd6e75","code_challenge":"mkCyZKghmJzNjtin_8VyMpiRfNbeGvHpcVMtySGaDJ8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:00:54.847 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:00:54.850 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:00:54.851 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****F1Gg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOR:00000002","TimeStamp":"2020-10-19T09:30:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:00:54.859 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b554184f8e2748ec87f2a3fcddbd6e75","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:01:22.063 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:01:22.065 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:01:22.067 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:01:22.068 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:01:22.070 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:01:22.071 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:01:22.072 +03:30 [DBG] Start discovery request
2020-10-19 13:01:22.113 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:01:22.121 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:01:22.125 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:01:22.130 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:01:22.135 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:01:22.136 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:01:22.137 +03:30 [DBG] Start discovery request
2020-10-19 13:01:26.456 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:01:26.459 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:01:26.460 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:01:26.460 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:01:26.462 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:01:26.462 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:01:26.464 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:01:26.466 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:01:26.466 +03:30 [DBG] Rendering check session result
2020-10-19 13:01:26.468 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:01:26.470 +03:30 [DBG] Start token request.
2020-10-19 13:01:26.474 +03:30 [DBG] Start client validation
2020-10-19 13:01:26.506 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:01:26.514 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:01:27.001 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3JV48BKAOS:00000002","TimeStamp":"2020-10-19T09:31:27.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 13:01:27.018 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 13:01:27.059 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 13:06:36.915 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:06:36.992 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:06:37.072 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:06:37.111 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:06:37.114 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:06:37.115 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:06:37.116 +03:30 [DBG] Start discovery request
2020-10-19 13:07:09.162 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:07:09.167 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:07:09.169 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:07:09.170 +03:30 [DBG] Rendering check session result
2020-10-19 13:07:09.962 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:07:09.965 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:07:09.966 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:07:09.966 +03:30 [DBG] Start authorize request
2020-10-19 13:07:09.967 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:07:09.967 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:07:09.968 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:07:09.969 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:07:09.969 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:07:09.971 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"29dd2f7ded0343f7933c7877cc81ae94","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"29dd2f7ded0343f7933c7877cc81ae94","code_challenge":"zjY5ddUEWarbam82KrI64gC4Dn_HqgKh-CMUL_YiGiY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:07:10.034 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:07:10.044 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:07:10.046 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****B3Qk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOU:00000002","TimeStamp":"2020-10-19T09:37:10.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:07:10.059 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"29dd2f7ded0343f7933c7877cc81ae94","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:07:27.810 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:07:27.812 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:07:27.813 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:07:27.814 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:07:27.817 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:07:27.819 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:07:27.821 +03:30 [DBG] Start discovery request
2020-10-19 13:07:27.883 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:07:27.894 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:07:27.900 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:07:27.909 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:07:27.911 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:07:27.913 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:07:27.914 +03:30 [DBG] Start discovery request
2020-10-19 13:07:32.275 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:07:32.275 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:07:32.278 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:07:32.279 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:07:32.279 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:07:32.280 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:07:32.281 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:07:32.282 +03:30 [DBG] Rendering check session result
2020-10-19 13:07:32.283 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:07:32.284 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:07:32.288 +03:30 [DBG] Start token request.
2020-10-19 13:07:32.288 +03:30 [DBG] Start client validation
2020-10-19 13:07:32.292 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:07:32.295 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:07:32.297 +03:30 [DBG] client id without secret found
2020-10-19 13:07:32.298 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 13:07:32.298 +03:30 [DBG] Secret id found: frontend
2020-10-19 13:07:32.299 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:07:32.300 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 13:07:32.301 +03:30 [DBG] Client validation success
2020-10-19 13:07:32.302 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOV:00000002","TimeStamp":"2020-10-19T09:37:32.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 13:07:32.309 +03:30 [DBG] Start token request validation
2020-10-19 13:07:32.310 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 13:07:32.311 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 13:07:32.324 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 13:07:32.325 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"wb9rZpn0PW0yn8xk0Z9DS5V6t20v7H1Qi1nnP8YB3Qk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"wb9rZpn0PW0yn8xk0Z9DS5V6t20v7H1Qi1nnP8YB3Qk","redirect_uri":"http://localhost:8081/callback","code_verifier":"1f0646dd2967466c80f82395c186092193bce541a04c43dab63848b7b638137cb7a75fcbfdcf49c3bd8dcc5503192355","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 13:07:32.331 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:07:32.332 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 13:07:32.333 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:07:32.475 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:07:32.504 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 13:07:32.565 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 13:07:32.601 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ebcw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NSDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOV:00000002","TimeStamp":"2020-10-19T09:37:32.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:07:32.837 +03:30 [DBG] Token request success.
2020-10-19 13:08:25.296 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:08:25.297 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:08:25.298 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:08:25.300 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:08:25.302 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:08:25.304 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:08:25.305 +03:30 [DBG] Start discovery request
2020-10-19 13:08:42.060 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:08:42.076 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:08:42.077 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:08:42.083 +03:30 [DBG] Rendering check session result
2020-10-19 13:08:42.782 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:08:42.784 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:08:42.785 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:08:42.786 +03:30 [DBG] Start authorize request
2020-10-19 13:08:42.787 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:08:42.788 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:08:42.789 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:08:42.790 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:08:42.791 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:08:42.792 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"1a769393fb30473cb4c63e7273ccc882","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"1a769393fb30473cb4c63e7273ccc882","code_challenge":"IyTcNF-j3Cz7HIc_mMqQLHzqdBfDVGWBTgaVCa94C4w","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:08:42.824 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:08:42.826 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:08:42.828 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****iU7M","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOU:00000005","TimeStamp":"2020-10-19T09:38:42.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:08:42.839 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"1a769393fb30473cb4c63e7273ccc882","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:09:11.971 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:09:11.973 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:09:11.974 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:09:11.975 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:09:11.976 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:09:11.977 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:09:11.978 +03:30 [DBG] Start discovery request
2020-10-19 13:09:12.030 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:09:12.032 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:09:12.034 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:09:12.035 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:09:12.036 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:09:12.038 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:09:12.039 +03:30 [DBG] Start discovery request
2020-10-19 13:11:59.183 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:11:59.187 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:11:59.188 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:11:59.189 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:11:59.191 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:11:59.191 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:11:59.192 +03:30 [DBG] Start discovery request
2020-10-19 13:12:07.021 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:12:07.027 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:12:07.027 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:12:07.028 +03:30 [DBG] Rendering check session result
2020-10-19 13:12:07.798 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:12:07.800 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:12:07.801 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:12:07.802 +03:30 [DBG] Start authorize request
2020-10-19 13:12:07.803 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:12:07.803 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:12:07.804 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:12:07.805 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:12:07.805 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:12:07.806 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"edeb92c66f50489c85e98a7f6aa5d8fa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"edeb92c66f50489c85e98a7f6aa5d8fa","code_challenge":"gfbDQQMY9EAR55Ec7o28XXpal4no-ZIJMjMK4Rpv42k","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:12:07.841 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:12:07.842 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:12:07.843 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****oi2g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOU:00000007","TimeStamp":"2020-10-19T09:42:07.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:12:07.846 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"edeb92c66f50489c85e98a7f6aa5d8fa","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:12:22.612 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:12:22.650 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:12:22.652 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:12:22.654 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:12:22.656 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:12:22.658 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:12:22.659 +03:30 [DBG] Start discovery request
2020-10-19 13:12:22.710 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:12:22.712 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:12:22.712 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:12:22.713 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:12:22.714 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:12:22.715 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:12:22.716 +03:30 [DBG] Start discovery request
2020-10-19 13:12:29.601 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:12:29.602 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:12:29.605 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:12:29.608 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:12:29.609 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:12:29.611 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:12:29.613 +03:30 [DBG] Rendering check session result
2020-10-19 13:12:29.616 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:12:29.619 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:12:29.620 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:12:29.621 +03:30 [DBG] Start token request.
2020-10-19 13:12:29.624 +03:30 [DBG] Start client validation
2020-10-19 13:12:29.625 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:12:29.627 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:12:29.629 +03:30 [DBG] client id without secret found
2020-10-19 13:12:29.630 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 13:12:29.631 +03:30 [DBG] Secret id found: frontend
2020-10-19 13:12:29.632 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:12:29.635 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 13:12:29.637 +03:30 [DBG] Client validation success
2020-10-19 13:12:29.638 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAOT:00000006","TimeStamp":"2020-10-19T09:42:29.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 13:12:29.643 +03:30 [DBG] Start token request validation
2020-10-19 13:12:29.644 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 13:12:29.645 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 13:12:29.684 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 13:12:29.687 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"bQzpDDxadBxHGIt2bkhXLmRRP9ovZ2uJ3XuMAJQoi2g","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"bQzpDDxadBxHGIt2bkhXLmRRP9ovZ2uJ3XuMAJQoi2g","redirect_uri":"http://localhost:8081/callback","code_verifier":"4aa8c636c10d4f5186be45c17cc1bdf2957a1d8ecacc41a7bb194c6ce19ee6a04fc7f67abef747c8adccc6607697aea8","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 13:12:29.692 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:12:29.693 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 13:12:29.694 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:12:29.973 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:12:30.002 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 13:12:30.003 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 13:12:30.010 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****BV_g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8dgw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOT:00000006","TimeStamp":"2020-10-19T09:42:30.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:12:30.015 +03:30 [DBG] Token request success.
2020-10-19 13:14:04.653 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:14:04.656 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:14:04.657 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:14:04.658 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:14:04.660 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:14:04.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:14:04.665 +03:30 [DBG] Start discovery request
2020-10-19 13:14:06.307 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:14:06.320 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:14:06.321 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:14:06.322 +03:30 [DBG] Rendering check session result
2020-10-19 13:14:07.423 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:14:07.426 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:14:07.428 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:14:07.429 +03:30 [DBG] Start authorize request
2020-10-19 13:14:07.430 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:14:07.433 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:14:07.434 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:14:07.436 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:14:07.438 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:14:07.439 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d6e710ec76fe444bb11821e7ace4b360","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d6e710ec76fe444bb11821e7ace4b360","code_challenge":"bvpyyTTC4VQldPH0PvHhdR93ql0-CRkWuHyJ_paI3Go","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:14:07.473 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:14:07.489 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:14:07.495 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****FWPk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAOU:0000000A","TimeStamp":"2020-10-19T09:44:07.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:14:07.507 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d6e710ec76fe444bb11821e7ace4b360","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:14:20.232 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:14:20.235 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:14:20.236 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:14:20.237 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:14:20.239 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:14:20.239 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:14:20.240 +03:30 [DBG] Start discovery request
2020-10-19 13:14:20.251 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:14:20.253 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:14:20.254 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:14:20.256 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:14:20.257 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:14:20.259 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:14:20.264 +03:30 [DBG] Start discovery request
2020-10-19 13:14:21.916 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:14:21.918 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:14:21.918 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:14:21.920 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:14:21.922 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:14:21.923 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:14:21.924 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:14:21.926 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:14:21.926 +03:30 [DBG] Rendering check session result
2020-10-19 13:14:21.927 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:14:21.929 +03:30 [DBG] Start token request.
2020-10-19 13:14:21.931 +03:30 [DBG] Start client validation
2020-10-19 13:14:21.933 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:14:21.934 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:14:21.990 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3JV48BKAP1:00000002","TimeStamp":"2020-10-19T09:44:21.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 13:14:21.996 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 13:14:22.016 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 13:34:12.350 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:34:12.354 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:34:12.355 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:34:12.362 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:34:12.368 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:34:12.373 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:34:12.381 +03:30 [DBG] Start discovery request
2020-10-19 13:34:16.784 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:34:16.787 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:34:16.788 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:34:16.790 +03:30 [DBG] Rendering check session result
2020-10-19 13:34:17.028 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:34:17.030 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:34:17.033 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:34:17.035 +03:30 [DBG] Start authorize request
2020-10-19 13:34:17.039 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:34:17.041 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:34:17.042 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:34:17.045 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:34:17.046 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:34:17.048 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"1b4df206e9c14bff8a69dce59eac4bd2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"1b4df206e9c14bff8a69dce59eac4bd2","code_challenge":"k5lSw1GIpY-PCJq4fsNigrsB168l8w3WOaWw1IU9T1k","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:34:17.071 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:34:17.072 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:34:17.074 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qIVQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAP3:00000002","TimeStamp":"2020-10-19T10:04:17.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:34:17.079 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"1b4df206e9c14bff8a69dce59eac4bd2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:34:24.322 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:34:24.323 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:34:24.325 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:34:24.325 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:34:24.327 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:34:24.328 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:34:24.328 +03:30 [DBG] Start discovery request
2020-10-19 13:34:24.340 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:34:24.341 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:34:24.342 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:34:24.345 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:34:24.348 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:34:24.349 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:34:24.353 +03:30 [DBG] Start discovery request
2020-10-19 13:34:25.566 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:34:25.568 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:34:25.569 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:34:25.572 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:34:25.573 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:34:25.574 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:34:25.575 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:34:25.576 +03:30 [DBG] Rendering check session result
2020-10-19 13:34:25.578 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:34:25.580 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:34:25.581 +03:30 [DBG] Start token request.
2020-10-19 13:34:25.581 +03:30 [DBG] Start client validation
2020-10-19 13:34:25.587 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:34:25.589 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:34:25.590 +03:30 [DBG] client id without secret found
2020-10-19 13:34:25.591 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 13:34:25.591 +03:30 [DBG] Secret id found: frontend
2020-10-19 13:34:25.592 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:34:25.593 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 13:34:25.594 +03:30 [DBG] Client validation success
2020-10-19 13:34:25.595 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3JV48BKAP4:00000002","TimeStamp":"2020-10-19T10:04:25.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 13:34:25.612 +03:30 [DBG] Start token request validation
2020-10-19 13:34:25.620 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 13:34:25.641 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 13:34:25.657 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 13:34:25.660 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"VUp6xz_6Vm1SKCYuI7qJJ-lTc_L4mipcdFp8kpoqIVQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"VUp6xz_6Vm1SKCYuI7qJJ-lTc_L4mipcdFp8kpoqIVQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"c578e1d7a83848059410e241475139c61912eb31d3eb435fb5dbe5e41ccb218268ee052311ef49919c82c633ca3b06ef","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 13:34:25.680 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:34:25.681 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 13:34:25.682 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:34:25.720 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:34:25.722 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 13:34:25.725 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 13:34:25.738 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****VLZA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7bOg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAP4:00000002","TimeStamp":"2020-10-19T10:04:25.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:34:25.755 +03:30 [DBG] Token request success.
2020-10-19 13:36:38.755 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:36:38.759 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:36:38.761 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:36:38.764 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:36:38.791 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:36:38.793 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:36:38.795 +03:30 [DBG] Start discovery request
2020-10-19 13:36:40.398 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:36:40.399 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:36:40.399 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:36:40.401 +03:30 [DBG] Rendering check session result
2020-10-19 13:36:41.159 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:36:41.180 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:36:41.181 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:36:41.182 +03:30 [DBG] Start authorize request
2020-10-19 13:36:41.182 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:36:41.183 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:36:41.183 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:36:41.184 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:36:41.195 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:36:41.248 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7ce5ccd785f34f4297d6b8ad8404cc95","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7ce5ccd785f34f4297d6b8ad8404cc95","code_challenge":"WkMNhbrm83Jluz1A-F_1jl99T9ouo2eNB40eQnGifPo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:36:41.567 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:36:41.616 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:36:41.618 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****uyIE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAP3:00000005","TimeStamp":"2020-10-19T10:06:41.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:36:41.625 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7ce5ccd785f34f4297d6b8ad8404cc95","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:36:49.681 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:36:49.687 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:36:49.690 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:36:49.691 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:36:49.694 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:36:49.696 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:36:49.699 +03:30 [DBG] Start discovery request
2020-10-19 13:36:49.743 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:36:49.745 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:36:49.746 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:36:49.748 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:36:49.749 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:36:49.750 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:36:49.753 +03:30 [DBG] Start discovery request
2020-10-19 13:36:51.125 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:36:51.125 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:36:51.132 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:36:51.133 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:36:51.133 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:36:51.135 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:36:51.142 +03:30 [DBG] Rendering check session result
2020-10-19 13:36:51.149 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:36:51.172 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:36:51.173 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:36:51.174 +03:30 [DBG] Start token request.
2020-10-19 13:36:51.175 +03:30 [DBG] Start client validation
2020-10-19 13:36:51.176 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:36:51.177 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:36:51.185 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3JV48BKAP2:00000004","TimeStamp":"2020-10-19T10:06:51.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 13:36:51.191 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 13:36:51.204 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 13:39:11.465 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:39:11.468 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:39:11.469 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:39:11.471 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:39:11.472 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:39:11.474 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:39:11.484 +03:30 [DBG] Start discovery request
2020-10-19 13:48:09.387 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:48:09.390 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:48:09.392 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:48:09.394 +03:30 [DBG] Rendering check session result
2020-10-19 13:48:10.442 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:48:10.454 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:48:10.455 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:48:10.456 +03:30 [DBG] Start authorize request
2020-10-19 13:48:10.457 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:48:10.457 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:48:10.458 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:48:10.458 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:48:10.459 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:48:10.460 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c7c85f86dbba4d15a72da5d678cc473d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"UEDi8oPMM1iA469rEc9FQw","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"c7c85f86dbba4d15a72da5d678cc473d","code_challenge":"Ht32ih0QmBkmvSV4BPrso6oN5DWv5zRXTwC2_O1xjF4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:48:13.281 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 13:48:13.284 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 13:48:13.286 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****8Fh4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3JV48BKAP5:00000002","TimeStamp":"2020-10-19T10:18:13.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 13:48:13.290 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"c7c85f86dbba4d15a72da5d678cc473d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 13:48:20.595 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:48:20.597 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:48:20.598 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:48:20.600 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:48:20.602 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:48:20.603 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:48:20.604 +03:30 [DBG] Start discovery request
2020-10-19 13:48:20.616 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:48:20.617 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:48:20.618 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:48:20.620 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:48:20.621 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:48:20.622 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:48:20.623 +03:30 [DBG] Start discovery request
2020-10-19 13:48:22.316 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 13:48:22.317 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 13:48:22.325 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:48:22.331 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 13:48:22.332 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:48:22.333 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 13:48:22.334 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 13:48:22.335 +03:30 [DBG] Rendering check session result
2020-10-19 13:48:22.336 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 13:48:22.337 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 13:48:22.339 +03:30 [DBG] Start token request.
2020-10-19 13:48:22.340 +03:30 [DBG] Start client validation
2020-10-19 13:48:22.341 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 13:48:22.343 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 13:48:22.354 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3JV48BKAP7:00000002","TimeStamp":"2020-10-19T10:18:22.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 13:48:22.360 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 13:48:22.372 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 13:54:48.627 +03:30 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-10-19 13:54:48.718 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-10-19 13:54:48.721 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-10-19 13:54:48.731 +03:30 [DBG] Processing signout request for cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 13:54:48.741 +03:30 [DBG] Start end session request validation
2020-10-19 13:54:48.755 +03:30 [DBG] Start identity token validation
2020-10-19 13:54:48.760 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:54:48.761 +03:30 [DBG] Client found: frontend / MarketPlace JavaScript Client
2020-10-19 13:54:49.171 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 13:54:49.173 +03:30 [DBG] Token validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603101865,"exp":1603102165,"iss":"http://localhost:5000","aud":"frontend","iat":1603101865,"at_hash":"KcNjGfDL9E8giYE1TqODNg","s_hash":"jhj44UJLqhmOb5njWb2p4w","sid":"UEDi8oPMM1iA469rEc9FQw","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603089471,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 13:54:49.191 +03:30 [INF] End session request validation success
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","PostLogOutUri":"http://localhost:8081","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:8081"},"$type":"EndSessionRequestValidationLog"}
2020-10-19 13:54:49.199 +03:30 [DBG] Success validating end session request from frontend
2020-10-19 13:54:49.433 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-19 13:54:49.439 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-19 13:54:49.441 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-19 13:54:49.444 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HM3JV48BKAP8:00000002","TimeStamp":"2020-10-19T10:24:49.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-10-19 13:54:49.784 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-10-19 13:54:49.794 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-10-19 13:54:49.798 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-10-19 13:54:49.807 +03:30 [DBG] Processing signout callback request
2020-10-19 13:54:49.836 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:54:49.838 +03:30 [DBG] No client front-channel logout URLs
2020-10-19 13:54:49.840 +03:30 [DBG] No client back-channel logout URLs
2020-10-19 13:54:49.847 +03:30 [INF] Successful signout callback.
2020-10-19 13:54:49.848 +03:30 [DBG] No client front-channel iframe urls
2020-10-19 13:54:49.850 +03:30 [DBG] No client back-channel iframe urls
2020-10-19 13:55:19.957 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:55:19.966 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:55:19.970 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:55:19.971 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:55:19.973 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:55:19.975 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:55:19.977 +03:30 [DBG] Start discovery request
2020-10-19 13:55:20.179 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:55:20.182 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:55:20.184 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:55:20.187 +03:30 [DBG] Start authorize request
2020-10-19 13:55:20.192 +03:30 [DBG] No user present in authorize request
2020-10-19 13:55:20.194 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:20.194 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:20.195 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:20.196 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:20.202 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"12aab0b3060f4b3bbe42a09e379cc623","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"12aab0b3060f4b3bbe42a09e379cc623","code_challenge":"7KFAvjPTB-QMKLJ9Y7QUttUTLf4jeSvG9nWcl1hzlLE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:20.213 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 13:55:20.229 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:20.230 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:20.232 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:20.234 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:20.240 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:23.711 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 13:55:23.721 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:23.722 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:23.724 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:23.725 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:23.728 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:24.141 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 13:55:24.168 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 13:55:24.172 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 13:55:24.173 +03:30 [DBG] Start authorize callback request
2020-10-19 13:55:24.176 +03:30 [DBG] No user present in authorize request
2020-10-19 13:55:24.178 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:24.179 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:24.180 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:24.182 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:24.185 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"12aab0b3060f4b3bbe42a09e379cc623","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"12aab0b3060f4b3bbe42a09e379cc623","code_challenge":"7KFAvjPTB-QMKLJ9Y7QUttUTLf4jeSvG9nWcl1hzlLE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:24.199 +03:30 [INF] Error: User denied consent
2020-10-19 13:55:24.204 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"12aab0b3060f4b3bbe42a09e379cc623","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"12aab0b3060f4b3bbe42a09e379cc623","code_challenge":"7KFAvjPTB-QMKLJ9Y7QUttUTLf4jeSvG9nWcl1hzlLE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:24.223 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3JV48BKAP8:00000007","TimeStamp":"2020-10-19T10:25:24.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-19 13:55:51.441 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:55:51.449 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:55:51.450 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:55:51.458 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:55:51.502 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:55:51.506 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:55:51.513 +03:30 [DBG] Start discovery request
2020-10-19 13:55:51.663 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:55:51.664 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:55:51.665 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:55:51.665 +03:30 [DBG] Start authorize request
2020-10-19 13:55:51.666 +03:30 [DBG] No user present in authorize request
2020-10-19 13:55:51.666 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:51.667 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:51.667 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:51.668 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:51.669 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"f5c540d1575b4731a8ad9a29de20b81f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"f5c540d1575b4731a8ad9a29de20b81f","code_challenge":"DBipjlPc35-hqryXiKpSuxcGxLeM7o642l0jR7i8Seg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:51.679 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 13:55:51.697 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:51.698 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:51.700 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:51.705 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:51.708 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:53.866 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 13:55:53.875 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:53.876 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:53.877 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:53.878 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:53.880 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:54.070 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 13:55:54.072 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 13:55:54.073 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 13:55:54.074 +03:30 [DBG] Start authorize callback request
2020-10-19 13:55:54.076 +03:30 [DBG] No user present in authorize request
2020-10-19 13:55:54.076 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:55:54.077 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:55:54.078 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:55:54.079 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:55:54.080 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"f5c540d1575b4731a8ad9a29de20b81f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"f5c540d1575b4731a8ad9a29de20b81f","code_challenge":"DBipjlPc35-hqryXiKpSuxcGxLeM7o642l0jR7i8Seg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:54.087 +03:30 [INF] Error: User denied consent
2020-10-19 13:55:54.088 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"f5c540d1575b4731a8ad9a29de20b81f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"f5c540d1575b4731a8ad9a29de20b81f","code_challenge":"DBipjlPc35-hqryXiKpSuxcGxLeM7o642l0jR7i8Seg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:55:54.096 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3JV48BKAP8:0000000B","TimeStamp":"2020-10-19T10:25:54.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-19 13:56:28.091 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 13:56:28.103 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 13:56:28.104 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 13:56:28.104 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 13:56:28.108 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 13:56:28.109 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 13:56:28.112 +03:30 [DBG] Start discovery request
2020-10-19 13:56:28.239 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 13:56:28.240 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 13:56:28.241 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 13:56:28.241 +03:30 [DBG] Start authorize request
2020-10-19 13:56:28.242 +03:30 [DBG] No user present in authorize request
2020-10-19 13:56:28.243 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:56:28.244 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:28.245 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:56:28.246 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:56:28.247 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b1063a5827c549d0aa61fb48ea1d118e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"b1063a5827c549d0aa61fb48ea1d118e","code_challenge":"ky2c_cy6nxM4LzYWCVVPGGFyhS2sqkDKa8PDv9S9D0s","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:56:28.256 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 13:56:28.271 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:56:28.275 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:28.290 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:56:28.295 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:56:28.300 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:31.014 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 13:56:31.019 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:56:31.020 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:31.024 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:56:31.026 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:56:31.029 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:31.378 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 13:56:31.381 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 13:56:31.382 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 13:56:31.383 +03:30 [DBG] Start authorize callback request
2020-10-19 13:56:31.386 +03:30 [DBG] No user present in authorize request
2020-10-19 13:56:31.386 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 13:56:31.388 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 13:56:31.390 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 13:56:31.391 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 13:56:31.392 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b1063a5827c549d0aa61fb48ea1d118e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"b1063a5827c549d0aa61fb48ea1d118e","code_challenge":"ky2c_cy6nxM4LzYWCVVPGGFyhS2sqkDKa8PDv9S9D0s","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:56:31.411 +03:30 [INF] Error: User denied consent
2020-10-19 13:56:31.412 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"b1063a5827c549d0aa61fb48ea1d118e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"b1063a5827c549d0aa61fb48ea1d118e","code_challenge":"ky2c_cy6nxM4LzYWCVVPGGFyhS2sqkDKa8PDv9S9D0s","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 13:56:31.420 +03:30 [INF] {"ClientId":"frontend","ClientName":"MarketPlace JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"access_denied","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3JV48BKAP8:0000000F","TimeStamp":"2020-10-19T10:26:31.0000000Z","ProcessId":17500,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-19 14:21:30.113 +03:30 [INF] Starting host...
2020-10-19 14:21:30.651 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 14:21:30.690 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 14:21:30.705 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 14:21:30.706 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 14:21:30.707 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 14:21:30.708 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 14:21:30.713 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 14:21:30.715 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 14:21:33.759 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 14:21:33.768 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 14:21:33.771 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 14:21:33.774 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 14:21:33.776 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 14:21:33.791 +03:30 [DBG] Error Url: /home/error
2020-10-19 14:21:33.819 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 14:46:46.977 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 14:46:46.994 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:46:46.996 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:46:47.010 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 14:46:47.628 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 14:46:47.633 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 14:46:47.638 +03:30 [DBG] Start discovery request
2020-10-19 14:46:50.900 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 14:46:50.933 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 14:46:50.945 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 14:46:50.955 +03:30 [DBG] Start authorize request
2020-10-19 14:46:51.019 +03:30 [DBG] No user present in authorize request
2020-10-19 14:46:51.043 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:46:51.100 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:46:51.181 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:46:51.289 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:46:51.358 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"5f8923d5eee8483280d035ada848a64d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"5f8923d5eee8483280d035ada848a64d","code_challenge":"dmAcQdBSkt3THD_6oBMQ_Vk7Cfr6e5Pi1y5nUPP0Pqc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 14:46:51.898 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 14:46:52.171 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:46:52.193 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:46:52.212 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:46:52.231 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:46:52.261 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:46:57.729 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 14:46:57.939 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:46:57.955 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:46:57.985 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:46:58.021 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:47:03.609 +03:30 [DBG] Augmenting SignInContext
2020-10-19 14:47:03.614 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 14:47:03.616 +03:30 [DBG] Adding auth_time claim with value: 1603106223
2020-10-19 14:47:03.670 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 14:47:03.725 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3K3JOA3197:00000004","TimeStamp":"2020-10-19T11:17:03.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-19 14:47:03.751 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:03.840 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 14:47:03.844 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 14:47:03.850 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 14:47:03.862 +03:30 [DBG] Start authorize callback request
2020-10-19 14:47:03.884 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:47:03.888 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:47:03.890 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:03.899 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:47:03.903 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:47:03.909 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"5f8923d5eee8483280d035ada848a64d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"5f8923d5eee8483280d035ada848a64d","code_challenge":"dmAcQdBSkt3THD_6oBMQ_Vk7Cfr6e5Pi1y5nUPP0Pqc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 14:47:04.159 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 14:47:04.166 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 14:47:04.168 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 14:47:04.248 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:47:04.252 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:04.260 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:47:04.262 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:47:04.265 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:40.162 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 14:47:40.273 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:47:40.275 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:40.284 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:47:40.287 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:47:40.298 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3K3JOA3198:00000008","TimeStamp":"2020-10-19T11:17:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-10-19 14:47:40.382 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:40.740 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 14:47:40.747 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 14:47:40.755 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 14:47:40.762 +03:30 [DBG] Start authorize callback request
2020-10-19 14:47:40.813 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:47:40.820 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:47:40.822 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:47:40.824 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:47:40.826 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:47:40.829 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"5f8923d5eee8483280d035ada848a64d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"5f8923d5eee8483280d035ada848a64d","code_challenge":"dmAcQdBSkt3THD_6oBMQ_Vk7Cfr6e5Pi1y5nUPP0Pqc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 14:47:40.898 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 14:47:40.900 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 14:47:40.918 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-19 14:47:40.922 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-19 14:47:40.937 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:47:40.984 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 14:47:41.079 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****8cEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA3198:0000000A","TimeStamp":"2020-10-19T11:17:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 14:47:41.137 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"5f8923d5eee8483280d035ada848a64d","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 14:47:41.179 +03:30 [DBG] Augmenting SignInContext
2020-10-19 14:47:41.182 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 14:48:04.205 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 14:48:04.214 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:04.245 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:04.251 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 14:48:04.254 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 14:48:04.256 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 14:48:04.261 +03:30 [DBG] Start discovery request
2020-10-19 14:48:23.295 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 14:48:23.319 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:23.336 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:23.346 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 14:48:23.367 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 14:48:23.371 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 14:48:23.384 +03:30 [DBG] Start token request.
2020-10-19 14:48:23.391 +03:30 [DBG] Start client validation
2020-10-19 14:48:23.418 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 14:48:23.429 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 14:48:23.433 +03:30 [DBG] client id without secret found
2020-10-19 14:48:23.444 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 14:48:23.445 +03:30 [DBG] Secret id found: frontend
2020-10-19 14:48:23.447 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:23.449 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 14:48:23.457 +03:30 [DBG] Client validation success
2020-10-19 14:48:23.463 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA3196:00000003","TimeStamp":"2020-10-19T11:18:23.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 14:48:23.482 +03:30 [DBG] Start token request validation
2020-10-19 14:48:23.499 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 14:48:23.544 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 14:48:23.592 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 14:48:23.608 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"KKh_OGzs-O93sx2o04fKr8Hzbk62yamQIa0ebOP8cEQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"KKh_OGzs-O93sx2o04fKr8Hzbk62yamQIa0ebOP8cEQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"c5b8deedbf0b44e4bc03c73a370241b00323c06312974d9689dd35ff2796af8528a4af34237f43da81e5f4d611521ef4","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 14:48:23.688 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:23.825 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 14:48:23.883 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:48:25.684 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:25.714 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 14:48:25.724 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 14:48:25.740 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****OHFA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Ew5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA3196:00000003","TimeStamp":"2020-10-19T11:18:25.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 14:48:25.756 +03:30 [DBG] Token request success.
2020-10-19 14:48:25.804 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 14:48:25.808 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:25.812 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:25.821 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 14:48:25.824 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:25.835 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:25.840 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 14:48:25.847 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 14:48:25.849 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 14:48:25.855 +03:30 [DBG] Start userinfo request
2020-10-19 14:48:25.861 +03:30 [DBG] Bearer token found in header
2020-10-19 14:48:25.995 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:26.029 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:26.100 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 14:48:26.110 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603106305,"exp":1603109905,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603106223,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 14:48:26.130 +03:30 [DBG] Creating userinfo response
2020-10-19 14:48:26.140 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 14:48:26.143 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 14:48:26.146 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 14:48:26.150 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 14:48:26.193 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 14:48:26.217 +03:30 [DBG] End userinfo request
2020-10-19 14:48:26.274 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 14:48:26.290 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 14:48:26.293 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 14:48:26.317 +03:30 [DBG] Rendering check session result
2020-10-19 14:48:39.952 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 14:48:39.966 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 14:48:39.972 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 14:48:40.066 +03:30 [DBG] Start authorize request
2020-10-19 14:48:40.151 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:48:40.228 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 14:48:40.298 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:40.364 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 14:48:40.403 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 14:48:40.507 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"6922eaf2bfd64294b6e6478560915323","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"6922eaf2bfd64294b6e6478560915323","code_challenge":"fj7spHEnf4XaUCTrH5fcBIB6iBVe5YEOwVPbGWb7Wno","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 14:48:40.908 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 14:48:40.916 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 14:48:40.920 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 14:48:40.922 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 14:48:40.927 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****es1g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA3198:0000000C","TimeStamp":"2020-10-19T11:18:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 14:48:40.934 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 14:48:40.948 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"6922eaf2bfd64294b6e6478560915323","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 14:48:40.949 +03:30 [DBG] Start discovery request
2020-10-19 14:48:41.975 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-19 14:48:41.983 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-19 14:48:41.992 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-19 14:48:41.997 +03:30 [DBG] Start key discovery request
2020-10-19 14:48:44.515 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 14:48:44.535 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:44.547 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:44.555 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 14:48:44.577 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 14:48:44.607 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 14:48:44.615 +03:30 [DBG] Start discovery request
2020-10-19 14:48:44.656 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 14:48:44.665 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:44.702 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:44.719 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 14:48:44.738 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 14:48:44.758 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 14:48:44.765 +03:30 [DBG] Start discovery request
2020-10-19 14:48:49.528 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 14:48:49.542 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 14:48:49.554 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 14:48:49.557 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 14:48:49.570 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 14:48:49.637 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 14:48:49.638 +03:30 [DBG] Rendering check session result
2020-10-19 14:48:49.643 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 14:48:49.649 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 14:48:49.664 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 14:48:49.668 +03:30 [DBG] Start token request.
2020-10-19 14:48:49.668 +03:30 [DBG] Start client validation
2020-10-19 14:48:49.669 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 14:48:49.671 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 14:48:49.674 +03:30 [DBG] client id without secret found
2020-10-19 14:48:49.675 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 14:48:49.676 +03:30 [DBG] Secret id found: frontend
2020-10-19 14:48:49.678 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:49.679 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 14:48:49.681 +03:30 [DBG] Client validation success
2020-10-19 14:48:49.692 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319B:00000002","TimeStamp":"2020-10-19T11:18:49.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 14:48:49.708 +03:30 [DBG] Start token request validation
2020-10-19 14:48:49.710 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 14:48:49.714 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 14:48:49.756 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 14:48:49.758 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"akxGLU4fRK2y9WebS60xeAhHi-BzFkTTSLBPD0Ues1g","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"akxGLU4fRK2y9WebS60xeAhHi-BzFkTTSLBPD0Ues1g","redirect_uri":"http://localhost:8081/callback","code_verifier":"fbc0ba7ca26c4cc8bf10919d79165720f9d73cd206c84fd5a9e0156a0e315fa6d15831fb751948fe8b127245051afc6c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 14:48:49.772 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:49.774 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 14:48:49.775 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 14:48:49.924 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 14:48:49.931 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 14:48:49.939 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 14:48:49.952 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****uEuw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****uasQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319B:00000002","TimeStamp":"2020-10-19T11:18:49.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 14:48:49.975 +03:30 [DBG] Token request success.
2020-10-19 15:17:58.040 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:17:58.049 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:17:58.062 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:17:58.072 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:17:58.079 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:17:58.084 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:17:58.097 +03:30 [DBG] Start discovery request
2020-10-19 15:18:05.080 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:18:05.088 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:18:05.092 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:18:05.098 +03:30 [DBG] Rendering check session result
2020-10-19 15:18:05.442 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:18:05.463 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:18:05.465 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:18:05.467 +03:30 [DBG] Start authorize request
2020-10-19 15:18:05.471 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:18:05.472 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:18:05.472 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:18:05.473 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:18:05.476 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:18:05.483 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"14050689163e40858a998e44eab1a5f2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"14050689163e40858a998e44eab1a5f2","code_challenge":"_jyKrs86U0vRkPZSaFHOvZGg7ls3dUcIAEQIRO9bZYU","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:18:05.532 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:18:05.535 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:18:05.540 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****iaI0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319D:00000002","TimeStamp":"2020-10-19T11:48:05.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:18:05.549 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"14050689163e40858a998e44eab1a5f2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:18:08.770 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:18:08.779 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:18:08.789 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:18:08.792 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:18:08.796 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:18:08.800 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:18:08.811 +03:30 [DBG] Start discovery request
2020-10-19 15:18:08.858 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:18:08.863 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:18:08.866 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:18:08.869 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:18:08.874 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:18:08.876 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:18:08.880 +03:30 [DBG] Start discovery request
2020-10-19 15:18:41.274 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:18:41.276 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:18:41.282 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:18:41.285 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:18:41.288 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:18:41.291 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:18:41.295 +03:30 [DBG] Rendering check session result
2020-10-19 15:18:41.305 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:18:41.412 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:18:41.421 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:18:41.424 +03:30 [DBG] Start token request.
2020-10-19 15:18:41.427 +03:30 [DBG] Start client validation
2020-10-19 15:18:41.428 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:18:41.429 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:18:41.555 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA319E:00000002","TimeStamp":"2020-10-19T11:48:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 15:18:41.576 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 15:18:41.610 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 15:20:43.129 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:20:43.135 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:20:43.138 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:20:43.157 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:20:43.205 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:20:43.210 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:20:43.214 +03:30 [DBG] Start discovery request
2020-10-19 15:20:45.239 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:20:45.259 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:20:45.282 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:20:45.297 +03:30 [DBG] Rendering check session result
2020-10-19 15:20:46.471 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:20:46.477 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:20:46.478 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:20:46.487 +03:30 [DBG] Start authorize request
2020-10-19 15:20:46.507 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:20:46.517 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:20:46.519 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:20:46.523 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:20:46.525 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:20:46.528 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"77b30a3f604b497c81bd30a7f20df1f8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"77b30a3f604b497c81bd30a7f20df1f8","code_challenge":"uIBqtpaZLE2_gQ_9hTNqTpfzx8aHc1t6TUthB4raMuQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:20:46.608 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:20:46.655 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:20:46.672 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RhvQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319D:00000005","TimeStamp":"2020-10-19T11:50:46.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:20:46.742 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"77b30a3f604b497c81bd30a7f20df1f8","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:20:50.675 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:20:50.688 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:20:50.691 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:20:50.694 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:20:50.704 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:20:50.707 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:20:50.719 +03:30 [DBG] Start discovery request
2020-10-19 15:20:50.738 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:20:50.747 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:20:50.757 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:20:50.764 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:20:50.767 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:20:50.771 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:20:50.786 +03:30 [DBG] Start discovery request
2020-10-19 15:20:56.405 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:20:56.409 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:20:56.412 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:20:56.414 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:20:56.419 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:20:56.421 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:20:56.424 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:20:56.428 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:20:56.431 +03:30 [DBG] Rendering check session result
2020-10-19 15:20:56.449 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:20:56.453 +03:30 [DBG] Start token request.
2020-10-19 15:20:56.456 +03:30 [DBG] Start client validation
2020-10-19 15:20:56.456 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:20:56.460 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:20:56.512 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA319F:00000002","TimeStamp":"2020-10-19T11:50:56.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 15:20:56.531 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 15:20:56.548 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 15:22:54.428 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:22:54.435 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:22:54.437 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:22:54.438 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:22:54.443 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:22:54.444 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:22:54.448 +03:30 [DBG] Start discovery request
2020-10-19 15:23:03.670 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:23:03.678 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:23:03.698 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:23:03.703 +03:30 [DBG] Rendering check session result
2020-10-19 15:23:04.306 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:23:04.315 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:23:04.317 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:23:04.320 +03:30 [DBG] Start authorize request
2020-10-19 15:23:04.322 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:23:04.330 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:23:04.335 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:23:04.339 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:23:04.346 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:23:04.349 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e943ee9db3af4a91a4f3ecdb184bef77","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e943ee9db3af4a91a4f3ecdb184bef77","code_challenge":"udDfGY51r0IKCwY9tENttlPLj9Nc-eWI0WCQPlnvz6Y","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:23:04.451 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:23:04.483 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:23:04.511 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****DRtA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319G:00000002","TimeStamp":"2020-10-19T11:53:04.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:23:04.537 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e943ee9db3af4a91a4f3ecdb184bef77","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:23:07.873 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:23:07.878 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:23:07.882 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:23:07.924 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:23:07.940 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:23:07.942 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:23:07.976 +03:30 [DBG] Start discovery request
2020-10-19 15:23:08.034 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:23:08.047 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:23:08.066 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:23:08.072 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:23:08.117 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:23:08.149 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:23:08.161 +03:30 [DBG] Start discovery request
2020-10-19 15:23:12.844 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:23:12.846 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:23:12.875 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:23:12.891 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:23:12.914 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:23:12.920 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:23:12.935 +03:30 [DBG] Rendering check session result
2020-10-19 15:23:12.938 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:23:12.948 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:23:13.003 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:23:13.016 +03:30 [DBG] Start token request.
2020-10-19 15:23:13.022 +03:30 [DBG] Start client validation
2020-10-19 15:23:13.024 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:23:13.033 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:23:13.094 +03:30 [DBG] client id without secret found
2020-10-19 15:23:13.138 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:23:13.142 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:23:13.145 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:23:13.160 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:23:13.161 +03:30 [DBG] Client validation success
2020-10-19 15:23:13.168 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319H:00000002","TimeStamp":"2020-10-19T11:53:13.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:23:13.176 +03:30 [DBG] Start token request validation
2020-10-19 15:23:13.177 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:23:13.186 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:23:13.206 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:23:13.209 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ZK_aUguVFfe9EXkXhdW1Ujo0R0Cz_zgJgwFGeihDRtA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ZK_aUguVFfe9EXkXhdW1Ujo0R0Cz_zgJgwFGeihDRtA","redirect_uri":"http://localhost:8081/callback","code_verifier":"6dd536b592a84bafb2de7f0bf7d43e11b1d95e023772498b9ae330b6383e886ffb8b4c7d813841b3bb1a1d147e66592e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:23:13.233 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:23:13.237 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:23:13.242 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:23:13.316 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:23:13.322 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:23:13.323 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:23:13.336 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****YAqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BulQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319H:00000002","TimeStamp":"2020-10-19T11:53:13.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:23:13.395 +03:30 [DBG] Token request success.
2020-10-19 15:23:13.419 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:23:13.431 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:23:13.439 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:23:13.443 +03:30 [DBG] Start authorize request
2020-10-19 15:23:13.445 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:23:13.448 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:23:13.451 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:23:13.467 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:23:13.469 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:23:13.472 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"8b870c3a2079457e928b2a78b03dd7fd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"8b870c3a2079457e928b2a78b03dd7fd","code_challenge":"37xThNlSIwH-gNJwS3V3vCnkS9Ebg6D-ngwvkGQdT8Q","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:23:13.524 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:23:13.527 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:23:13.535 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****gl64","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319G:00000004","TimeStamp":"2020-10-19T11:53:13.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:23:13.572 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"8b870c3a2079457e928b2a78b03dd7fd","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:25:54.945 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:25:54.953 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:25:54.958 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:25:54.960 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:25:54.963 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:25:54.970 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:25:54.973 +03:30 [DBG] Start discovery request
2020-10-19 15:26:01.909 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:26:01.914 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:26:01.916 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:26:01.918 +03:30 [DBG] Rendering check session result
2020-10-19 15:26:02.987 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:26:02.991 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:26:02.994 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:26:02.996 +03:30 [DBG] Start authorize request
2020-10-19 15:26:02.997 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:26:02.999 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:26:03.000 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:26:03.002 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:26:03.018 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:26:03.028 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e5b12878ff2d40219fb372cb268aa1b0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e5b12878ff2d40219fb372cb268aa1b0","code_challenge":"V4qjTfRoIbm2bjPih9gJhrl8CsA6H5pQrB5cpzMfgdA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:26:03.560 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:26:03.564 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:26:03.567 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****toOM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319G:00000006","TimeStamp":"2020-10-19T11:56:03.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:26:03.586 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e5b12878ff2d40219fb372cb268aa1b0","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:26:06.506 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:26:06.510 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:26:06.514 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:26:06.522 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:26:06.529 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:26:06.541 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:26:06.550 +03:30 [DBG] Start discovery request
2020-10-19 15:26:06.556 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:26:06.565 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:26:06.572 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:26:06.576 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:26:06.581 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:26:06.585 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:26:06.590 +03:30 [DBG] Start discovery request
2020-10-19 15:26:10.688 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:26:10.724 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:26:10.726 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:26:10.728 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:26:10.742 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:26:10.748 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:26:10.755 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:26:10.766 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:26:10.772 +03:30 [DBG] Rendering check session result
2020-10-19 15:26:10.784 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:26:10.805 +03:30 [DBG] Start token request.
2020-10-19 15:26:10.810 +03:30 [DBG] Start client validation
2020-10-19 15:26:10.815 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:26:10.816 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:26:10.817 +03:30 [DBG] client id without secret found
2020-10-19 15:26:10.819 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:26:10.827 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:26:10.830 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:26:10.836 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:26:10.842 +03:30 [DBG] Client validation success
2020-10-19 15:26:10.847 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319C:00000008","TimeStamp":"2020-10-19T11:56:10.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:26:10.863 +03:30 [DBG] Start token request validation
2020-10-19 15:26:10.870 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:26:10.876 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:26:10.905 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:26:10.908 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"hXNaA8G_GOHjWmn3LK0sQ-gsTLkjnDHfZVJoli4toOM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"hXNaA8G_GOHjWmn3LK0sQ-gsTLkjnDHfZVJoli4toOM","redirect_uri":"http://localhost:8081/callback","code_verifier":"773f69ddd031491aa4cc5b69f73c96e98659d56f908c4ea2ad298b5fc0a1bbba18163d2c595f4f0b95e8282c6a034fc9","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:26:10.961 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:26:10.963 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:26:10.964 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:26:11.005 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:26:11.015 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:26:11.019 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:26:11.027 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****jQFg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CdCw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319C:00000008","TimeStamp":"2020-10-19T11:56:11.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:26:11.036 +03:30 [DBG] Token request success.
2020-10-19 15:26:11.171 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:26:11.186 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:26:11.194 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:26:11.200 +03:30 [DBG] Start authorize request
2020-10-19 15:26:11.202 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:26:11.207 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:26:11.208 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:26:11.212 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:26:11.219 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:26:11.222 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"863562c10f604153a6dbfc549c1e0fa5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"863562c10f604153a6dbfc549c1e0fa5","code_challenge":"RnThrcbjIu1AdToDdQXNTNv64eW9wnLB0TTgo746Zak","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:26:11.259 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:26:11.262 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:26:11.265 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****-PQQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319G:00000008","TimeStamp":"2020-10-19T11:56:11.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:26:11.284 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"863562c10f604153a6dbfc549c1e0fa5","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:37:55.545 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:37:55.572 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:37:55.575 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:37:55.579 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:37:55.582 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:37:55.590 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:37:55.592 +03:30 [DBG] Start discovery request
2020-10-19 15:38:01.180 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:38:01.186 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:38:01.192 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:38:01.195 +03:30 [DBG] Rendering check session result
2020-10-19 15:38:01.660 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:38:01.667 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:38:01.671 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:38:01.673 +03:30 [DBG] Start authorize request
2020-10-19 15:38:01.674 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:38:01.676 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:38:01.677 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:38:01.679 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:38:01.680 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:38:01.682 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"60f9295fd5214f5aa7efa76ae756f27d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"60f9295fd5214f5aa7efa76ae756f27d","code_challenge":"ihXpt0i9xFWxz5EmAL9OJh6pqGs7BPDVm40tZ_L8siY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:38:01.975 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:38:01.980 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:38:01.986 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****T7rQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:00000002","TimeStamp":"2020-10-19T12:08:01.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:38:02.006 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"60f9295fd5214f5aa7efa76ae756f27d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:38:05.519 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:38:05.520 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:05.537 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:05.542 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:38:05.556 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:38:05.568 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:38:05.576 +03:30 [DBG] Start discovery request
2020-10-19 15:38:05.642 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:38:05.652 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:05.663 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:05.667 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:38:05.679 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:38:05.685 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:38:05.689 +03:30 [DBG] Start discovery request
2020-10-19 15:38:09.780 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:38:09.785 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:38:09.807 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:09.813 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:38:09.825 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:09.837 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:38:09.839 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:38:09.842 +03:30 [DBG] Rendering check session result
2020-10-19 15:38:09.853 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:38:09.872 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:38:09.878 +03:30 [DBG] Start token request.
2020-10-19 15:38:09.881 +03:30 [DBG] Start client validation
2020-10-19 15:38:09.883 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:38:09.889 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:38:09.894 +03:30 [DBG] client id without secret found
2020-10-19 15:38:09.903 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:38:09.905 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:38:09.936 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:38:09.944 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:38:09.946 +03:30 [DBG] Client validation success
2020-10-19 15:38:09.950 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319K:00000002","TimeStamp":"2020-10-19T12:08:09.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:38:09.981 +03:30 [DBG] Start token request validation
2020-10-19 15:38:09.991 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:38:10.005 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:38:10.032 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:38:10.034 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"JfYqV6Qb5I3bAakiJLiX6vDRoTtqfHjBZIQKpVjT7rQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"JfYqV6Qb5I3bAakiJLiX6vDRoTtqfHjBZIQKpVjT7rQ","redirect_uri":"http://localhost:8081/callback","code_verifier":"db6b5a9fe9f94d8e8bdb2a626db4938a4d316a6460a645fabb7dbdef055bf34400b19e748d5d418fadf3447c75ea1015","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:38:10.055 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:38:10.057 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:38:10.058 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:38:10.097 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:38:10.103 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:38:10.104 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:38:10.112 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****_LNg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dAJA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319K:00000002","TimeStamp":"2020-10-19T12:08:10.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:38:10.123 +03:30 [DBG] Token request success.
2020-10-19 15:38:23.074 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:38:23.080 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:23.083 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:23.085 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:38:23.087 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:38:23.089 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:38:23.091 +03:30 [DBG] Start discovery request
2020-10-19 15:38:27.661 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:38:27.668 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:38:27.674 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:38:27.677 +03:30 [DBG] Rendering check session result
2020-10-19 15:38:28.870 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:38:28.920 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:38:28.937 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:38:28.939 +03:30 [DBG] Start authorize request
2020-10-19 15:38:28.943 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:38:28.949 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:38:28.952 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:38:28.957 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:38:28.960 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:38:28.963 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"25323b5995e5457caac11cd6327a0cdc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"25323b5995e5457caac11cd6327a0cdc","code_challenge":"9NREC0mZtiyzIXsYME3EUUaLuEC-50vsyNVLa-EdfNU","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:38:29.383 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:38:29.417 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:38:29.453 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****I-84","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:00000005","TimeStamp":"2020-10-19T12:08:29.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:38:29.743 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"25323b5995e5457caac11cd6327a0cdc","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:38:32.903 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:38:32.915 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:32.925 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:32.935 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:38:32.940 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:38:32.943 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:38:32.946 +03:30 [DBG] Start discovery request
2020-10-19 15:38:32.951 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:38:32.955 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:32.958 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:32.960 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:38:32.964 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:38:32.972 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:38:32.976 +03:30 [DBG] Start discovery request
2020-10-19 15:38:39.183 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:38:39.185 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:38:39.192 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:38:39.195 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:38:39.196 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:38:39.197 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:38:39.198 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:38:39.201 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:38:39.203 +03:30 [DBG] Rendering check session result
2020-10-19 15:38:39.206 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:38:39.231 +03:30 [DBG] Start token request.
2020-10-19 15:38:39.232 +03:30 [DBG] Start client validation
2020-10-19 15:38:39.235 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:38:39.245 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:38:39.262 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA319I:00000004","TimeStamp":"2020-10-19T12:08:39.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 15:38:39.306 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 15:38:39.373 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 15:43:22.531 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:43:22.538 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:43:22.541 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:43:22.545 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:43:22.549 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:43:22.551 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:43:22.554 +03:30 [DBG] Start discovery request
2020-10-19 15:43:30.758 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:43:30.787 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:43:30.791 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:43:30.806 +03:30 [DBG] Rendering check session result
2020-10-19 15:43:31.780 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:43:31.847 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:43:31.913 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:43:31.933 +03:30 [DBG] Start authorize request
2020-10-19 15:43:31.949 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:43:31.969 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:43:31.987 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:43:32.000 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:43:32.001 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:43:32.003 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"dfcd0fc4d6e047e0872d733ce383b99b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"dfcd0fc4d6e047e0872d733ce383b99b","code_challenge":"PyL6k0JJ0iY9B-DjbpIs5lwNeTKsYB4bv527Qut4HGs","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:43:32.349 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:43:32.411 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:43:32.446 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Dmww","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:00000008","TimeStamp":"2020-10-19T12:13:32.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:43:32.519 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"dfcd0fc4d6e047e0872d733ce383b99b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:43:36.101 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:43:36.111 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:43:36.116 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:43:36.122 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:43:36.139 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:43:36.145 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:43:36.148 +03:30 [DBG] Start discovery request
2020-10-19 15:43:36.172 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:43:36.176 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:43:36.194 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:43:36.198 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:43:36.203 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:43:36.208 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:43:36.219 +03:30 [DBG] Start discovery request
2020-10-19 15:43:41.039 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:43:41.041 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:43:41.044 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:43:41.046 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:43:41.049 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:43:41.052 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:43:41.060 +03:30 [DBG] Rendering check session result
2020-10-19 15:43:41.062 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:43:41.066 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:43:41.068 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:43:41.080 +03:30 [DBG] Start token request.
2020-10-19 15:43:41.089 +03:30 [DBG] Start client validation
2020-10-19 15:43:41.096 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:43:41.099 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:43:41.102 +03:30 [DBG] client id without secret found
2020-10-19 15:43:41.103 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:43:41.107 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:43:41.112 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:43:41.120 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:43:41.127 +03:30 [DBG] Client validation success
2020-10-19 15:43:41.129 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319L:00000002","TimeStamp":"2020-10-19T12:13:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:43:41.137 +03:30 [DBG] Start token request validation
2020-10-19 15:43:41.138 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:43:41.141 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:43:41.194 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:43:41.196 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"tJqseCWEPW1uHJVEfEir4iAVmgaydsdo4-0tPZUDmww","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"tJqseCWEPW1uHJVEfEir4iAVmgaydsdo4-0tPZUDmww","redirect_uri":"http://localhost:8081/callback","code_verifier":"2c462278eb554070aedf4e6baaa3b6a8e83c382c062f4e4a901301524b5b5728e66bf2c7e4e840af99a7611de1f034c5","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:43:41.205 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:43:41.214 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:43:41.216 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:43:41.248 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:43:41.254 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:43:41.258 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:43:41.266 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****9-yw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VWmg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319L:00000002","TimeStamp":"2020-10-19T12:13:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:43:41.283 +03:30 [DBG] Token request success.
2020-10-19 15:45:38.143 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:45:38.144 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:45:38.155 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:45:38.156 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:45:38.158 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:45:38.160 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:45:38.164 +03:30 [DBG] Start discovery request
2020-10-19 15:45:43.361 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:45:43.422 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:45:43.443 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:45:43.470 +03:30 [DBG] Rendering check session result
2020-10-19 15:45:44.270 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:45:44.335 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:45:44.357 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:45:44.364 +03:30 [DBG] Start authorize request
2020-10-19 15:45:44.375 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:45:44.429 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:45:44.441 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:45:44.478 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:45:44.492 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:45:44.510 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bce54c1d4b9e45299d9c17c77927c075","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"bce54c1d4b9e45299d9c17c77927c075","code_challenge":"Go9s4Mwy3ZEluAofWXuFdSXtpKmPsmUXe45P14CcC08","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:45:44.657 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:45:44.666 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:45:44.685 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cizI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:0000000B","TimeStamp":"2020-10-19T12:15:44.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:45:44.699 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bce54c1d4b9e45299d9c17c77927c075","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:45:48.048 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:45:48.058 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:45:48.079 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:45:48.088 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:45:48.091 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:45:48.098 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:45:48.116 +03:30 [DBG] Start discovery request
2020-10-19 15:45:48.121 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:45:48.138 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:45:48.139 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:45:48.140 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:45:48.168 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:45:48.171 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:45:48.183 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:45:48.189 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:45:48.195 +03:30 [DBG] Start discovery request
2020-10-19 15:45:48.198 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:45:48.203 +03:30 [DBG] Rendering check session result
2020-10-19 15:45:48.217 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:45:48.243 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:45:48.246 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:45:48.248 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:45:48.250 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:45:48.258 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:45:48.270 +03:30 [DBG] Start token request.
2020-10-19 15:45:48.273 +03:30 [DBG] Start client validation
2020-10-19 15:45:48.280 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:45:48.285 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:45:48.294 +03:30 [DBG] client id without secret found
2020-10-19 15:45:48.296 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:45:48.296 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:45:48.299 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:45:48.309 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:45:48.310 +03:30 [DBG] Client validation success
2020-10-19 15:45:48.312 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319K:00000008","TimeStamp":"2020-10-19T12:15:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:45:48.324 +03:30 [DBG] Start token request validation
2020-10-19 15:45:48.326 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:45:48.328 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:45:48.349 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:45:48.350 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Ciu_98Gn9SYHUTnqwt77SyjpM-NGxxzKjSzGI5LcizI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Ciu_98Gn9SYHUTnqwt77SyjpM-NGxxzKjSzGI5LcizI","redirect_uri":"http://localhost:8081/callback","code_verifier":"cc166492191f4faebbbf00a31c512a090b2a5848de954c2db87d40b9ad50a5833ec177c4d41443e990b615c8880cfa62","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:45:48.365 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:45:48.374 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:45:48.377 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:45:48.430 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:45:48.437 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:45:48.440 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:45:48.452 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****NHIg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2NBg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319K:00000008","TimeStamp":"2020-10-19T12:15:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:45:48.469 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:45:48.483 +03:30 [DBG] Token request success.
2020-10-19 15:45:48.495 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:45:48.534 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:45:48.548 +03:30 [DBG] Start authorize request
2020-10-19 15:45:48.551 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:45:48.555 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:45:48.558 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:45:48.570 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:45:48.572 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:45:48.574 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"274245dbe3d04987841df265617d08f6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"274245dbe3d04987841df265617d08f6","code_challenge":"VpM41dtxamTx24DojbClcDcAfuJ36vDIqkKFIA2njGA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:45:48.638 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:45:48.640 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:45:48.642 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****XDco","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:0000000D","TimeStamp":"2020-10-19T12:15:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:45:48.657 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"274245dbe3d04987841df265617d08f6","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:46:54.994 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:46:55.001 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:46:55.003 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:46:55.006 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:46:55.010 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:46:55.025 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:46:55.031 +03:30 [DBG] Start discovery request
2020-10-19 15:46:55.255 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:46:55.264 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:46:55.273 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:46:55.277 +03:30 [DBG] Rendering check session result
2020-10-19 15:46:55.951 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:46:55.958 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:46:55.961 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:46:55.965 +03:30 [DBG] Start authorize request
2020-10-19 15:46:55.968 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:46:55.978 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:46:55.980 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:46:55.984 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:46:55.986 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:46:55.989 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c3a244b444fe4a8b8754d64fd5b72cfe","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"c3a244b444fe4a8b8754d64fd5b72cfe","code_challenge":"H8KKKq7oiuup0pZJrNxS2iDazEkJ15WL2WoixKGsrq4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:46:56.064 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:46:56.074 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:46:56.087 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****njVY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:0000000F","TimeStamp":"2020-10-19T12:16:56.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:46:56.132 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"c3a244b444fe4a8b8754d64fd5b72cfe","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:46:59.004 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:46:59.071 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:46:59.185 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:46:59.198 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:46:59.218 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:46:59.223 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:46:59.244 +03:30 [DBG] Start discovery request
2020-10-19 15:46:59.283 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:46:59.315 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:46:59.318 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:46:59.321 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:46:59.324 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:46:59.328 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:46:59.332 +03:30 [DBG] Start discovery request
2020-10-19 15:46:59.442 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:46:59.443 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:46:59.451 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:46:59.456 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:46:59.487 +03:30 [DBG] Rendering check session result
2020-10-19 15:46:59.499 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:46:59.508 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:46:59.509 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:46:59.517 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:46:59.520 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:46:59.529 +03:30 [DBG] Start token request.
2020-10-19 15:46:59.546 +03:30 [DBG] Start client validation
2020-10-19 15:46:59.549 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:46:59.550 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:46:59.552 +03:30 [DBG] client id without secret found
2020-10-19 15:46:59.554 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:46:59.558 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:46:59.565 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:46:59.571 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:46:59.574 +03:30 [DBG] Client validation success
2020-10-19 15:46:59.580 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319L:00000006","TimeStamp":"2020-10-19T12:16:59.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:46:59.592 +03:30 [DBG] Start token request validation
2020-10-19 15:46:59.601 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:46:59.604 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:46:59.618 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:46:59.620 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"LnA1qeoZhJb_sgTa10bntptjMHp-WQ0OIAtzZl8njVY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"LnA1qeoZhJb_sgTa10bntptjMHp-WQ0OIAtzZl8njVY","redirect_uri":"http://localhost:8081/callback","code_verifier":"c02cd7fd61b045fa9ecd9349cedd4e09dbb4f2ca296848cfa0de00778117e12905da485b4f3c45e593246e33dba6c26e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:46:59.670 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:46:59.686 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:46:59.692 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:46:59.821 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:46:59.856 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:46:59.895 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:46:59.940 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****77Dw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NE2g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319L:00000006","TimeStamp":"2020-10-19T12:16:59.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:47:00.016 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:47:00.126 +03:30 [DBG] Token request success.
2020-10-19 15:47:00.132 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:47:00.136 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:47:00.143 +03:30 [DBG] Start authorize request
2020-10-19 15:47:00.145 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:47:00.148 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:47:00.150 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:47:00.156 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:47:00.159 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:47:00.164 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d0d0577e8e374eca900e1483f126c527","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d0d0577e8e374eca900e1483f126c527","code_challenge":"BsWm0ejyRL61lGd1TEL0q5h8P61Bp7uD3hWRgLl3fQ4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:47:00.533 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:47:00.563 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:47:00.564 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****vPkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319J:00000011","TimeStamp":"2020-10-19T12:17:00.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:47:00.597 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d0d0577e8e374eca900e1483f126c527","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:57:59.532 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:57:59.533 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:57:59.538 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:57:59.544 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:57:59.547 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:57:59.549 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:57:59.554 +03:30 [DBG] Start discovery request
2020-10-19 15:58:02.192 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:58:02.204 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:58:02.209 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:58:02.212 +03:30 [DBG] Rendering check session result
2020-10-19 15:58:02.536 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:58:02.538 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:58:02.549 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:58:02.552 +03:30 [DBG] Start authorize request
2020-10-19 15:58:02.553 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:02.555 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:58:02.556 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:02.558 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:58:02.559 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:58:02.562 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"0fb896f44b14426eacbcd679d616f709","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"0fb896f44b14426eacbcd679d616f709","code_challenge":"2FB7RhcNwT_-Nc9QghNQGm9IKcbBmH9nP_fl71MN5i0","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:58:02.630 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:58:02.637 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:58:02.642 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****uemw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:00000002","TimeStamp":"2020-10-19T12:28:02.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:02.660 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"0fb896f44b14426eacbcd679d616f709","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:58:06.384 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:58:06.467 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:06.534 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:06.561 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:58:06.595 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:58:06.650 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:58:06.699 +03:30 [DBG] Start discovery request
2020-10-19 15:58:06.893 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:58:06.917 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:58:06.917 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:58:06.920 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:58:06.925 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:06.927 +03:30 [DBG] Rendering check session result
2020-10-19 15:58:06.930 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:06.934 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:58:06.938 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:58:06.947 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:58:06.950 +03:30 [DBG] Start discovery request
2020-10-19 15:58:07.073 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:58:07.089 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:07.102 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:07.126 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:58:07.203 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:58:07.208 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:58:07.248 +03:30 [DBG] Start token request.
2020-10-19 15:58:07.259 +03:30 [DBG] Start client validation
2020-10-19 15:58:07.266 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:58:07.275 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:58:07.279 +03:30 [DBG] client id without secret found
2020-10-19 15:58:07.279 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:58:07.281 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:58:07.282 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:07.293 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:58:07.295 +03:30 [DBG] Client validation success
2020-10-19 15:58:07.298 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319M:00000004","TimeStamp":"2020-10-19T12:28:07.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:58:07.340 +03:30 [DBG] Start token request validation
2020-10-19 15:58:07.345 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:58:07.356 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:58:07.357 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:58:07.358 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:58:07.364 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:58:07.373 +03:30 [DBG] Start authorize request
2020-10-19 15:58:07.376 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:07.383 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:58:07.406 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:07.407 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:58:07.465 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:58:07.474 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ysqi9QC6DWZEtU0WXPAlCDG1KI8XJl6FsBYRhauuemw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ysqi9QC6DWZEtU0WXPAlCDG1KI8XJl6FsBYRhauuemw","redirect_uri":"http://localhost:8081/callback","code_verifier":"4b16686c110d49f1a261b6013205779c8ac174c7ed714091a1e1cde5e8380b922b790f10b33446b4bb7de6dd31616aac","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:58:07.480 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:58:07.497 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:07.504 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"f3b951696c2241faa391d48553922893","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"f3b951696c2241faa391d48553922893","code_challenge":"MulaEW0iTcfsjJshpRwkPElsX7D_zPs-LIayuDgSSBA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:58:07.538 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:58:07.588 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:07.599 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:58:07.603 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:58:07.609 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****XyPg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:00000004","TimeStamp":"2020-10-19T12:28:07.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:07.626 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"f3b951696c2241faa391d48553922893","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:58:07.647 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:07.650 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:58:07.653 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:58:07.666 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****BvMQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2Dyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319M:00000004","TimeStamp":"2020-10-19T12:28:07.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:07.685 +03:30 [DBG] Token request success.
2020-10-19 15:58:48.235 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:58:48.243 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:48.245 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:48.249 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:58:48.254 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:58:48.258 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:58:48.263 +03:30 [DBG] Start discovery request
2020-10-19 15:58:48.378 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:58:48.386 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:58:48.391 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:58:48.397 +03:30 [DBG] Rendering check session result
2020-10-19 15:58:48.617 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:58:48.628 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:58:48.630 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:58:48.635 +03:30 [DBG] Start authorize request
2020-10-19 15:58:48.636 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:48.639 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:58:48.640 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:48.651 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:58:48.652 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:58:48.656 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7120c65a79224693b119f60a83ab1f65","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7120c65a79224693b119f60a83ab1f65","code_challenge":"8lIadMYcIKt4nGlGSgbjMK0i3hS4O2z9gKMpX49cQ78","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:58:48.683 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:58:48.703 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:58:48.711 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Rxj8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:00000006","TimeStamp":"2020-10-19T12:28:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:48.724 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7120c65a79224693b119f60a83ab1f65","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:58:52.122 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:58:52.162 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:52.170 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:52.174 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:58:52.180 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:58:52.189 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:58:52.194 +03:30 [DBG] Start discovery request
2020-10-19 15:58:52.207 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:58:52.212 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:52.215 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:52.217 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:58:52.221 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:58:52.223 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:58:52.234 +03:30 [DBG] Start discovery request
2020-10-19 15:58:52.343 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:58:52.344 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:58:52.349 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:58:52.361 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:58:52.365 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:58:52.373 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:58:52.381 +03:30 [DBG] Rendering check session result
2020-10-19 15:58:52.387 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:58:52.391 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:58:52.393 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:58:52.396 +03:30 [DBG] Start token request.
2020-10-19 15:58:52.405 +03:30 [DBG] Start client validation
2020-10-19 15:58:52.407 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:58:52.409 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:58:52.411 +03:30 [DBG] client id without secret found
2020-10-19 15:58:52.429 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:58:52.436 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:58:52.437 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:52.441 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:58:52.446 +03:30 [DBG] Client validation success
2020-10-19 15:58:52.452 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319O:00000002","TimeStamp":"2020-10-19T12:28:52.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:58:52.464 +03:30 [DBG] Start token request validation
2020-10-19 15:58:52.465 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:58:52.467 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:58:52.486 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:58:52.488 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"UoMh3aPrekxW1fHcDLMwP6rV50JcFwh6rLY8VWqRxj8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"UoMh3aPrekxW1fHcDLMwP6rV50JcFwh6rLY8VWqRxj8","redirect_uri":"http://localhost:8081/callback","code_verifier":"dd0708942106411ca9587d37125e2890fd8c2537687a4fae82e53a7a79c645f6ae52ea197b1f4c1eb8cb18e408f107b9","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:58:52.504 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:52.512 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:58:52.515 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:52.596 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:52.602 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:58:52.605 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:58:52.613 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****pjKw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****m1EQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319O:00000002","TimeStamp":"2020-10-19T12:28:52.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:52.622 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:58:52.639 +03:30 [DBG] Token request success.
2020-10-19 15:58:52.643 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:58:52.647 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:58:52.654 +03:30 [DBG] Start authorize request
2020-10-19 15:58:52.657 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:58:52.659 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:58:52.662 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:58:52.671 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:58:52.672 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:58:52.676 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b0627c8770b342d4a2b9cd1a5846006f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b0627c8770b342d4a2b9cd1a5846006f","code_challenge":"CYR-x-nKH0z6mEAGJ04c9PWuFuyE6HOxeFlaNjU6ynk","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:58:52.750 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:58:52.758 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:58:52.761 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****91O0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:00000008","TimeStamp":"2020-10-19T12:28:52.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:58:52.770 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b0627c8770b342d4a2b9cd1a5846006f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:59:21.128 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:59:21.161 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:59:21.204 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:59:21.209 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:59:21.211 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:59:21.216 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:59:21.218 +03:30 [DBG] Start discovery request
2020-10-19 15:59:21.768 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:59:21.860 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:59:21.877 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:59:21.908 +03:30 [DBG] Rendering check session result
2020-10-19 15:59:22.515 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:59:22.567 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:59:22.629 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:59:22.694 +03:30 [DBG] Start authorize request
2020-10-19 15:59:22.710 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:59:22.738 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:59:22.772 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:59:22.785 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:59:22.815 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:59:22.877 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"8ed790f26f2a4971bd275f955d744e42","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"8ed790f26f2a4971bd275f955d744e42","code_challenge":"lDVnbdsx_7qNqg2ETExJ4Mo96mid_6ZvMKxMG6PR6kY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:59:23.180 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:59:23.182 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:59:23.184 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****lobg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:0000000A","TimeStamp":"2020-10-19T12:29:23.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:59:23.197 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"8ed790f26f2a4971bd275f955d744e42","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 15:59:28.314 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:59:28.319 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 15:59:28.378 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:59:28.399 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:59:28.406 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:59:28.410 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:59:28.413 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:59:28.417 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 15:59:28.425 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:59:28.428 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 15:59:28.447 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:59:28.461 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 15:59:28.468 +03:30 [DBG] Start discovery request
2020-10-19 15:59:28.478 +03:30 [DBG] Start discovery request
2020-10-19 15:59:28.524 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 15:59:28.526 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 15:59:28.532 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 15:59:28.537 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 15:59:28.547 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 15:59:28.549 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 15:59:28.554 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 15:59:28.557 +03:30 [DBG] Rendering check session result
2020-10-19 15:59:28.560 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 15:59:28.581 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 15:59:28.587 +03:30 [DBG] Start token request.
2020-10-19 15:59:28.588 +03:30 [DBG] Start client validation
2020-10-19 15:59:28.590 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 15:59:28.591 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 15:59:28.594 +03:30 [DBG] client id without secret found
2020-10-19 15:59:28.597 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 15:59:28.603 +03:30 [DBG] Secret id found: frontend
2020-10-19 15:59:28.612 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:59:28.617 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 15:59:28.618 +03:30 [DBG] Client validation success
2020-10-19 15:59:28.620 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319M:00000008","TimeStamp":"2020-10-19T12:29:28.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 15:59:28.644 +03:30 [DBG] Start token request validation
2020-10-19 15:59:28.650 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 15:59:28.654 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 15:59:28.686 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 15:59:28.688 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"3ji7xET6hgCaKGLzfRxKJx55H4br88Hb0MKagoilobg","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"3ji7xET6hgCaKGLzfRxKJx55H4br88Hb0MKagoilobg","redirect_uri":"http://localhost:8081/callback","code_verifier":"58eeb0a596194a75ae0bd7822987afb78bac444c7da643e3b7bf66722c20758caf1f3ae5d4c4487f9ecb883aaa9f4d7c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 15:59:28.729 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:59:28.736 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 15:59:28.737 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:59:28.770 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:59:28.776 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 15:59:28.783 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 15:59:28.796 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7Mdw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nn4Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319M:00000008","TimeStamp":"2020-10-19T12:29:28.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:59:28.818 +03:30 [DBG] Token request success.
2020-10-19 15:59:28.854 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 15:59:28.860 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 15:59:28.862 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 15:59:28.866 +03:30 [DBG] Start authorize request
2020-10-19 15:59:28.870 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 15:59:28.876 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 15:59:28.878 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 15:59:28.880 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 15:59:28.885 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 15:59:28.891 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"cc52564554664fea8c61b9adcd87a83a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"cc52564554664fea8c61b9adcd87a83a","code_challenge":"hQ2MukgvfdjX1_P6z70dC5eSMvofF3YMP6JhhDoAyao","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 15:59:28.943 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 15:59:28.947 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 15:59:28.949 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****QAfo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319N:0000000C","TimeStamp":"2020-10-19T12:29:28.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 15:59:28.971 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"cc52564554664fea8c61b9adcd87a83a","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:11:35.386 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:11:35.392 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:11:35.393 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:11:35.396 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:11:35.399 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:11:35.407 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:11:35.409 +03:30 [DBG] Start discovery request
2020-10-19 16:11:35.756 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:11:35.759 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:11:35.763 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:11:35.765 +03:30 [DBG] Rendering check session result
2020-10-19 16:11:36.001 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:11:36.009 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:11:36.011 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:11:36.013 +03:30 [DBG] Start authorize request
2020-10-19 16:11:36.015 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:11:36.017 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:11:36.019 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:11:36.029 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:11:36.030 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:11:36.032 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"5fda57e0b5ec4fc1a2e2cd1811bafab2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"5fda57e0b5ec4fc1a2e2cd1811bafab2","code_challenge":"4LmHKrThOhZsO6qRVmLAdkZvEuYFYIZ33c5vfyt13sg","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:11:37.612 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:11:37.621 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:11:37.627 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****_1_Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319Q:00000002","TimeStamp":"2020-10-19T12:41:37.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:11:37.648 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"5fda57e0b5ec4fc1a2e2cd1811bafab2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:11:40.863 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:11:40.873 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:11:40.876 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:11:40.878 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:11:40.886 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:11:40.888 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:11:40.893 +03:30 [DBG] Start discovery request
2020-10-19 16:11:40.907 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:11:40.912 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:11:40.916 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:11:40.917 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:11:40.925 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:11:40.966 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:11:40.966 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:11:40.973 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:11:40.977 +03:30 [DBG] Start discovery request
2020-10-19 16:11:40.986 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:11:40.997 +03:30 [DBG] Rendering check session result
2020-10-19 16:11:41.002 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:11:41.006 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:11:41.008 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:11:41.009 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:11:41.013 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:11:41.016 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:11:41.018 +03:30 [DBG] Start token request.
2020-10-19 16:11:41.019 +03:30 [DBG] Start client validation
2020-10-19 16:11:41.029 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:11:41.031 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:11:41.037 +03:30 [DBG] client id without secret found
2020-10-19 16:11:41.038 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:11:41.040 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:11:41.047 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:11:41.094 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:11:41.097 +03:30 [DBG] Client validation success
2020-10-19 16:11:41.098 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319P:00000004","TimeStamp":"2020-10-19T12:41:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:11:41.109 +03:30 [DBG] Start token request validation
2020-10-19 16:11:41.111 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:11:41.114 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:11:41.138 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:11:41.139 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dTra6j6I3lT0-XfXIwV_rKsSMDF5ERSK86TfpH7_1_Q","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"dTra6j6I3lT0-XfXIwV_rKsSMDF5ERSK86TfpH7_1_Q","redirect_uri":"http://localhost:8081/callback","code_verifier":"01d7dc6fc6d148bf9e6c3e1d52727f58d947be83e78c4cafac117a3ba7cbb387156f010455c24890b0e452422c60a901","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:11:41.156 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:11:41.162 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:11:41.164 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:11:41.268 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:11:41.277 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:11:41.280 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:11:41.282 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:11:41.286 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:11:41.289 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:11:41.296 +03:30 [DBG] Start authorize request
2020-10-19 16:11:41.313 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:11:41.315 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:11:41.316 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****YyAQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****f61g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319P:00000004","TimeStamp":"2020-10-19T12:41:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:11:41.316 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:11:41.337 +03:30 [DBG] Token request success.
2020-10-19 16:11:41.340 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:11:41.348 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:11:41.350 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"04c8ba4d10904c4d8f7bea0c23883392","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"04c8ba4d10904c4d8f7bea0c23883392","code_challenge":"oEPw9Nvz-1R-J2XgANDpTay7Q6c5VEkYumkgLc0gQdQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:11:41.387 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:11:41.395 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:11:41.441 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****jgb0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319Q:00000004","TimeStamp":"2020-10-19T12:41:41.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:11:41.461 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"04c8ba4d10904c4d8f7bea0c23883392","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:19:36.396 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:19:36.402 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:19:36.404 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:19:36.405 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:19:36.408 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:19:36.412 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:19:36.418 +03:30 [DBG] Start discovery request
2020-10-19 16:19:36.521 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:19:36.525 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:19:36.527 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:19:36.531 +03:30 [DBG] Rendering check session result
2020-10-19 16:19:36.777 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:19:36.782 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:19:36.784 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:19:36.788 +03:30 [DBG] Start authorize request
2020-10-19 16:19:36.789 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:19:36.791 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:19:36.802 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:19:36.804 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:19:36.806 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:19:36.813 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"01fce6cb03314fafa31446908c53bc3d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"01fce6cb03314fafa31446908c53bc3d","code_challenge":"c5SQG14NujSPE8Cf2rQexIi1Spt0WMvG8p9Lr8ZFXkk","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:19:37.120 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:19:37.139 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:19:37.148 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****zieg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:00000002","TimeStamp":"2020-10-19T12:49:37.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:19:37.181 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"01fce6cb03314fafa31446908c53bc3d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:19:40.190 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:19:40.214 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:19:40.221 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:19:40.225 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:19:40.232 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:19:40.237 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:19:40.239 +03:30 [DBG] Start discovery request
2020-10-19 16:19:40.293 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:19:40.300 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:19:40.307 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:19:40.310 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:19:40.315 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:19:40.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:19:40.332 +03:30 [DBG] Start discovery request
2020-10-19 16:19:40.421 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:19:40.421 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:19:40.424 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:19:40.427 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:19:40.429 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:19:40.434 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:19:40.435 +03:30 [DBG] Rendering check session result
2020-10-19 16:19:40.439 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:19:40.443 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:19:40.449 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:19:40.452 +03:30 [DBG] Start token request.
2020-10-19 16:19:40.453 +03:30 [DBG] Start client validation
2020-10-19 16:19:40.475 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:19:40.479 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:19:40.494 +03:30 [DBG] client id without secret found
2020-10-19 16:19:40.495 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:19:40.516 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:19:40.517 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:19:40.520 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:19:40.521 +03:30 [DBG] Client validation success
2020-10-19 16:19:40.523 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319U:00000002","TimeStamp":"2020-10-19T12:49:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:19:40.542 +03:30 [DBG] Start token request validation
2020-10-19 16:19:40.544 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:19:40.545 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:19:40.554 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:19:40.561 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"0FIPCoqwVlhSBOoTaH_pGWa8L3uocxShvWSESjFzieg","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"0FIPCoqwVlhSBOoTaH_pGWa8L3uocxShvWSESjFzieg","redirect_uri":"http://localhost:8081/callback","code_verifier":"127b325adecd43959238740811a42cf2bfbb7128164643c9991104967d91f237a61942cb8b6b4aadb719624ed4dfc50b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:19:40.569 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:19:40.575 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:19:40.582 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:19:40.614 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:19:40.617 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:19:40.623 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:19:40.629 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****gRwg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lclg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319U:00000002","TimeStamp":"2020-10-19T12:49:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:19:40.645 +03:30 [DBG] Token request success.
2020-10-19 16:19:40.684 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:19:40.688 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:19:40.690 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:19:40.692 +03:30 [DBG] Start authorize request
2020-10-19 16:19:40.700 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:19:40.703 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:19:40.706 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:19:40.710 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:19:40.714 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:19:40.722 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"0e45731e8ee242f6bdb123ece8fffe2d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"0e45731e8ee242f6bdb123ece8fffe2d","code_challenge":"s8o-MhVohYNKX_SXwid6gzSb9_UcrXu6Bf57VLmRwEY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:19:40.797 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:19:40.801 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:19:40.807 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****9ihE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:00000004","TimeStamp":"2020-10-19T12:49:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:19:40.843 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"0e45731e8ee242f6bdb123ece8fffe2d","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:22:08.549 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:22:08.558 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:22:08.561 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:22:08.564 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:22:08.568 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:22:08.571 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:22:08.575 +03:30 [DBG] Start discovery request
2020-10-19 16:22:08.660 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:22:08.663 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:22:08.667 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:22:08.673 +03:30 [DBG] Rendering check session result
2020-10-19 16:22:08.913 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:22:08.925 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:22:08.930 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:22:08.934 +03:30 [DBG] Start authorize request
2020-10-19 16:22:08.937 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:22:08.941 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:22:08.943 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:22:08.958 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:22:08.966 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:22:08.975 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"73f5c510ea104dcdb66e5838251a6013","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"73f5c510ea104dcdb66e5838251a6013","code_challenge":"MwaIwZEFUJned7caW7rxB5NMouJNt6eGxOv7TtW5dv4","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:22:09.155 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:22:09.185 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:22:09.220 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****54DE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:00000006","TimeStamp":"2020-10-19T12:52:09.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:22:09.269 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"73f5c510ea104dcdb66e5838251a6013","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:22:12.681 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:22:12.686 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:22:12.688 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:22:12.690 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:22:12.693 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:22:12.696 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:22:12.703 +03:30 [DBG] Start discovery request
2020-10-19 16:22:12.709 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:22:12.711 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:22:12.712 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:22:12.717 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:22:12.720 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:22:12.724 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:22:12.727 +03:30 [DBG] Start discovery request
2020-10-19 16:22:12.762 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:22:12.767 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:22:12.772 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:22:12.775 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:22:12.781 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:22:12.786 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:22:12.787 +03:30 [DBG] Rendering check session result
2020-10-19 16:22:12.789 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:22:12.792 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:22:12.804 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:22:12.809 +03:30 [DBG] Start token request.
2020-10-19 16:22:12.810 +03:30 [DBG] Start client validation
2020-10-19 16:22:12.811 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:22:12.813 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:22:12.815 +03:30 [DBG] client id without secret found
2020-10-19 16:22:12.816 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:22:12.817 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:22:12.819 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:22:12.829 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:22:12.831 +03:30 [DBG] Client validation success
2020-10-19 16:22:12.833 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319S:00000004","TimeStamp":"2020-10-19T12:52:12.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:22:12.843 +03:30 [DBG] Start token request validation
2020-10-19 16:22:12.847 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:22:12.849 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:22:12.875 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:22:12.879 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"AY28Co7TlzUosKJVfbIZGKkGeH4rkeKyQgkhFvY54DE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"AY28Co7TlzUosKJVfbIZGKkGeH4rkeKyQgkhFvY54DE","redirect_uri":"http://localhost:8081/callback","code_verifier":"8ad983dca41b42cdb791aa4dc928259b85d4d12853484031842a352025b5c0c931385071aeb342d897fe7ae83177089a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:22:12.936 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:22:12.941 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:22:12.945 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:22:13.107 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:22:13.134 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:22:13.141 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:22:13.149 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nn1Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gRzQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319S:00000004","TimeStamp":"2020-10-19T12:52:13.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:22:13.195 +03:30 [DBG] Token request success.
2020-10-19 16:22:13.209 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:22:13.212 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:22:13.219 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:22:13.223 +03:30 [DBG] Start authorize request
2020-10-19 16:22:13.225 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:22:13.232 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:22:13.233 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:22:13.236 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:22:13.239 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:22:13.241 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"8f67fe82e315494db56b90db3b33755c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"8f67fe82e315494db56b90db3b33755c","code_challenge":"cgFD_AklnYD1-FEGW6aliVImpl5LLukA6w66giG-QKE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:22:13.290 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:22:13.293 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:22:13.303 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****xGXI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:00000008","TimeStamp":"2020-10-19T12:52:13.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:22:13.423 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"8f67fe82e315494db56b90db3b33755c","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:23:16.183 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:23:16.200 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:23:16.208 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:23:16.209 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:23:16.212 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:23:16.220 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:23:16.222 +03:30 [DBG] Start discovery request
2020-10-19 16:23:16.363 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:23:16.369 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:23:16.373 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:23:16.400 +03:30 [DBG] Rendering check session result
2020-10-19 16:23:16.694 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:23:16.701 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:23:16.703 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:23:16.711 +03:30 [DBG] Start authorize request
2020-10-19 16:23:16.713 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:23:16.715 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:23:16.717 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:23:16.723 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:23:16.734 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:23:16.741 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"eedc887da94d4197b6df8c2058488f79","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"eedc887da94d4197b6df8c2058488f79","code_challenge":"6TSo7x-D8nxNMZB4IbMjeaJy4gfIns6y_aMXmwzB-_8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:23:16.824 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:23:16.832 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:23:16.838 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****IMmU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:0000000A","TimeStamp":"2020-10-19T12:53:16.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:23:16.908 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"eedc887da94d4197b6df8c2058488f79","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:23:20.247 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:23:20.280 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:23:20.283 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:23:20.294 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:23:20.314 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:23:20.347 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:23:20.359 +03:30 [DBG] Start discovery request
2020-10-19 16:23:20.363 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:23:20.367 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:23:20.370 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:23:20.372 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:23:20.375 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:23:20.377 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:23:20.387 +03:30 [DBG] Start discovery request
2020-10-19 16:23:20.500 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:23:20.535 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:23:20.555 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:23:20.566 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:23:20.583 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:23:20.591 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:23:20.592 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:23:20.596 +03:30 [DBG] Rendering check session result
2020-10-19 16:23:20.610 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:23:20.615 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:23:20.623 +03:30 [DBG] Start token request.
2020-10-19 16:23:20.624 +03:30 [DBG] Start client validation
2020-10-19 16:23:20.626 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:23:20.626 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:23:20.628 +03:30 [DBG] client id without secret found
2020-10-19 16:23:20.630 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:23:20.640 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:23:20.642 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:23:20.650 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:23:20.651 +03:30 [DBG] Client validation success
2020-10-19 16:23:20.652 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319U:00000006","TimeStamp":"2020-10-19T12:53:20.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:23:20.658 +03:30 [DBG] Start token request validation
2020-10-19 16:23:20.660 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:23:20.668 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:23:20.684 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:23:20.711 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"sb_KfWCR_I46Cdia3sYPh5ena5JcbuIxN6Ie3r8IMmU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"sb_KfWCR_I46Cdia3sYPh5ena5JcbuIxN6Ie3r8IMmU","redirect_uri":"http://localhost:8081/callback","code_verifier":"4195ad2c8a83433c95208bd4ed6565a8c5078b1bd5624685a7fbe86d8d804bd0392161dfc5554e049ad865ecb4ebe4b6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:23:20.725 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:23:20.728 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:23:20.730 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:23:20.776 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:23:20.782 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:23:20.812 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:23:20.866 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****HsIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qENg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319U:00000006","TimeStamp":"2020-10-19T12:53:20.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:23:20.909 +03:30 [DBG] Token request success.
2020-10-19 16:23:20.926 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:23:20.929 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:23:20.931 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:23:20.933 +03:30 [DBG] Start authorize request
2020-10-19 16:23:20.934 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:23:20.937 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:23:20.944 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:23:20.947 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:23:20.950 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:23:20.957 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"590817dcaa6a4ddbb66b367937dee21f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"590817dcaa6a4ddbb66b367937dee21f","code_challenge":"86xesbFMzppZbt180VTENFRBWa-OxQDS-KmBICvxHtw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:23:21.010 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:23:21.020 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:23:21.022 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****kcVA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319T:0000000C","TimeStamp":"2020-10-19T12:53:21.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:23:21.060 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"590817dcaa6a4ddbb66b367937dee21f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:30:49.621 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:30:49.690 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:30:49.737 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:30:49.765 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:30:49.815 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:30:49.892 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:30:49.967 +03:30 [DBG] Start discovery request
2020-10-19 16:30:50.570 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:30:50.576 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:30:50.580 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:30:50.590 +03:30 [DBG] Rendering check session result
2020-10-19 16:30:50.874 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:30:50.886 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:30:50.894 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:30:50.902 +03:30 [DBG] Start authorize request
2020-10-19 16:30:50.910 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:30:50.925 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:30:50.931 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:30:50.934 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:30:50.937 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:30:50.950 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4d7afe61ae8c45088a57b760e7b7b26e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"4d7afe61ae8c45088a57b760e7b7b26e","code_challenge":"DNPdhtlnHlQTt-Cmow2E8dGNVvQOnuo6mqaZKlIN8pM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:30:51.022 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:30:51.028 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:30:51.035 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ombo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:00000002","TimeStamp":"2020-10-19T13:00:51.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:30:51.118 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"4d7afe61ae8c45088a57b760e7b7b26e","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:30:54.251 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:30:54.262 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:30:54.266 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:30:54.274 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:30:54.283 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:30:54.291 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:30:54.300 +03:30 [DBG] Start discovery request
2020-10-19 16:30:54.352 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:30:54.358 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:30:54.362 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:30:54.367 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:30:54.368 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:30:54.379 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:30:54.410 +03:30 [DBG] Start discovery request
2020-10-19 16:30:54.476 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:30:54.481 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:30:54.485 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:30:54.489 +03:30 [DBG] Rendering check session result
2020-10-19 16:30:54.492 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:30:54.497 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:30:54.503 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:30:54.505 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:30:54.508 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:30:54.510 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:30:54.515 +03:30 [DBG] Start token request.
2020-10-19 16:30:54.517 +03:30 [DBG] Start client validation
2020-10-19 16:30:54.519 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:30:54.521 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:30:54.523 +03:30 [DBG] client id without secret found
2020-10-19 16:30:54.525 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:30:54.533 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:30:54.534 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:30:54.536 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:30:54.538 +03:30 [DBG] Client validation success
2020-10-19 16:30:54.539 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A1:00000002","TimeStamp":"2020-10-19T13:00:54.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:30:54.557 +03:30 [DBG] Start token request validation
2020-10-19 16:30:54.561 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:30:54.562 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:30:54.577 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:30:54.582 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ObmZbxDUOfOvED0U6OvFstbjYXKAyToEMiWI6afOmbo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ObmZbxDUOfOvED0U6OvFstbjYXKAyToEMiWI6afOmbo","redirect_uri":"http://localhost:8081/callback","code_verifier":"35d228b9b30b492e9061e0739dc51229a83d265c2de04e0fb55f1a46ad9f56692b5ca50eba2b44b4a49fb6f013841f12","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:30:54.602 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:30:54.613 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:30:54.614 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:30:54.649 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:30:54.656 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:30:54.659 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:30:54.668 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nrbA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yMng","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A1:00000002","TimeStamp":"2020-10-19T13:00:54.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:30:54.682 +03:30 [DBG] Token request success.
2020-10-19 16:33:24.007 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:33:24.015 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:24.024 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:24.031 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:33:24.042 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:33:24.044 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:33:24.053 +03:30 [DBG] Start discovery request
2020-10-19 16:33:24.220 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:33:24.225 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:33:24.227 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:33:24.231 +03:30 [DBG] Rendering check session result
2020-10-19 16:33:24.536 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:33:24.541 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:33:24.544 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:33:24.548 +03:30 [DBG] Start authorize request
2020-10-19 16:33:24.549 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:33:24.557 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:33:24.559 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:24.571 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:33:24.576 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:33:24.580 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d5086b39272a401fae9ba55fe8cca912","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"d5086b39272a401fae9ba55fe8cca912","code_challenge":"SMOp18-SPZf7vuc14Os7obPu2Usly_xqBA_wqtFr4nE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:33:24.653 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:33:24.657 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:33:24.660 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****VsSM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:00000005","TimeStamp":"2020-10-19T13:03:24.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:33:24.681 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"d5086b39272a401fae9ba55fe8cca912","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:33:27.554 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:33:27.561 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:27.563 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:27.565 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:33:27.569 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:33:27.584 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:33:27.587 +03:30 [DBG] Start discovery request
2020-10-19 16:33:27.608 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:33:27.612 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:27.616 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:27.619 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:33:27.668 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:33:27.671 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:33:27.672 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:33:27.674 +03:30 [DBG] Start discovery request
2020-10-19 16:33:27.678 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:33:27.691 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:33:27.693 +03:30 [DBG] Rendering check session result
2020-10-19 16:33:27.795 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:33:27.801 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:27.830 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:27.835 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:33:27.848 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:33:27.862 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:33:27.866 +03:30 [DBG] Start token request.
2020-10-19 16:33:27.875 +03:30 [DBG] Start client validation
2020-10-19 16:33:27.876 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:33:27.877 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:33:27.883 +03:30 [DBG] client id without secret found
2020-10-19 16:33:27.887 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:33:27.895 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:33:27.897 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:27.903 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:33:27.907 +03:30 [DBG] Client validation success
2020-10-19 16:33:27.910 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319V:00000004","TimeStamp":"2020-10-19T13:03:27.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:33:27.930 +03:30 [DBG] Start token request validation
2020-10-19 16:33:27.931 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:33:27.933 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:33:27.947 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:33:27.950 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"qsmFNZ2oAZj7IZEy-jMOax7f6GS0HwLQYXZf2s0VsSM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"qsmFNZ2oAZj7IZEy-jMOax7f6GS0HwLQYXZf2s0VsSM","redirect_uri":"http://localhost:8081/callback","code_verifier":"4221d052dedd49d7b1c0c1ab5c89586850c5b3f11c32409c827e205b4c48f99b6ace1d3d82bd40aeb1ef451a6e3958e4","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:33:27.975 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:27.979 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:33:27.990 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:33:28.039 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:28.049 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:33:28.060 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:33:28.109 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****LNow","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LV9w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319V:00000004","TimeStamp":"2020-10-19T13:03:28.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:33:28.134 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:33:28.137 +03:30 [DBG] Token request success.
2020-10-19 16:33:28.140 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:33:28.144 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:33:28.154 +03:30 [DBG] Start authorize request
2020-10-19 16:33:28.157 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:33:28.166 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:33:28.170 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:28.172 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:33:28.174 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:33:28.184 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ddb40b78dc584b4a9e096261bae61cba","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ddb40b78dc584b4a9e096261bae61cba","code_challenge":"tvs4ZSyxLYmk6MH4qERFm9lW77n9GBV5HzJRexvDT5c","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:33:28.228 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:33:28.230 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:33:28.232 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****jrGo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:00000007","TimeStamp":"2020-10-19T13:03:28.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:33:28.256 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ddb40b78dc584b4a9e096261bae61cba","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:33:39.883 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:33:39.888 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:33:39.891 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:33:39.894 +03:30 [DBG] Rendering check session result
2020-10-19 16:33:40.239 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:33:40.245 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:33:40.249 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:33:40.251 +03:30 [DBG] Start authorize request
2020-10-19 16:33:40.252 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:33:40.254 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:33:40.256 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:33:40.257 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:33:40.260 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:33:40.263 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b9e00db6148d4b9482b6609bb71eca25","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"b9e00db6148d4b9482b6609bb71eca25","code_challenge":"7tRUtQi7_HL9wKQgJQzJH7fBFtVXcrMdxDK3GpS7aPA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:33:40.317 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:33:40.319 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:33:40.322 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****jTpQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:00000009","TimeStamp":"2020-10-19T13:03:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:33:40.338 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"b9e00db6148d4b9482b6609bb71eca25","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:33:43.307 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:33:43.321 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:43.325 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:43.327 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:33:43.338 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:33:43.346 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:33:43.350 +03:30 [DBG] Start discovery request
2020-10-19 16:33:43.357 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:33:43.362 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:33:43.370 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:33:43.372 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:33:43.387 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:33:43.391 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:33:43.394 +03:30 [DBG] Start discovery request
2020-10-19 16:34:01.235 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:34:01.247 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:34:01.255 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:34:01.258 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:34:01.261 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:34:01.263 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:34:01.266 +03:30 [DBG] Start discovery request
2020-10-19 16:34:01.401 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:34:01.421 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:34:01.430 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:34:01.446 +03:30 [DBG] Rendering check session result
2020-10-19 16:34:01.760 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:34:01.767 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:34:01.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:34:01.788 +03:30 [DBG] Start authorize request
2020-10-19 16:34:01.790 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:34:01.792 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:34:01.795 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:34:01.816 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:34:01.818 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:34:01.820 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ea61f1ab17d14453a9d74d9e9c80b9ac","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ea61f1ab17d14453a9d74d9e9c80b9ac","code_challenge":"lUW4vHJOd03AGyVQ-Gk6LyPvZD1j88QgxUWI8Y60Bvo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:34:01.860 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:34:01.862 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:34:01.865 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****OLho","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:0000000B","TimeStamp":"2020-10-19T13:04:01.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:34:01.884 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ea61f1ab17d14453a9d74d9e9c80b9ac","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:34:05.597 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:34:05.598 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:34:05.604 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:34:05.611 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:34:05.621 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:34:05.628 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:34:05.629 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:34:05.630 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:34:05.632 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:34:05.636 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:34:05.638 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:34:05.641 +03:30 [DBG] Start discovery request
2020-10-19 16:34:05.645 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:34:05.659 +03:30 [DBG] Start discovery request
2020-10-19 16:34:05.672 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:34:05.675 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:34:05.678 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:34:05.685 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:34:05.689 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:34:05.689 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:34:05.691 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:34:05.697 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:34:05.700 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:34:05.702 +03:30 [DBG] Start token request.
2020-10-19 16:34:05.708 +03:30 [DBG] Rendering check session result
2020-10-19 16:34:05.713 +03:30 [DBG] Start client validation
2020-10-19 16:34:05.717 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:34:05.718 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:34:05.720 +03:30 [DBG] client id without secret found
2020-10-19 16:34:05.721 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:34:05.722 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:34:05.724 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:34:05.734 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:34:05.735 +03:30 [DBG] Client validation success
2020-10-19 16:34:05.736 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA319V:00000008","TimeStamp":"2020-10-19T13:04:05.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:34:05.747 +03:30 [DBG] Start token request validation
2020-10-19 16:34:05.748 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:34:05.752 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:34:05.814 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:34:05.817 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BgqWlsr812jV5_HTkZgLeVHMr9fIe8GHI8xrKD1OLho","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"BgqWlsr812jV5_HTkZgLeVHMr9fIe8GHI8xrKD1OLho","redirect_uri":"http://localhost:8081/callback","code_verifier":"b649c4a7b7ff4e8a94b882468da36fbea687f1cbe3bc4cf28b60028df11ec05422edadbbd3704d86b1c93efb4b649188","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:34:05.844 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:34:05.847 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:34:05.857 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:34:05.922 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:34:05.930 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:34:05.933 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:34:05.944 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****_8Ug","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8yhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA319V:00000008","TimeStamp":"2020-10-19T13:04:05.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:34:05.964 +03:30 [DBG] Token request success.
2020-10-19 16:34:05.985 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:34:05.990 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:34:05.994 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:34:05.995 +03:30 [DBG] Start authorize request
2020-10-19 16:34:05.997 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:34:05.999 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:34:06.000 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:34:06.010 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:34:06.011 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:34:06.013 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"5936330aeb044308bab0ea0bcf56490b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"5936330aeb044308bab0ea0bcf56490b","code_challenge":"KcpNQYfhKnnwgwmpbsryzatTgLm8FpHunuXXxrUfmlo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:34:06.107 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:34:06.112 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:34:06.115 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****XBiU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:0000000D","TimeStamp":"2020-10-19T13:04:06.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:34:06.127 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"5936330aeb044308bab0ea0bcf56490b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:35:16.752 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:35:16.758 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:35:16.764 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:35:16.766 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:35:16.769 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:35:16.770 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:35:16.772 +03:30 [DBG] Start discovery request
2020-10-19 16:35:20.550 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:35:20.555 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:35:20.561 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:35:20.563 +03:30 [DBG] Rendering check session result
2020-10-19 16:35:21.699 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:35:21.743 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:35:21.782 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:35:21.853 +03:30 [DBG] Start authorize request
2020-10-19 16:35:21.892 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:35:21.953 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:35:21.982 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:35:22.053 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:35:22.093 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:35:22.114 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"031403ce18504f33ae5dba4cd550ba5b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"031403ce18504f33ae5dba4cd550ba5b","code_challenge":"_bonc_l2G7EHNWXtxK5_eM9p67dwOgcx6VpxqBF-wyA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:35:22.757 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:35:22.766 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:35:22.769 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****VQ0A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:0000000F","TimeStamp":"2020-10-19T13:05:22.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:35:22.781 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"031403ce18504f33ae5dba4cd550ba5b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:35:26.823 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:35:26.824 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:35:26.830 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:35:26.831 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:35:26.834 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:35:26.838 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:35:26.844 +03:30 [DBG] Start discovery request
2020-10-19 16:35:26.849 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:35:26.859 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:35:26.861 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:35:26.863 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:35:26.866 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:35:26.876 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:35:26.880 +03:30 [DBG] Start discovery request
2020-10-19 16:35:30.852 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:35:30.858 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:35:30.859 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:35:30.867 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:35:30.879 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:35:30.881 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:35:30.888 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:35:30.892 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:35:30.895 +03:30 [DBG] Rendering check session result
2020-10-19 16:35:30.909 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:35:30.918 +03:30 [DBG] Start token request.
2020-10-19 16:35:30.920 +03:30 [DBG] Start client validation
2020-10-19 16:35:30.921 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:35:30.922 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:35:30.925 +03:30 [DBG] client id without secret found
2020-10-19 16:35:30.926 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:35:30.928 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:35:30.943 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:35:30.946 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:35:30.947 +03:30 [DBG] Client validation success
2020-10-19 16:35:30.950 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A2:00000003","TimeStamp":"2020-10-19T13:05:30.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:35:30.970 +03:30 [DBG] Start token request validation
2020-10-19 16:35:30.982 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:35:30.984 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:35:31.007 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:35:31.009 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"nvY0P7r0b1GEdawlEQjCMP8O-jSroRkDQlHhnbwVQ0A","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"nvY0P7r0b1GEdawlEQjCMP8O-jSroRkDQlHhnbwVQ0A","redirect_uri":"http://localhost:8081/callback","code_verifier":"51c0b1e622194b02b0a6985049a1115a74858dd41a5048efb61ce1671e5e8f4afb3d39b35a80450dbd3e3fd8828c9907","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:35:31.040 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:35:31.044 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:35:31.045 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:35:31.135 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:35:31.140 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:35:31.143 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:35:31.153 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****4w2Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qqWw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A2:00000003","TimeStamp":"2020-10-19T13:05:31.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:35:31.165 +03:30 [DBG] Token request success.
2020-10-19 16:35:54.026 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:35:54.035 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:35:54.040 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:35:54.045 +03:30 [DBG] Start authorize request
2020-10-19 16:35:54.046 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:35:54.048 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:35:54.074 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:35:54.129 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:35:54.135 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:35:54.136 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"94af314e2b374ab48f420f144266d9ab","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"94af314e2b374ab48f420f144266d9ab","code_challenge":"-9ZUzKqKtqyZTyDEpEX0eNcHmDL7TNJMyZnl61Bsq6Y","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:35:54.167 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:35:54.168 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:35:54.169 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****VZ3Y","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A0:00000011","TimeStamp":"2020-10-19T13:05:54.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:35:54.180 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"94af314e2b374ab48f420f144266d9ab","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:40.119 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:40.125 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:40.128 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:40.131 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:40.135 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:40.139 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:40.152 +03:30 [DBG] Start discovery request
2020-10-19 16:53:40.285 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:40.290 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:40.293 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:40.296 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:40.476 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:40.483 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:40.485 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:40.488 +03:30 [DBG] Start authorize request
2020-10-19 16:53:40.489 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:40.491 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:40.493 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:40.496 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:40.498 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:40.509 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"40b45877782e47eea1f0a80cdf60975a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"40b45877782e47eea1f0a80cdf60975a","code_challenge":"sgwQBu-SHc-1TulX6o0WjpOKKsJLAFZEbO76tcOwrjk","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:40.829 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:40.836 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:40.839 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****s2eE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A4:00000002","TimeStamp":"2020-10-19T13:23:40.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:40.867 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"40b45877782e47eea1f0a80cdf60975a","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:42.663 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:42.672 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:42.675 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:42.685 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:42.707 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:42.724 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:42.752 +03:30 [DBG] Start discovery request
2020-10-19 16:53:42.794 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:42.803 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:42.813 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:42.819 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:42.821 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:42.826 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:42.829 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:42.832 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:42.841 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:42.843 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:42.847 +03:30 [DBG] Start discovery request
2020-10-19 16:53:42.959 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:42.968 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:42.972 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:42.978 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:42.995 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:43.004 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:43.012 +03:30 [DBG] Start token request.
2020-10-19 16:53:43.013 +03:30 [DBG] Start client validation
2020-10-19 16:53:43.015 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:43.016 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:43.021 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:43.024 +03:30 [DBG] client id without secret found
2020-10-19 16:53:43.025 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:43.028 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:53:43.044 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:43.046 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:53:43.049 +03:30 [DBG] Start authorize request
2020-10-19 16:53:43.050 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:43.052 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:43.054 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:53:43.056 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:43.059 +03:30 [DBG] Client validation success
2020-10-19 16:53:43.060 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:43.064 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000002","TimeStamp":"2020-10-19T13:23:43.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:53:43.076 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:43.078 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:43.090 +03:30 [DBG] Start token request validation
2020-10-19 16:53:43.094 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e89cdd38236e466d963ce2084ffef41c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e89cdd38236e466d963ce2084ffef41c","code_challenge":"xXf5eEuQ1Qgpo573s1Fpo3hGRgu5F-j2rHts-R0uqQQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:43.095 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:53:43.121 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:53:43.128 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:43.135 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:43.139 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****YSDk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A4:00000004","TimeStamp":"2020-10-19T13:23:43.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:43.139 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:53:43.158 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e89cdd38236e466d963ce2084ffef41c","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:43.159 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"HrN__0eCOTTmL1NlWAAlOuQc9_jxYlgBUXa6hw7s2eE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"HrN__0eCOTTmL1NlWAAlOuQc9_jxYlgBUXa6hw7s2eE","redirect_uri":"http://localhost:8081/callback","code_verifier":"327c747cb37a41609debe083fd8b46c029e7008088cb4af1943ceb4b5ff5c8f545995cc96d634c83b911aed12937d071","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:53:43.186 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:43.191 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:53:43.196 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:43.300 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:43.308 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:53:43.309 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:53:43.328 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****OciA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mYxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000002","TimeStamp":"2020-10-19T13:23:43.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:43.348 +03:30 [DBG] Token request success.
2020-10-19 16:53:43.839 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:43.844 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:43.847 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:43.852 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:43.857 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:43.875 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:43.887 +03:30 [DBG] Start discovery request
2020-10-19 16:53:43.891 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:43.899 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:43.901 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:43.902 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:43.904 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:43.915 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:43.918 +03:30 [DBG] Start discovery request
2020-10-19 16:53:44.114 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:44.127 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:44.138 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:44.141 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:44.174 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:44.176 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:44.176 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:44.180 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:44.181 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:44.183 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:44.185 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:44.187 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:44.190 +03:30 [DBG] Start authorize request
2020-10-19 16:53:44.197 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:44.199 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:44.200 +03:30 [DBG] Start token request.
2020-10-19 16:53:44.202 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:44.203 +03:30 [DBG] Start client validation
2020-10-19 16:53:44.204 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:44.210 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:44.212 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:44.213 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:44.216 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:44.217 +03:30 [DBG] client id without secret found
2020-10-19 16:53:44.219 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"fde25046c74244499a8664bc875d1bc1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"fde25046c74244499a8664bc875d1bc1","code_challenge":"dq3p7kp92mLYXtjXe8aFH0P9kyik-1xLjvy18WkD1oM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:44.220 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:53:44.250 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:53:44.252 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:44.261 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:53:44.264 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:44.265 +03:30 [DBG] Client validation success
2020-10-19 16:53:44.299 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:44.303 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A3:00000004","TimeStamp":"2020-10-19T13:23:44.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:53:44.309 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****WiJI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000001","TimeStamp":"2020-10-19T13:23:44.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:44.315 +03:30 [DBG] Start token request validation
2020-10-19 16:53:44.339 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"fde25046c74244499a8664bc875d1bc1","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:44.340 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:53:44.345 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:53:44.373 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:53:44.374 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"OnwE6M4HiIzEelOjrWBU2COB_PM6psSxYts8jhdYSDk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"OnwE6M4HiIzEelOjrWBU2COB_PM6psSxYts8jhdYSDk","redirect_uri":"http://localhost:8081/callback","code_verifier":"0798f67f01984e919c38d622fe308237940db72ce7294df39721a9c19f137a3ef464a3c56d0c49ae9f103c7b920359c7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:53:44.393 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:44.402 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:53:44.406 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:44.406 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:44.420 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:44.422 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:44.425 +03:30 [DBG] Start authorize request
2020-10-19 16:53:44.428 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:44.430 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:44.431 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:44.434 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:44.438 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:44.453 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"6a796fac005f4364930b60de460b84bb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"6a796fac005f4364930b60de460b84bb","code_challenge":"1dwtUjGWFW0cy98sCXoXRMUJUYUGh2pQzBVWW1iJuOA","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:44.472 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:44.504 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:53:44.509 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:53:44.510 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:44.513 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:44.515 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****tB6M","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000002","TimeStamp":"2020-10-19T13:23:44.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:44.519 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****zZaA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-9qA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A3:00000004","TimeStamp":"2020-10-19T13:23:44.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:44.529 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"6a796fac005f4364930b60de460b84bb","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:44.547 +03:30 [DBG] Token request success.
2020-10-19 16:53:45.078 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:45.096 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:45.101 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:45.106 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:45.113 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:45.116 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:45.117 +03:30 [DBG] Start discovery request
2020-10-19 16:53:45.122 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:45.132 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:45.135 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:45.138 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:45.141 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:45.142 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:45.145 +03:30 [DBG] Start discovery request
2020-10-19 16:53:45.326 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:45.331 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:45.333 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:45.346 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:45.355 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:45.358 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:45.374 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:45.376 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:45.380 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:45.394 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:45.395 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:45.398 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:45.401 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:45.408 +03:30 [DBG] Start token request.
2020-10-19 16:53:45.416 +03:30 [DBG] Start authorize request
2020-10-19 16:53:45.420 +03:30 [DBG] Start client validation
2020-10-19 16:53:45.424 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:45.428 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:45.431 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:45.433 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:45.435 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:45.437 +03:30 [DBG] client id without secret found
2020-10-19 16:53:45.454 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:45.458 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:53:45.461 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:45.462 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:53:45.466 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"dddd1ec727af412380259f3708f61446","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"dddd1ec727af412380259f3708f61446","code_challenge":"hQhs9-THhovGR6ADzWoG5QYVzxE7yhKk6HNa8PU7Qxc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:45.467 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:45.498 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:53:45.504 +03:30 [DBG] Client validation success
2020-10-19 16:53:45.505 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:45.507 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000005","TimeStamp":"2020-10-19T13:23:45.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:53:45.509 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:45.521 +03:30 [DBG] Start token request validation
2020-10-19 16:53:45.526 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****oFQ8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000004","TimeStamp":"2020-10-19T13:23:45.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:45.527 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:53:45.528 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:53:45.546 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"dddd1ec727af412380259f3708f61446","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:45.553 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:53:45.557 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"8FGpTuXydweoLX7OYDgIasBE81mFHWDY-EVzO1cWiJI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"8FGpTuXydweoLX7OYDgIasBE81mFHWDY-EVzO1cWiJI","redirect_uri":"http://localhost:8081/callback","code_verifier":"099b134638384dc0bacb3061febe7c6b9fd53b5ec2de4151869e6fc12cfc62ff53c1be85f4f2474b8186283aa2620ce8","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:53:45.575 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:45.582 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:53:45.585 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:45.626 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:45.631 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:53:45.634 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:53:45.642 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bshQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mpGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000005","TimeStamp":"2020-10-19T13:23:45.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:45.650 +03:30 [DBG] Token request success.
2020-10-19 16:53:46.096 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:46.101 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:46.103 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:46.107 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:46.111 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:46.112 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:46.117 +03:30 [DBG] Start discovery request
2020-10-19 16:53:46.122 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:46.139 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:46.142 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:46.145 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:46.147 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:46.149 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:46.156 +03:30 [DBG] Start discovery request
2020-10-19 16:53:46.457 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:46.467 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:46.470 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:46.472 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:46.578 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:46.583 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:46.584 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:46.586 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:46.610 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:46.612 +03:30 [DBG] Start authorize request
2020-10-19 16:53:46.621 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:46.622 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:46.624 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:46.625 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:46.629 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:46.631 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:46.653 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:46.656 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:46.657 +03:30 [DBG] Start token request.
2020-10-19 16:53:46.658 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:46.659 +03:30 [DBG] Start client validation
2020-10-19 16:53:46.670 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"f122b4e221914ca5b2304c97ef736d65","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"f122b4e221914ca5b2304c97ef736d65","code_challenge":"let8sS6_3HyJ0G5qv7h2Q9WYQw9eLP6dD10eyBYJJk8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:46.673 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:46.689 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:46.701 +03:30 [DBG] client id without secret found
2020-10-19 16:53:46.704 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:53:46.705 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:53:46.706 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:46.708 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:46.720 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:53:46.723 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:46.730 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****DY6I","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000006","TimeStamp":"2020-10-19T13:23:46.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:46.745 +03:30 [DBG] Client validation success
2020-10-19 16:53:46.766 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"f122b4e221914ca5b2304c97ef736d65","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:46.769 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A3:00000007","TimeStamp":"2020-10-19T13:23:46.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:53:46.799 +03:30 [DBG] Start token request validation
2020-10-19 16:53:46.805 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:53:46.807 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:53:46.844 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:53:46.845 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:46.847 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"9XBcftJUT-Gi5YaO10n5-2i8f0X0IsErYrd5rPNtB6M","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"9XBcftJUT-Gi5YaO10n5-2i8f0X0IsErYrd5rPNtB6M","redirect_uri":"http://localhost:8081/callback","code_verifier":"a7123421ddb0416cb4e4b1b806e01c1e159e65d0d21545daa19b22ace24873ac700fb0cfea6948fb9ed6cffc70d94c0f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:53:46.862 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:46.888 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:46.902 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:46.905 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:53:46.906 +03:30 [DBG] Start authorize request
2020-10-19 16:53:46.907 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:46.910 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:46.921 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:46.922 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:46.938 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:46.943 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:46.955 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"85ee9f0dc22e4dd28912ac7fd98b8f86","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"85ee9f0dc22e4dd28912ac7fd98b8f86","code_challenge":"dZ0IAlpqWAewHdNk5FQrQLO2Cr-Qf3DMWBWEjN5myDQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:46.968 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:47.005 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:47.007 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:53:47.028 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:47.031 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:53:47.033 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****GiuM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000007","TimeStamp":"2020-10-19T13:23:47.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:47.038 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7aeA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LVwg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A3:00000007","TimeStamp":"2020-10-19T13:23:47.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:47.049 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"85ee9f0dc22e4dd28912ac7fd98b8f86","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:47.062 +03:30 [DBG] Token request success.
2020-10-19 16:53:47.436 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:47.442 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:47.462 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:47.467 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:47.471 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:47.486 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:47.495 +03:30 [DBG] Start discovery request
2020-10-19 16:53:47.501 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:47.505 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:47.511 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:47.514 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:47.519 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:47.528 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:47.531 +03:30 [DBG] Start discovery request
2020-10-19 16:53:47.808 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:47.818 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:47.822 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:47.824 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:47.922 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:47.922 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:47.965 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:47.964 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:47.968 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:47.977 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:47.979 +03:30 [DBG] Start authorize request
2020-10-19 16:53:47.979 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:47.980 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:47.981 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:47.984 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:47.987 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:47.990 +03:30 [DBG] Start token request.
2020-10-19 16:53:47.992 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:47.993 +03:30 [DBG] Start client validation
2020-10-19 16:53:47.994 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:47.995 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:47.997 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:47.998 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:48.012 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ebaa008e759a474396fe33ac1344f5ec","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ebaa008e759a474396fe33ac1344f5ec","code_challenge":"Ph1ZJUiz9SLtx0D7p-ggo9Aa_Nb8v9X9-lgSi6_16H0","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:48.013 +03:30 [DBG] client id without secret found
2020-10-19 16:53:48.029 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 16:53:48.031 +03:30 [DBG] Secret id found: frontend
2020-10-19 16:53:48.032 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:48.032 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 16:53:48.041 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:48.046 +03:30 [DBG] Client validation success
2020-10-19 16:53:48.050 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:48.051 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000008","TimeStamp":"2020-10-19T13:23:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 16:53:48.054 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4QE8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:00000009","TimeStamp":"2020-10-19T13:23:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:48.058 +03:30 [DBG] Start token request validation
2020-10-19 16:53:48.073 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ebaa008e759a474396fe33ac1344f5ec","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:48.074 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 16:53:48.087 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 16:53:48.108 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 16:53:48.110 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"zR6LbYsuRxeord0Bgcm2URpKU7VCRBRoFGEgk4toFQ8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"zR6LbYsuRxeord0Bgcm2URpKU7VCRBRoFGEgk4toFQ8","redirect_uri":"http://localhost:8081/callback","code_verifier":"603b74c1d1eb46959665c083e8741973085fb69010a64b2fafc137a33d064500682aa3eb6a7f4d869da9ffde3240f0ae","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 16:53:48.141 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:48.151 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 16:53:48.158 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:48.235 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:48.237 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:48.242 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:48.244 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 16:53:48.246 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:48.248 +03:30 [DBG] Start authorize request
2020-10-19 16:53:48.262 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 16:53:48.268 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:48.272 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****0KhQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gqBQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A5:00000008","TimeStamp":"2020-10-19T13:23:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:48.272 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:48.274 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:48.308 +03:30 [DBG] Token request success.
2020-10-19 16:53:48.323 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:48.327 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:48.330 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"cf9ba884eca24cde8d26c48716e9c0fc","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"cf9ba884eca24cde8d26c48716e9c0fc","code_challenge":"A98cCLTwcuWCTVpvsu_RWUCEfsehWcfLEu0zC1lkmXQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:48.375 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:48.378 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:48.379 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dYec","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:0000000A","TimeStamp":"2020-10-19T13:23:48.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:48.410 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"cf9ba884eca24cde8d26c48716e9c0fc","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:48.998 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:49.003 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:49.010 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:49.016 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:49.022 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:49.030 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:49.032 +03:30 [DBG] Start discovery request
2020-10-19 16:53:49.040 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:49.042 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:49.051 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:49.053 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:49.056 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:49.065 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:49.085 +03:30 [DBG] Start discovery request
2020-10-19 16:53:49.897 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:49.906 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:49.910 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:49.913 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:49.922 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:49.942 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:49.950 +03:30 [DBG] Start discovery request
2020-10-19 16:53:49.964 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 16:53:49.971 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:49.975 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:49.976 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 16:53:49.979 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 16:53:50.020 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 16:53:50.028 +03:30 [DBG] Start discovery request
2020-10-19 16:53:50.345 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:50.347 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:50.355 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:50.360 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:50.552 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 16:53:50.556 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 16:53:50.559 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 16:53:50.559 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:50.561 +03:30 [DBG] Start authorize request
2020-10-19 16:53:50.568 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:50.571 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 16:53:50.572 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:50.574 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 16:53:50.575 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:50.576 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 16:53:50.577 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 16:53:50.582 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:50.600 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 16:53:50.604 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 16:53:50.604 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 16:53:50.605 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:50.607 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 16:53:50.616 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 16:53:50.619 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 16:53:50.621 +03:30 [DBG] Start token request.
2020-10-19 16:53:50.629 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"45139405aa8b43e085f0a0d9796d8fb0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"45139405aa8b43e085f0a0d9796d8fb0","code_challenge":"C_L60J2aPGTtC7G5iWsoWKRE15ayVi7epwGP-atwOS0","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 16:53:50.633 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 16:53:50.636 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 16:53:50.641 +03:30 [DBG] Start client validation
2020-10-19 16:53:50.683 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 16:53:50.684 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:50.684 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 16:53:50.687 +03:30 [DBG] Rendering check session result
2020-10-19 16:53:50.690 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 16:53:50.691 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:50.694 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 16:53:50.698 +03:30 [DBG] Start token request.
2020-10-19 16:53:50.702 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****aCfA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A6:0000000C","TimeStamp":"2020-10-19T13:23:50.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 16:53:50.706 +03:30 [DBG] Start client validation
2020-10-19 16:53:50.712 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA31A5:0000000B","TimeStamp":"2020-10-19T13:23:50.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 16:53:50.716 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 16:53:50.730 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"45139405aa8b43e085f0a0d9796d8fb0","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 16:53:50.751 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 16:53:50.755 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 16:53:50.791 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 16:53:50.797 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA31A3:0000000B","TimeStamp":"2020-10-19T13:23:50.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 16:53:50.808 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 16:53:50.845 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 17:05:16.455 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:16.468 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:16.509 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:16.511 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:16.529 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:16.532 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:16.546 +03:30 [DBG] Start discovery request
2020-10-19 17:05:17.165 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:17.174 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:17.179 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:17.187 +03:30 [DBG] Start authorize request
2020-10-19 17:05:17.192 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:17.195 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:17.197 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:17.201 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:17.204 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:17.207 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"cd93a206b9674f65aca0c339f1ec084d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"cd93a206b9674f65aca0c339f1ec084d","code_challenge":"kLPGXSlCNuJ15yR-r7Dco0IcwPdNqOtwYFmOgV3hLmI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:17.264 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:17.265 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:17.268 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****PNtk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000001","TimeStamp":"2020-10-19T13:35:17.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:17.292 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"cd93a206b9674f65aca0c339f1ec084d","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:19.573 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:19.582 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:19.587 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:19.589 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:19.603 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:19.610 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:19.613 +03:30 [DBG] Start discovery request
2020-10-19 17:05:19.697 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:19.705 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:19.708 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:19.713 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:19.719 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:19.728 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:19.730 +03:30 [DBG] Start token request.
2020-10-19 17:05:19.731 +03:30 [DBG] Start client validation
2020-10-19 17:05:19.732 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:19.733 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:19.735 +03:30 [DBG] client id without secret found
2020-10-19 17:05:19.752 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:19.765 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:19.766 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:19.773 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:19.775 +03:30 [DBG] Client validation success
2020-10-19 17:05:19.776 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A7:00000003","TimeStamp":"2020-10-19T13:35:19.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:19.782 +03:30 [DBG] Start token request validation
2020-10-19 17:05:19.783 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:19.790 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:19.803 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:19.805 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"-_9wSHbr-U_XjOWTRc7F2QNXplQRtT_k2eomriUPNtk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"-_9wSHbr-U_XjOWTRc7F2QNXplQRtT_k2eomriUPNtk","redirect_uri":"http://localhost:8081/callback","code_verifier":"ab893b39fd3b4869b82a76db4fe6a82cf9e197f9f6a24d11895b08f821594e2bb1ec3fc435664061a16e4035c8334bce","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:19.830 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:19.836 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:19.840 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:19.942 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:19.952 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:19.954 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:19.980 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****PaTg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8FBg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A7:00000003","TimeStamp":"2020-10-19T13:35:19.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:19.999 +03:30 [DBG] Token request success.
2020-10-19 17:05:20.026 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 17:05:20.035 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:20.039 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:20.047 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 17:05:20.050 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:20.053 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:20.060 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 17:05:20.064 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 17:05:20.074 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 17:05:20.081 +03:30 [DBG] Start userinfo request
2020-10-19 17:05:20.082 +03:30 [DBG] Bearer token found in header
2020-10-19 17:05:20.090 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:20.095 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:20.119 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 17:05:20.127 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603114519,"exp":1603118119,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603106223,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 17:05:20.152 +03:30 [DBG] Creating userinfo response
2020-10-19 17:05:20.153 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:05:20.155 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:05:20.156 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 17:05:20.157 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:05:20.221 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 17:05:20.266 +03:30 [DBG] End userinfo request
2020-10-19 17:05:20.301 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:20.309 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:20.314 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:20.317 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:20.957 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:20.963 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:20.964 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:20.966 +03:30 [DBG] Start authorize request
2020-10-19 17:05:20.972 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:20.979 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:20.982 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:20.987 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:20.989 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:21.000 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7217bab4d42a49a3955f0590c0160abb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7217bab4d42a49a3955f0590c0160abb","code_challenge":"bt_S00-3br8JRUnzFDDTA1-56z0E0J_tKmuhx8vWjhM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:21.038 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:21.044 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:21.046 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****D3pw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000003","TimeStamp":"2020-10-19T13:35:21.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:21.065 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7217bab4d42a49a3955f0590c0160abb","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:22.292 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:22.306 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:22.315 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:22.316 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:22.319 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:22.321 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:22.331 +03:30 [DBG] Start discovery request
2020-10-19 17:05:22.426 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:22.462 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:22.463 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:22.467 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:22.472 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:22.474 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:22.477 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:22.480 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:22.486 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:22.488 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:22.493 +03:30 [DBG] Start discovery request
2020-10-19 17:05:22.515 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:22.518 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:22.521 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:22.524 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:22.529 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:22.533 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:22.543 +03:30 [DBG] Start token request.
2020-10-19 17:05:22.547 +03:30 [DBG] Start client validation
2020-10-19 17:05:22.548 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:22.549 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:22.550 +03:30 [DBG] client id without secret found
2020-10-19 17:05:22.551 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:22.552 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:22.553 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:22.555 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:22.557 +03:30 [DBG] Client validation success
2020-10-19 17:05:22.562 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000002","TimeStamp":"2020-10-19T13:35:22.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:22.575 +03:30 [DBG] Start token request validation
2020-10-19 17:05:22.577 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:22.586 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:22.603 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:22.605 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"v8FJ0Q2WXl7yjDQiGJRsgv7ZVRpTD_qQjPgMGRiD3pw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"v8FJ0Q2WXl7yjDQiGJRsgv7ZVRpTD_qQjPgMGRiD3pw","redirect_uri":"http://localhost:8081/callback","code_verifier":"8539472e6af340e3b68137c6eeb402152dbf4a2eed4b4a198826e25c4c1eb7b47fa99de0f2d44de8b05970a8fc865300","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:22.618 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:22.626 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:22.633 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:22.636 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:22.640 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:22.642 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:22.646 +03:30 [DBG] Start authorize request
2020-10-19 17:05:22.648 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:22.658 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:22.660 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:22.664 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:22.665 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:22.668 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"dfe63e4d75e24bcaa67fc88d0c1709f2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"dfe63e4d75e24bcaa67fc88d0c1709f2","code_challenge":"oIOeOJmVEsGbAo32K0Im9awemxePHer8nRDuOw0UGzM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:22.691 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:22.697 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:22.701 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:22.703 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:22.706 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:22.710 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****zn_s","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000005","TimeStamp":"2020-10-19T13:35:22.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:22.712 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****P7lg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kVnw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000002","TimeStamp":"2020-10-19T13:35:22.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:22.723 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"dfe63e4d75e24bcaa67fc88d0c1709f2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:22.740 +03:30 [DBG] Token request success.
2020-10-19 17:05:23.061 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:23.067 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:23.071 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:23.075 +03:30 [DBG] Start authorize request
2020-10-19 17:05:23.082 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:23.088 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:23.089 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:23.098 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:23.099 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:23.103 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e624f84114de4431b7d09f6f62827d71","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e624f84114de4431b7d09f6f62827d71","code_challenge":"LpvC9_NHY3ulnLMeAmgP4EIrh8PSu7AOlCLYRI_2BXw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:23.144 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:23.149 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:23.153 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****32X0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000006","TimeStamp":"2020-10-19T13:35:23.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:23.165 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e624f84114de4431b7d09f6f62827d71","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:23.716 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:23.720 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:23.720 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:23.721 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:23.722 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:23.725 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:23.727 +03:30 [DBG] Start discovery request
2020-10-19 17:05:23.732 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:23.733 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:23.735 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:23.736 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:23.739 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:23.749 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:23.749 +03:30 [DBG] Start discovery request
2020-10-19 17:05:23.777 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:23.781 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:23.782 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:23.784 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:23.811 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:23.814 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:23.815 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:23.817 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:23.818 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:23.819 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:23.820 +03:30 [DBG] Start token request.
2020-10-19 17:05:23.822 +03:30 [DBG] Start client validation
2020-10-19 17:05:23.824 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:23.825 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:23.826 +03:30 [DBG] client id without secret found
2020-10-19 17:05:23.827 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:23.827 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:23.828 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:23.829 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:23.831 +03:30 [DBG] Client validation success
2020-10-19 17:05:23.846 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A7:00000008","TimeStamp":"2020-10-19T13:35:23.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:23.852 +03:30 [DBG] Start token request validation
2020-10-19 17:05:23.853 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:23.854 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:23.869 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:23.872 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Za7Z46WUZe-SSkY9LGIfa4qmgNc8EP-Z0Ov8h5Gzn_s","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Za7Z46WUZe-SSkY9LGIfa4qmgNc8EP-Z0Ov8h5Gzn_s","redirect_uri":"http://localhost:8081/callback","code_verifier":"9107093027ba4a3bb1a9dc04322a4e5c24e57b3fba32495483f02193c58d7b6604461f0b2ca24b5493bc23f0d9eb8781","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:23.878 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:23.884 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:23.885 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:23.923 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:23.927 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:23.928 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:23.935 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****sjfA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iGFw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A7:00000008","TimeStamp":"2020-10-19T13:35:23.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:23.947 +03:30 [DBG] Token request success.
2020-10-19 17:05:24.458 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:24.463 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:24.464 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:24.465 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:24.467 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:24.467 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:24.470 +03:30 [DBG] Start discovery request
2020-10-19 17:05:24.475 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:24.476 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:24.477 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:24.478 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:24.481 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:24.482 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:24.483 +03:30 [DBG] Start discovery request
2020-10-19 17:05:24.741 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:24.745 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:24.746 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:24.747 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:24.807 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:24.808 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:24.811 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:24.812 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:24.813 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:24.814 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:24.815 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:24.816 +03:30 [DBG] Start authorize request
2020-10-19 17:05:24.817 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:24.817 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:24.817 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:24.818 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:24.819 +03:30 [DBG] Start token request.
2020-10-19 17:05:24.819 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:24.820 +03:30 [DBG] Start client validation
2020-10-19 17:05:24.820 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:24.821 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:24.821 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:24.822 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:24.824 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"98fd5de539ca42d7b9c43bdf14d89031","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"98fd5de539ca42d7b9c43bdf14d89031","code_challenge":"4PpVYQeLRVJ3QqhWUKbi97MG1s4DD92A_dbcZFiSyrQ","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:24.825 +03:30 [DBG] client id without secret found
2020-10-19 17:05:24.845 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:24.846 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:24.846 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:24.847 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:24.848 +03:30 [DBG] Client validation success
2020-10-19 17:05:24.850 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000005","TimeStamp":"2020-10-19T13:35:24.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:24.856 +03:30 [DBG] Start token request validation
2020-10-19 17:05:24.857 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:24.857 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:24.858 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:24.859 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ry7g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000009","TimeStamp":"2020-10-19T13:35:24.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:24.860 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:24.876 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"98fd5de539ca42d7b9c43bdf14d89031","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:24.906 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:24.909 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dGMczbafb0dA5xG8IyiXe8G9lrm4wGXn4rkupQk32X0","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"dGMczbafb0dA5xG8IyiXe8G9lrm4wGXn4rkupQk32X0","redirect_uri":"http://localhost:8081/callback","code_verifier":"a2ecbcb2ca0a4421b6644faf9b44d39cf41c8bfe11ba4bb69aea539e5f21b6104b03b49a498e4e3faa1c1e5d5ad6cfe7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:24.917 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:24.919 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:24.920 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:24.957 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:24.960 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:24.962 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:24.968 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****aGpA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****a80w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000005","TimeStamp":"2020-10-19T13:35:24.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:24.974 +03:30 [DBG] Token request success.
2020-10-19 17:05:25.013 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:25.018 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:25.018 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:25.019 +03:30 [DBG] Start authorize request
2020-10-19 17:05:25.020 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:25.021 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:25.021 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:25.022 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:25.023 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:25.024 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"0c5173dc81aa4d11827dfb770692641f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"0c5173dc81aa4d11827dfb770692641f","code_challenge":"FZjRCXVm0A_oKSTZOvEdfZ2Fk5GaWXeUmIgBacjR-s8","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:25.048 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:25.050 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:25.055 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****of7Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:0000000A","TimeStamp":"2020-10-19T13:35:25.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:25.059 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"0c5173dc81aa4d11827dfb770692641f","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:25.365 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:25.369 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:25.370 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:25.371 +03:30 [DBG] Start authorize request
2020-10-19 17:05:25.371 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:25.372 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:25.373 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:25.375 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:25.377 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:25.378 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"a86d661e441c45ae9d3f65bb4b2a59a3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"a86d661e441c45ae9d3f65bb4b2a59a3","code_challenge":"-dE-vpOGji-7MLEs75MVehD2LjEahcDllAyOmGmUlFY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:25.397 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:25.398 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:25.400 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Esms","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:0000000B","TimeStamp":"2020-10-19T13:35:25.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:25.408 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"a86d661e441c45ae9d3f65bb4b2a59a3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:26.273 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:26.277 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:26.277 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:26.278 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:26.279 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:26.280 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:26.281 +03:30 [DBG] Start discovery request
2020-10-19 17:05:26.285 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:26.286 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:26.288 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:26.289 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:26.290 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:26.292 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:26.293 +03:30 [DBG] Start discovery request
2020-10-19 17:05:26.342 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:26.345 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:26.346 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:26.347 +03:30 [DBG] Start authorize request
2020-10-19 17:05:26.348 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:26.349 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:26.350 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:26.351 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:26.352 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:26.354 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bfbce84b716b46dc938794a690d8e4b3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"bfbce84b716b46dc938794a690d8e4b3","code_challenge":"sHsvnZm2ehV3UkD5hQwkkU6SToxDefy7JYA8OxrbxTE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:26.378 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:26.381 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:26.380 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:26.382 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:26.383 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:26.384 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:26.385 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HmI0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:0000000C","TimeStamp":"2020-10-19T13:35:26.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:26.386 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:26.404 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"bfbce84b716b46dc938794a690d8e4b3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:26.405 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:26.409 +03:30 [DBG] Start token request.
2020-10-19 17:05:26.409 +03:30 [DBG] Start client validation
2020-10-19 17:05:26.410 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:26.410 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:26.411 +03:30 [DBG] client id without secret found
2020-10-19 17:05:26.412 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:26.413 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:26.414 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:26.415 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:26.416 +03:30 [DBG] Client validation success
2020-10-19 17:05:26.418 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A7:0000000B","TimeStamp":"2020-10-19T13:35:26.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:26.439 +03:30 [DBG] Start token request validation
2020-10-19 17:05:26.440 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:26.441 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:26.458 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:26.459 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:26.460 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Ilgfjuko4e-q3tpF1IafRswzh6gtuKcuVuh8uH-Ry7g","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Ilgfjuko4e-q3tpF1IafRswzh6gtuKcuVuh8uH-Ry7g","redirect_uri":"http://localhost:8081/callback","code_verifier":"28e8022aa86f4ae5b0c1478193a843deee0f8bbd85fe40449a25081bf34e6130e6facd3b340641f3a0220ee92fc42caa","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:26.461 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:26.475 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:26.475 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:26.476 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:26.477 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:26.478 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:26.541 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:26.544 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:26.546 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:26.556 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****qgXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-gwg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A7:0000000B","TimeStamp":"2020-10-19T13:35:26.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:26.569 +03:30 [DBG] Token request success.
2020-10-19 17:05:27.390 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:27.395 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:27.397 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:27.399 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:27.402 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:27.404 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:27.406 +03:30 [DBG] Start discovery request
2020-10-19 17:05:27.412 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:27.416 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:27.426 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:27.440 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:27.443 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:27.444 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:27.446 +03:30 [DBG] Start discovery request
2020-10-19 17:05:27.753 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:27.762 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:27.764 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:27.765 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:27.766 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:27.769 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:27.770 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:27.773 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:27.775 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:27.777 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:27.778 +03:30 [DBG] Start token request.
2020-10-19 17:05:27.779 +03:30 [DBG] Start client validation
2020-10-19 17:05:27.780 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:27.781 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:27.792 +03:30 [DBG] client id without secret found
2020-10-19 17:05:27.794 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:27.794 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:27.795 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:27.796 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:27.798 +03:30 [DBG] Client validation success
2020-10-19 17:05:27.799 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000008","TimeStamp":"2020-10-19T13:35:27.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:27.805 +03:30 [DBG] Start token request validation
2020-10-19 17:05:27.807 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:27.809 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:27.823 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:27.832 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"GHIpdu8xc3EQRkjIHXTUZGTiWtx_LhDWlmqlxp0of7Q","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"GHIpdu8xc3EQRkjIHXTUZGTiWtx_LhDWlmqlxp0of7Q","redirect_uri":"http://localhost:8081/callback","code_verifier":"e408b496ba0c4dafb73d485ef633a400a6d7e5208b91465b8b0934ff22ebe12645981a96f55f4c82aa07dd29a440696f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:27.844 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:27.851 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:27.852 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:27.899 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:27.906 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:27.908 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:27.917 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Z6Fg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_Dcw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31AA:00000008","TimeStamp":"2020-10-19T13:35:27.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:27.934 +03:30 [DBG] Token request success.
2020-10-19 17:05:28.815 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:28.818 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:28.819 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:28.821 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:28.823 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:28.824 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:28.826 +03:30 [DBG] Start discovery request
2020-10-19 17:05:28.831 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:28.842 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:28.844 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:28.845 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:28.848 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:28.854 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:28.857 +03:30 [DBG] Start discovery request
2020-10-19 17:05:29.037 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:29.039 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:29.041 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:29.043 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:29.044 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:29.045 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:29.047 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:29.049 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:29.051 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:29.052 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:29.053 +03:30 [DBG] Start token request.
2020-10-19 17:05:29.055 +03:30 [DBG] Start client validation
2020-10-19 17:05:29.056 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:29.057 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:29.058 +03:30 [DBG] client id without secret found
2020-10-19 17:05:29.059 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:05:29.059 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:05:29.061 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:29.072 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:05:29.073 +03:30 [DBG] Client validation success
2020-10-19 17:05:29.074 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K3JOA31A7:0000000E","TimeStamp":"2020-10-19T13:35:29.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:05:29.080 +03:30 [DBG] Start token request validation
2020-10-19 17:05:29.081 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:05:29.082 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:05:29.099 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:05:29.122 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"gJBJmdi2AUJIMmT4XM31rkKgto1GlyqHQavRQtzEsms","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"gJBJmdi2AUJIMmT4XM31rkKgto1GlyqHQavRQtzEsms","redirect_uri":"http://localhost:8081/callback","code_verifier":"3ca0bb17385a4f37bec4312c159e763af3a96d31a7994f859cd8a2268888953f302bda0dd8504e9ca54e8709c9313241","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:05:29.137 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:29.142 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:05:29.146 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:29.189 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:29.195 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:05:29.197 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:05:29.206 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****27pQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****05Tw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A7:0000000E","TimeStamp":"2020-10-19T13:35:29.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:29.213 +03:30 [DBG] Token request success.
2020-10-19 17:05:30.713 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:30.720 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:30.721 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:30.722 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:30.724 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:30.725 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:30.726 +03:30 [DBG] Start discovery request
2020-10-19 17:05:30.731 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:05:30.733 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:30.734 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:30.735 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:05:30.736 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:05:30.737 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:05:30.751 +03:30 [DBG] Start discovery request
2020-10-19 17:05:31.128 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:05:31.137 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:05:31.139 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:05:31.140 +03:30 [DBG] Start authorize request
2020-10-19 17:05:31.145 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:05:31.158 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:05:31.160 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:05:31.165 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:05:31.167 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:05:31.173 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e95c71ab07a443848ceccad20315a243","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"e95c71ab07a443848ceccad20315a243","code_challenge":"zOlKGjTSUcUtIU9e606r2ypzORNDcoS9FDlYeehisYc","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:05:31.187 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:05:31.201 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:05:31.228 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:05:31.231 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:05:31.233 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:05:31.270 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:05:31.282 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:05:31.284 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:05:31.283 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:05:31.287 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****lbfs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K3JOA31A9:00000010","TimeStamp":"2020-10-19T13:35:31.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:05:31.289 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:05:31.291 +03:30 [DBG] Rendering check session result
2020-10-19 17:05:31.301 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"e95c71ab07a443848ceccad20315a243","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:05:31.302 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:05:31.332 +03:30 [DBG] Start token request.
2020-10-19 17:05:31.333 +03:30 [DBG] Start client validation
2020-10-19 17:05:31.334 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:05:31.335 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:05:31.346 +03:30 [INF] {"Details":"Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)\r\n   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)\r\n   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Unexpected end of request content.","ActivityId":"0HM3K3JOA31AA:0000000B","TimeStamp":"2020-10-19T13:35:31.0000000Z","ProcessId":15516,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-10-19 17:05:31.362 +03:30 [FTL] Unhandled exception: Unexpected end of request content.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-10-19 17:05:31.372 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Unexpected end of request content.
   at Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.Throw(RequestRejectionReason reason)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.ReadAsyncInternal(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.WebUtilities.FormPipeReader.ReadFormAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Http.Features.FormFeature.InnerReadFormAsync(CancellationToken cancellationToken)
   at IdentityServer4.Validation.PostBodySecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.SecretParser.ParseAsync(HttpContext context)
   at IdentityServer4.Validation.ClientSecretValidator.ValidateAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-10-19 17:06:32.727 +03:30 [INF] Starting host...
2020-10-19 17:06:33.271 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-19 17:06:33.323 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-19 17:06:33.391 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-19 17:06:33.393 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-19 17:06:33.394 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-19 17:06:33.395 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-19 17:06:33.397 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-19 17:06:33.399 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-19 17:06:36.251 +03:30 [DBG] Login Url: /Account/Login
2020-10-19 17:06:36.259 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-19 17:06:36.267 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-19 17:06:36.268 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-19 17:06:36.269 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-19 17:06:36.271 +03:30 [DBG] Error Url: /home/error
2020-10-19 17:06:36.276 +03:30 [DBG] Error Id Parameter: errorId
2020-10-19 17:09:14.228 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:09:14.244 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:09:14.247 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:09:14.290 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:09:14.336 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:09:14.343 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:09:14.350 +03:30 [DBG] Start discovery request
2020-10-19 17:09:14.776 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:09:14.791 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:09:14.794 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:09:14.801 +03:30 [DBG] Start authorize request
2020-10-19 17:09:14.816 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:09:14.824 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:09:14.864 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:09:14.937 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:09:15.012 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:09:15.070 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"4f40fba195714942b419296c02fb321d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"rO_4hoeSEF2YPlrDne96Bg","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"4f40fba195714942b419296c02fb321d","code_challenge":"dc0jLd1slOddCJdK1frgE6bx0O8VyPxz1iqrf9OybQI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:09:19.643 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 17:09:19.655 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 17:09:19.657 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 17:09:19.857 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:09:19.862 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:09:19.892 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:09:19.904 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:09:19.912 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:09:38.107 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 17:09:38.243 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-19 17:09:38.252 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-19 17:09:38.255 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-19 17:09:38.288 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000005","TimeStamp":"2020-10-19T13:39:38.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-10-19 17:09:38.474 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-10-19 17:09:38.490 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-10-19 17:09:38.497 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-10-19 17:09:38.512 +03:30 [DBG] Processing signout callback request
2020-10-19 17:09:38.604 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:09:38.623 +03:30 [DBG] No client front-channel logout URLs
2020-10-19 17:09:38.629 +03:30 [DBG] No client back-channel logout URLs
2020-10-19 17:09:38.645 +03:30 [INF] Successful signout callback.
2020-10-19 17:09:38.647 +03:30 [DBG] No client front-channel iframe urls
2020-10-19 17:09:38.649 +03:30 [DBG] No client back-channel iframe urls
2020-10-19 17:11:28.851 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:11:28.860 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:11:28.868 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:11:28.872 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:11:28.886 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:11:28.894 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:11:28.897 +03:30 [DBG] Start discovery request
2020-10-19 17:11:29.213 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:11:29.228 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:11:29.232 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:11:29.241 +03:30 [DBG] Start authorize request
2020-10-19 17:11:29.244 +03:30 [DBG] No user present in authorize request
2020-10-19 17:11:29.247 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:29.255 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:29.258 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:29.261 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:29.268 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"9dcfcc4208be4163900cd10cb4745d0a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"9dcfcc4208be4163900cd10cb4745d0a","code_challenge":"uO-U7YLWb5UEfihtho5AP9gXw8Y7vebADZ82_f6H9Q0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:11:29.290 +03:30 [INF] Showing login: User is not authenticated
2020-10-19 17:11:29.332 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:29.333 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:29.336 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:29.338 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:29.344 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:53.187 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 17:11:53.261 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:53.263 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:53.280 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:53.286 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:54.071 +03:30 [DBG] Augmenting SignInContext
2020-10-19 17:11:54.074 +03:30 [DBG] Adding idp claim with value: local
2020-10-19 17:11:54.076 +03:30 [DBG] Adding auth_time claim with value: 1603114914
2020-10-19 17:11:54.095 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 17:11:54.122 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000009","TimeStamp":"2020-10-19T13:41:54.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-19 17:11:54.138 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:54.206 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 17:11:54.214 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 17:11:54.219 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 17:11:54.234 +03:30 [DBG] Start authorize callback request
2020-10-19 17:11:54.247 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:11:54.249 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:54.253 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:54.256 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:54.258 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:54.262 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"9dcfcc4208be4163900cd10cb4745d0a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"9dcfcc4208be4163900cd10cb4745d0a","code_challenge":"uO-U7YLWb5UEfihtho5AP9gXw8Y7vebADZ82_f6H9Q0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:11:54.325 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 17:11:54.331 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 17:11:54.335 +03:30 [INF] Showing consent: User has not yet consented
2020-10-19 17:11:54.362 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:54.364 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:54.369 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:54.370 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:54.372 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:57.101 +03:30 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-19 17:11:57.174 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:57.177 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:57.184 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:57.194 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:57.216 +03:30 [INF] {"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RequestedScopes":["openid","profile","backend"],"GrantedScopes":["openid","profile","backend"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HM3K6FVI10U3:0000000C","TimeStamp":"2020-10-19T13:41:57.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-10-19 17:11:57.279 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:57.475 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-19 17:11:57.487 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-19 17:11:57.494 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-19 17:11:57.505 +03:30 [DBG] Start authorize callback request
2020-10-19 17:11:57.525 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:11:57.527 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:11:57.534 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:11:57.538 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:11:57.541 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:11:57.547 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"9dcfcc4208be4163900cd10cb4745d0a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"9dcfcc4208be4163900cd10cb4745d0a","code_challenge":"uO-U7YLWb5UEfihtho5AP9gXw8Y7vebADZ82_f6H9Q0","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:11:57.595 +03:30 [DBG] user_consent grant with value: frontend|cba605e6-8b4c-4370-bc29-582ed37a1d64 not found in store.
2020-10-19 17:11:57.600 +03:30 [DBG] Found no prior consent from consent store, consent is required
2020-10-19 17:11:57.614 +03:30 [INF] User consented to scopes: ["openid","profile","backend"]
2020-10-19 17:11:57.620 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","backend"]
2020-10-19 17:11:57.632 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:11:57.684 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:11:57.755 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****zuIM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:0000000D","TimeStamp":"2020-10-19T13:41:57.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:11:57.786 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"9dcfcc4208be4163900cd10cb4745d0a","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:11:57.817 +03:30 [DBG] Augmenting SignInContext
2020-10-19 17:11:57.821 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-19 17:12:00.382 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:00.397 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:00.403 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:00.407 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:00.418 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:00.420 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:00.422 +03:30 [DBG] Start discovery request
2020-10-19 17:12:00.552 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:00.562 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:00.566 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:00.577 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:00.604 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:00.608 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:00.625 +03:30 [DBG] Start token request.
2020-10-19 17:12:00.634 +03:30 [DBG] Start client validation
2020-10-19 17:12:00.646 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:00.658 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:00.661 +03:30 [DBG] client id without secret found
2020-10-19 17:12:00.665 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:00.673 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:00.676 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:00.685 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:00.700 +03:30 [DBG] Client validation success
2020-10-19 17:12:00.719 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U4:00000004","TimeStamp":"2020-10-19T13:42:00.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:00.739 +03:30 [DBG] Start token request validation
2020-10-19 17:12:00.753 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:00.809 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:00.840 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:00.875 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Q710eysDexyLoZ1LEqATOGfBVq7vHUQfjFDSWNyzuIM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"Q710eysDexyLoZ1LEqATOGfBVq7vHUQfjFDSWNyzuIM","redirect_uri":"http://localhost:8081/callback","code_verifier":"41c6be1266544f96a5c5297091bea96b494447ddc0e84a3ab74116f2edeff97356ade852809a4ae297888d6b6c364724","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:00.910 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:00.957 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:00.963 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:01.262 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:01.291 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:01.299 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:01.316 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****9Vmw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ljYw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U4:00000004","TimeStamp":"2020-10-19T13:42:01.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:01.337 +03:30 [DBG] Token request success.
2020-10-19 17:12:01.400 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 17:12:01.456 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:01.464 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:01.477 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8081
2020-10-19 17:12:01.479 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:01.482 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:01.488 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-19 17:12:01.503 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-19 17:12:01.510 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-19 17:12:01.523 +03:30 [DBG] Start userinfo request
2020-10-19 17:12:01.527 +03:30 [DBG] Bearer token found in header
2020-10-19 17:12:01.619 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:01.633 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:01.658 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-19 17:12:01.675 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1603114921,"exp":1603118521,"iss":"http://localhost:5000","aud":"backend","client_id":"frontend","sub":"cba605e6-8b4c-4370-bc29-582ed37a1d64","auth_time":1603114914,"idp":"local","name":"alice","scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-19 17:12:01.699 +03:30 [DBG] Creating userinfo response
2020-10-19 17:12:01.707 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:12:01.710 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:12:01.714 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-19 17:12:01.717 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-19 17:12:01.774 +03:30 [INF] Profile service returned the following claim types: sub preferred_username name
2020-10-19 17:12:01.789 +03:30 [DBG] End userinfo request
2020-10-19 17:12:01.843 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:01.851 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:01.855 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:01.866 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:02.427 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:02.454 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:02.459 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:02.463 +03:30 [DBG] Start authorize request
2020-10-19 17:12:02.466 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:02.477 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:02.482 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:02.491 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:02.496 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:02.513 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"234b41e5660a4894ba816b43e02c9edd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"234b41e5660a4894ba816b43e02c9edd","code_challenge":"_lbM7N6DiqUExwqSPAcC9BjiZNpW1BLuEs9yFapMw9w","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:02.590 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:02.610 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:02.620 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****kMX4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:0000000F","TimeStamp":"2020-10-19T13:42:02.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:02.644 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"234b41e5660a4894ba816b43e02c9edd","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:02.757 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:02.766 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:02.768 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:02.775 +03:30 [DBG] Start discovery request
2020-10-19 17:12:03.802 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-19 17:12:03.817 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-19 17:12:03.826 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-19 17:12:03.848 +03:30 [DBG] Start key discovery request
2020-10-19 17:12:04.318 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:04.325 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:04.331 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:04.340 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:04.348 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:04.351 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:04.355 +03:30 [DBG] Start discovery request
2020-10-19 17:12:04.380 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:04.383 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:04.388 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:04.399 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:04.407 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:04.411 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:04.419 +03:30 [DBG] Start discovery request
2020-10-19 17:12:04.427 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:04.435 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:04.437 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:04.440 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:04.475 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:04.484 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:04.488 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:04.497 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:04.505 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:04.509 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:04.512 +03:30 [DBG] Start token request.
2020-10-19 17:12:04.515 +03:30 [DBG] Start client validation
2020-10-19 17:12:04.516 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:04.518 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:04.521 +03:30 [DBG] client id without secret found
2020-10-19 17:12:04.523 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:04.524 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:04.534 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:04.536 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:04.537 +03:30 [DBG] Client validation success
2020-10-19 17:12:04.540 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000002","TimeStamp":"2020-10-19T13:42:04.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:04.550 +03:30 [DBG] Start token request validation
2020-10-19 17:12:04.551 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:04.554 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:04.581 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:04.582 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"E24wO6501R1iTl2hf2mlrHFtLSsfngHwnuQAX48kMX4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"E24wO6501R1iTl2hf2mlrHFtLSsfngHwnuQAX48kMX4","redirect_uri":"http://localhost:8081/callback","code_verifier":"f387f5ac554b4ebbba7733541dabf111df19929c793d46f0a15e2ab6e3acead69e6e113467fd45768ea9a8077e6322e9","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:04.597 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:04.601 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:04.603 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:04.620 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:04.623 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:04.627 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:04.631 +03:30 [DBG] Start authorize request
2020-10-19 17:12:04.632 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:04.634 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:04.636 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:04.637 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:04.641 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:04.643 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:04.644 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"aa3f53164d0d4615b6e0c31f19913c4b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"aa3f53164d0d4615b6e0c31f19913c4b","code_challenge":"m795qB-rD_B7ZXg4qE6zByubkRX3bldVrC3Q8U6FxJk","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:04.655 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:04.687 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:04.696 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:04.698 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:04.698 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7o5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TnfQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000002","TimeStamp":"2020-10-19T13:42:04.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:04.700 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****YY1U","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000011","TimeStamp":"2020-10-19T13:42:04.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:04.716 +03:30 [DBG] Token request success.
2020-10-19 17:12:04.727 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"aa3f53164d0d4615b6e0c31f19913c4b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:05.056 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:05.065 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:05.068 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:05.074 +03:30 [DBG] Start authorize request
2020-10-19 17:12:05.091 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:05.111 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:05.122 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:05.127 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:05.131 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:05.145 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"0c492a736d9f41febc23e5b6257f18f1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"0c492a736d9f41febc23e5b6257f18f1","code_challenge":"ZHBSFbskbG0PRKg55BjOFkUuRPrtG1bVkDL3vJ2BNfM","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:05.200 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:05.205 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:05.210 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4wKA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000012","TimeStamp":"2020-10-19T13:42:05.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:05.229 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"0c492a736d9f41febc23e5b6257f18f1","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:05.845 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:05.853 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:05.861 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:05.865 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:05.876 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:05.878 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:05.884 +03:30 [DBG] Start discovery request
2020-10-19 17:12:05.895 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:05.900 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:05.912 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:05.920 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:05.929 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:05.942 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:05.947 +03:30 [DBG] Start discovery request
2020-10-19 17:12:05.971 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:05.975 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:05.977 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:05.980 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:06.557 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:06.568 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:06.570 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:06.572 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:06.576 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:06.580 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:06.583 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:06.599 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:06.606 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:06.608 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:06.637 +03:30 [DBG] Start discovery request
2020-10-19 17:12:06.657 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:06.670 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:06.671 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:06.675 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:06.682 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:06.684 +03:30 [DBG] Start token request.
2020-10-19 17:12:06.688 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:06.689 +03:30 [DBG] Start client validation
2020-10-19 17:12:06.699 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:06.731 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:06.741 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:06.780 +03:30 [DBG] client id without secret found
2020-10-19 17:12:06.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:06.781 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:06.782 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:06.788 +03:30 [DBG] Start discovery request
2020-10-19 17:12:06.792 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:06.792 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:06.794 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:06.805 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:06.810 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:06.817 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:06.822 +03:30 [DBG] Client validation success
2020-10-19 17:12:06.829 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000004","TimeStamp":"2020-10-19T13:42:06.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:06.867 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:06.872 +03:30 [DBG] Start token request validation
2020-10-19 17:12:06.885 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:06.887 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:06.891 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:06.897 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:06.898 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:06.905 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:06.917 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:06.918 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:06.920 +03:30 [DBG] Start token request.
2020-10-19 17:12:06.931 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dwNUHZk9Hj_0se5e7bvfDKeZshaC5Ym1T_PtOc3YY1U","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"dwNUHZk9Hj_0se5e7bvfDKeZshaC5Ym1T_PtOc3YY1U","redirect_uri":"http://localhost:8081/callback","code_verifier":"a9189e3a64444f3aa6bf69fa44c8a6d6866b4227d007434c8ed2b8b721cd88f268a3134a8209430b974f82cee0747b5c","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:06.933 +03:30 [DBG] Start client validation
2020-10-19 17:12:06.952 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:06.954 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:06.956 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:06.959 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:06.960 +03:30 [DBG] client id without secret found
2020-10-19 17:12:06.961 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:06.963 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:06.966 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:06.971 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:06.977 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:06.979 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:06.982 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:06.983 +03:30 [DBG] Client validation success
2020-10-19 17:12:06.986 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:06.988 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U9:00000002","TimeStamp":"2020-10-19T13:42:06.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:06.993 +03:30 [DBG] Start authorize request
2020-10-19 17:12:07.038 +03:30 [DBG] Start token request validation
2020-10-19 17:12:07.039 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.039 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:07.040 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:07.044 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:07.051 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:07.054 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:07.054 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:07.057 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.067 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:07.069 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:07.070 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"GAVbxGDq1ZXquvt8Wd1KvnDA3oaY79gDCLM8pr34wKA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"GAVbxGDq1ZXquvt8Wd1KvnDA3oaY79gDCLM8pr34wKA","redirect_uri":"http://localhost:8081/callback","code_verifier":"3a444c55ced145518e9b763724ba357413f6c55129cc4c069672d11bbecccdb0c97b2d023e9248c7b6541c4403bbe4b6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:07.073 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:07.074 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****eK3Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2U4g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000004","TimeStamp":"2020-10-19T13:42:07.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:07.115 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.118 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4b718491a03945d4b1ffd2f730dd711b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"4b718491a03945d4b1ffd2f730dd711b","code_challenge":"TZTb4nsmXEQXAbvZIPKSAhwrUNflXnUOUw4UPWsJZgs","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:07.141 +03:30 [DBG] Token request success.
2020-10-19 17:12:07.142 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:07.144 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:07.179 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:07.182 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:07.186 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:07.188 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:07.198 +03:30 [DBG] Start authorize request
2020-10-19 17:12:07.203 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:07.206 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:07.206 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RRU4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000015","TimeStamp":"2020-10-19T13:42:07.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:07.208 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:07.223 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.226 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"4b718491a03945d4b1ffd2f730dd711b","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:07.227 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.230 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:07.240 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:07.245 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:07.246 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:07.266 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7a797f39b9e949e4bce73a9462c64cb6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"7a797f39b9e949e4bce73a9462c64cb6","code_challenge":"ol3wwi7OehzUXIpPaoIZEvOrVuu6VxNuucu9kJV-P-0","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:07.268 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Lxow","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2U4g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U9:00000002","TimeStamp":"2020-10-19T13:42:07.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:07.314 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:07.338 +03:30 [DBG] Token request success.
2020-10-19 17:12:07.355 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:07.357 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HBs4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U6:00000001","TimeStamp":"2020-10-19T13:42:07.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:07.372 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"7a797f39b9e949e4bce73a9462c64cb6","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:07.778 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:07.790 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:07.795 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:07.832 +03:30 [DBG] Start authorize request
2020-10-19 17:12:07.848 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:07.854 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:07.859 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:07.874 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:07.884 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:07.896 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"322a16f296014ef5971f4f430f58c9f2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"322a16f296014ef5971f4f430f58c9f2","code_challenge":"lQi1I01Y51xZ6_E79bMLeibm2g0iQ9fzRgH6Ze92Ebw","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:07.972 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:07.980 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:07.991 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:08.012 +03:30 [DBG] Start authorize request
2020-10-19 17:12:08.014 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:08.019 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:08.039 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:08.041 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:08.052 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:08.054 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****iQJ8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U6:00000002","TimeStamp":"2020-10-19T13:42:08.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:08.055 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:08.064 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:08.076 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"9bc3e477aa5f4e2f8cabc942182e3a6a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"9bc3e477aa5f4e2f8cabc942182e3a6a","code_challenge":"lIPck-Wj6DbfFtpndERGfLqhNHv8UorsyLOMWO43vAo","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:08.190 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"322a16f296014ef5971f4f430f58c9f2","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:08.197 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:08.217 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:08.221 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****-pk4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000016","TimeStamp":"2020-10-19T13:42:08.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:08.243 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"9bc3e477aa5f4e2f8cabc942182e3a6a","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:08.815 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:08.822 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:08.834 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:08.840 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:08.850 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:08.855 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:08.861 +03:30 [DBG] Start discovery request
2020-10-19 17:12:08.869 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:08.876 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:08.905 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:08.911 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:08.915 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:08.922 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:08.933 +03:30 [DBG] Start discovery request
2020-10-19 17:12:08.942 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:08.948 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:08.957 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:08.961 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:09.016 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:09.023 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:09.027 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:09.028 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:09.031 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:09.033 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:09.038 +03:30 [DBG] Start token request.
2020-10-19 17:12:09.049 +03:30 [DBG] Start client validation
2020-10-19 17:12:09.057 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:09.059 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:09.060 +03:30 [DBG] client id without secret found
2020-10-19 17:12:09.061 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:09.064 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:09.067 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:09.069 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:09.070 +03:30 [DBG] Client validation success
2020-10-19 17:12:09.072 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000006","TimeStamp":"2020-10-19T13:42:09.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:09.077 +03:30 [DBG] Start token request validation
2020-10-19 17:12:09.079 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:09.103 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:09.139 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:09.142 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dbuoRhDKVw3ZRdo-JpCPjlb9JE0bu6safmD4Yc8RRU4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"dbuoRhDKVw3ZRdo-JpCPjlb9JE0bu6safmD4Yc8RRU4","redirect_uri":"http://localhost:8081/callback","code_verifier":"64db293782754aa196ff77582c188731899ee874db03449fb4cd5f3b0b60c06f318dfce9ed3647b8891eed6a1bf6cc6e","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:09.151 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:09.153 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:09.154 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:09.202 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:09.206 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:09.208 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:09.214 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nwhw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ouGQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U8:00000006","TimeStamp":"2020-10-19T13:42:09.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:09.228 +03:30 [DBG] Token request success.
2020-10-19 17:12:09.907 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:09.913 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:09.922 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:09.930 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:09.942 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:09.953 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:09.962 +03:30 [DBG] Start discovery request
2020-10-19 17:12:09.976 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:09.983 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:09.989 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:09.993 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:10.004 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:10.015 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:10.028 +03:30 [DBG] Start discovery request
2020-10-19 17:12:10.093 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-19 17:12:10.101 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:10.103 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:10.105 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-19 17:12:10.107 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-19 17:12:10.119 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-19 17:12:10.122 +03:30 [DBG] Start token request.
2020-10-19 17:12:10.124 +03:30 [DBG] Start client validation
2020-10-19 17:12:10.126 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-19 17:12:10.129 +03:30 [DBG] Start parsing for secret in post body
2020-10-19 17:12:10.132 +03:30 [DBG] client id without secret found
2020-10-19 17:12:10.133 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-19 17:12:10.135 +03:30 [DBG] Secret id found: frontend
2020-10-19 17:12:10.140 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:10.149 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-19 17:12:10.151 +03:30 [DBG] Client validation success
2020-10-19 17:12:10.153 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10U9:00000005","TimeStamp":"2020-10-19T13:42:10.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-19 17:12:10.161 +03:30 [DBG] Start token request validation
2020-10-19 17:12:10.162 +03:30 [DBG] Start validation of authorization code token request
2020-10-19 17:12:10.165 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-19 17:12:10.188 +03:30 [DBG] Validation of authorization code token request success
2020-10-19 17:12:10.189 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"y3_f1Xh5sFkslLw3_c_TWXW9kU_0hnpdyvtxDFjHBs4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"y3_f1Xh5sFkslLw3_c_TWXW9kU_0hnpdyvtxDFjHBs4","redirect_uri":"http://localhost:8081/callback","code_verifier":"8dbd81c7954445c0822ede9d01b9a7580f70cb723354415ea572739ff9e56fcb853742069c7e4415b61b6f5e9a9101af","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-19 17:12:10.199 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:10.208 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-19 17:12:10.209 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:10.268 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:10.272 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-19 17:12:10.275 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-19 17:12:10.282 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****UR2w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****L-Ig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U9:00000005","TimeStamp":"2020-10-19T13:42:10.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:10.300 +03:30 [DBG] Token request success.
2020-10-19 17:12:10.371 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-19 17:12:10.375 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-19 17:12:10.377 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-19 17:12:10.380 +03:30 [DBG] Rendering check session result
2020-10-19 17:12:11.317 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:11.322 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:11.344 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:11.352 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:11.361 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:11.363 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:11.367 +03:30 [DBG] Start discovery request
2020-10-19 17:12:11.376 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:11.381 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:11.385 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:11.387 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:11.390 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:11.394 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:11.399 +03:30 [DBG] Start discovery request
2020-10-19 17:12:11.684 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-19 17:12:11.690 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-19 17:12:11.694 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-19 17:12:11.697 +03:30 [DBG] Start authorize request
2020-10-19 17:12:11.700 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-19 17:12:11.703 +03:30 [DBG] Start authorize request protocol validation
2020-10-19 17:12:11.706 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-19 17:12:11.722 +03:30 [DBG] Checking for PKCE parameters
2020-10-19 17:12:11.728 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-19 17:12:11.736 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"1ec75a84dc8748378d5ab3a7a7be71cb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"1ec75a84dc8748378d5ab3a7a7be71cb","code_challenge":"SJ2R8QzA9f5VkV4uOW0Xfg8wgUejLSqoTyVmM6qJO1U","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-19 17:12:11.872 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-19 17:12:11.877 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-19 17:12:11.880 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ap90","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10U3:00000019","TimeStamp":"2020-10-19T13:42:11.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-19 17:12:11.893 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"1ec75a84dc8748378d5ab3a7a7be71cb","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-19 17:12:12.663 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:12.672 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:12.680 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:12.686 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:12.689 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:12.698 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:12.715 +03:30 [DBG] Start discovery request
2020-10-19 17:12:12.722 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-19 17:12:12.726 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-19 17:12:12.736 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-19 17:12:12.740 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-19 17:12:12.748 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-19 17:12:12.751 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-19 17:12:12.755 +03:30 [DBG] Start discovery request
2020-10-20 22:54:18.405 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:18.428 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:18.448 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:18.456 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:18.474 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:18.476 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:18.481 +03:30 [DBG] Start discovery request
2020-10-20 22:54:21.096 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:21.098 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:21.100 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:21.101 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:21.255 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:21.260 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:21.265 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:21.267 +03:30 [DBG] Start authorize request
2020-10-20 22:54:21.270 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:21.272 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:21.284 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:21.288 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:21.290 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:21.294 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4a887ad7295b462898cd1f13ed7f1e45","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"4a887ad7295b462898cd1f13ed7f1e45","code_challenge":"qYLxslM9lHK-nYLbNajcttYgE-I88Ho9ePtSj_Jh4dY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:21.333 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:21.337 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:21.341 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****tYdI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:00000002","TimeStamp":"2020-10-20T19:24:21.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:21.351 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"4a887ad7295b462898cd1f13ed7f1e45","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:23.166 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:23.170 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:23.172 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:23.174 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:23.182 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:23.189 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:23.194 +03:30 [DBG] Start discovery request
2020-10-20 22:54:23.258 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:23.276 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:23.286 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:23.292 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:23.297 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:23.299 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:23.309 +03:30 [DBG] Start discovery request
2020-10-20 22:54:23.541 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:23.553 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:23.553 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:23.565 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:23.572 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:23.579 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:23.580 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:23.590 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:23.595 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:23.597 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:23.600 +03:30 [DBG] Start token request.
2020-10-20 22:54:23.602 +03:30 [DBG] Start client validation
2020-10-20 22:54:23.608 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:23.609 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:23.612 +03:30 [DBG] client id without secret found
2020-10-20 22:54:23.616 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:23.620 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:23.628 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:23.632 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:23.633 +03:30 [DBG] Client validation success
2020-10-20 22:54:23.638 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000002","TimeStamp":"2020-10-20T19:24:23.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:23.644 +03:30 [DBG] Start token request validation
2020-10-20 22:54:23.646 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:23.650 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:23.677 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:23.686 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"gFeyPzvBqLAF-EL4cTe6S2j0ZXN_nZXpRITvNzotYdI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"gFeyPzvBqLAF-EL4cTe6S2j0ZXN_nZXpRITvNzotYdI","redirect_uri":"http://localhost:8081/callback","code_verifier":"f1ae834db6ec4ae08e0cfefcac9054784ed03f5be5414231aa76eef6ef9ceaf63b2f1592da1f44c3aa963261f970d393","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:23.710 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:23.718 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:23.720 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:23.835 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:23.844 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:23.846 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:23.852 +03:30 [DBG] Start authorize request
2020-10-20 22:54:23.854 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:23.856 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:23.857 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:23.858 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:23.859 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:23.861 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:23.861 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:23.863 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:23.868 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c8ee8f9c0f574614ab77c10da09bdb89","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"c8ee8f9c0f574614ab77c10da09bdb89","code_challenge":"O_Qe3osfuJcSTDPUBzI0WFgqZqYsicDMUYqRsNL66no","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:23.873 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****y7tg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****17tw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000002","TimeStamp":"2020-10-20T19:24:23.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:23.902 +03:30 [DBG] Token request success.
2020-10-20 22:54:23.902 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:23.909 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:23.916 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qfsU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:00000004","TimeStamp":"2020-10-20T19:24:23.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:23.934 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"c8ee8f9c0f574614ab77c10da09bdb89","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:24.236 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:24.240 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:24.242 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:24.246 +03:30 [DBG] Start discovery request
2020-10-20 22:54:24.390 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:24.402 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:24.411 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:24.419 +03:30 [DBG] Start authorize request
2020-10-20 22:54:24.421 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:24.440 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:24.447 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:24.450 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:24.453 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-20 22:54:24.453 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:24.460 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-20 22:54:24.461 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"51b06dc797e8477cb5f99c07b3d2ffd0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"51b06dc797e8477cb5f99c07b3d2ffd0","code_challenge":"fjsNKmKe0Cvn7uF98XLul_pdZ7qloxBkKl2fAYNbG2Y","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:24.465 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-20 22:54:24.489 +03:30 [DBG] Start key discovery request
2020-10-20 22:54:24.525 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:24.529 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:24.533 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****W7hY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:00000005","TimeStamp":"2020-10-20T19:24:24.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:24.553 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"51b06dc797e8477cb5f99c07b3d2ffd0","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:25.232 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:25.243 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:25.246 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:25.248 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:25.253 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:25.264 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:25.270 +03:30 [DBG] Start discovery request
2020-10-20 22:54:25.276 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:25.280 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:25.285 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:25.287 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:25.292 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:25.295 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:25.298 +03:30 [DBG] Start discovery request
2020-10-20 22:54:25.467 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:25.471 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:25.473 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:25.475 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:25.519 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:25.528 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:25.536 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:25.540 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:25.544 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:25.549 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:25.559 +03:30 [DBG] Start token request.
2020-10-20 22:54:25.561 +03:30 [DBG] Start client validation
2020-10-20 22:54:25.567 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:25.571 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:25.573 +03:30 [DBG] client id without secret found
2020-10-20 22:54:25.576 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:25.581 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:25.584 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:25.595 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:25.597 +03:30 [DBG] Client validation success
2020-10-20 22:54:25.601 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UA:00000004","TimeStamp":"2020-10-20T19:24:25.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:25.609 +03:30 [DBG] Start token request validation
2020-10-20 22:54:25.619 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:25.624 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:25.650 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:25.653 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"RzCdm63eDnAhS2CZodEwdtzTYFUD9noQYGKBr1CqfsU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"RzCdm63eDnAhS2CZodEwdtzTYFUD9noQYGKBr1CqfsU","redirect_uri":"http://localhost:8081/callback","code_verifier":"cd3d2969cbcc4f8d87def4202978f2c00b82fa54279241029a91cfb7c10876746107023f94294859ba5b4e6b14cc45fa","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:25.698 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:25.704 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:25.709 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:25.770 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:25.774 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:25.779 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:25.791 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****I-qg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****F8Tg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UA:00000004","TimeStamp":"2020-10-20T19:24:25.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:25.800 +03:30 [DBG] Token request success.
2020-10-20 22:54:26.353 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:26.363 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:26.387 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:26.388 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:26.396 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:26.399 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:26.404 +03:30 [DBG] Start discovery request
2020-10-20 22:54:26.413 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:26.416 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:26.421 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:26.422 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:26.425 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:26.427 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:26.430 +03:30 [DBG] Start discovery request
2020-10-20 22:54:26.726 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:26.728 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:26.731 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:26.735 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:26.800 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:26.811 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:26.815 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:26.818 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:26.820 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:26.823 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:26.825 +03:30 [DBG] Start authorize request
2020-10-20 22:54:26.829 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:26.829 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:26.836 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:26.841 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:26.844 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:26.846 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:26.847 +03:30 [DBG] Start token request.
2020-10-20 22:54:26.848 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:26.849 +03:30 [DBG] Start client validation
2020-10-20 22:54:26.850 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:26.850 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:26.851 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:26.853 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c55aed7b7e17470d80929c686e695b7a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"c55aed7b7e17470d80929c686e695b7a","code_challenge":"Q47L-6V-rq6kqsSogy1O7q3hN8yi843tBBm6D-L6_GY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:26.854 +03:30 [DBG] client id without secret found
2020-10-20 22:54:26.889 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:26.897 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:26.901 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:26.904 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:26.906 +03:30 [DBG] Client validation success
2020-10-20 22:54:26.907 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:26.909 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000005","TimeStamp":"2020-10-20T19:24:26.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:26.911 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:26.921 +03:30 [DBG] Start token request validation
2020-10-20 22:54:26.924 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****oiqE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:00000008","TimeStamp":"2020-10-20T19:24:26.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:26.924 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:26.953 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"c55aed7b7e17470d80929c686e695b7a","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:26.954 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:26.976 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:26.986 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"hQOyWuoDVZEmB6Ld7xxnF3ZRXCtHT2HarUBPKFAW7hY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"hQOyWuoDVZEmB6Ld7xxnF3ZRXCtHT2HarUBPKFAW7hY","redirect_uri":"http://localhost:8081/callback","code_verifier":"6d1f7dd4a2ff4fbc970079dae1e396d19a875240ec314cb38eb49212d39682d41631bbab52fd4c888221ec54d1025a30","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:27.024 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:27.032 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:27.045 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:27.078 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:27.096 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:27.127 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:27.127 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:27.134 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:27.154 +03:30 [DBG] Start authorize request
2020-10-20 22:54:27.156 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:27.158 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:27.166 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:27.166 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****IFbg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PFYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000005","TimeStamp":"2020-10-20T19:24:27.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:27.168 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:27.191 +03:30 [DBG] Token request success.
2020-10-20 22:54:27.194 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:27.195 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:27.197 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"99dfc2c132ed42a783bef407883688d3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"99dfc2c132ed42a783bef407883688d3","code_challenge":"jjxhok5Sa5SavVBS-qkb17XM19wiQrk6ZEta0R9JRtE","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:27.252 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:27.255 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:27.259 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qx5U","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:00000009","TimeStamp":"2020-10-20T19:24:27.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:27.274 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"99dfc2c132ed42a783bef407883688d3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:27.620 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:27.624 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:27.625 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:27.628 +03:30 [DBG] Start authorize request
2020-10-20 22:54:27.630 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:27.632 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:27.633 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:27.637 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:27.639 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:27.641 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"ceafe3a0636f4359953aa97819d04f46","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"ceafe3a0636f4359953aa97819d04f46","code_challenge":"4PC_AwsQmfPKWmxrA741gLUrLG_EqgQMzI6VJHQMN3I","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:27.664 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-20 22:54:27.671 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-20 22:54:27.672 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-20 22:54:27.675 +03:30 [DBG] Start authorize request
2020-10-20 22:54:27.678 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:27.686 +03:30 [DBG] Start authorize request protocol validation
2020-10-20 22:54:27.688 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:27.691 +03:30 [DBG] Checking for PKCE parameters
2020-10-20 22:54:27.698 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-20 22:54:27.701 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","AllowedRedirectUris":["http://localhost:8081","http://localhost:8081/callback","http://localhost:8081/silent","http://localhost:8081/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"a7fbfe68c66843e98755f25542f944e3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"ZWSjTtqCeGZHzCAOYWt8Ew","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid","state":"a7fbfe68c66843e98755f25542f944e3","code_challenge":"cSPeKHOOUar7gNObYa1qqgRyM1O2pSFTeLT9O0zUTyY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-20 22:54:27.701 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:27.703 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:27.725 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****L0TY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UB:0000000A","TimeStamp":"2020-10-20T19:24:27.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:27.743 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2020-10-20 22:54:27.759 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"ceafe3a0636f4359953aa97819d04f46","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:27.761 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-20 22:54:27.772 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8081/callback","Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****5Lqk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UE:00000001","TimeStamp":"2020-10-20T19:24:27.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:27.790 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ClientId":"frontend","RedirectUri":"http://localhost:8081/callback","State":"a7fbfe68c66843e98755f25542f944e3","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-20 22:54:28.384 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:28.387 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:28.390 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:28.401 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:28.403 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:28.411 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:28.414 +03:30 [DBG] Start discovery request
2020-10-20 22:54:28.419 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:28.425 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:28.460 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:28.470 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:28.494 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:28.574 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:28.588 +03:30 [DBG] Start discovery request
2020-10-20 22:54:28.652 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:28.656 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:28.659 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:28.662 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:28.679 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:28.681 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:28.683 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:28.685 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:28.688 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:28.692 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:28.695 +03:30 [DBG] Start token request.
2020-10-20 22:54:28.696 +03:30 [DBG] Start client validation
2020-10-20 22:54:28.698 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:28.699 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:28.706 +03:30 [DBG] client id without secret found
2020-10-20 22:54:28.706 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:28.710 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:28.712 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:28.714 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:28.717 +03:30 [DBG] Client validation success
2020-10-20 22:54:28.718 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UA:00000007","TimeStamp":"2020-10-20T19:24:28.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:28.726 +03:30 [DBG] Start token request validation
2020-10-20 22:54:28.728 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:28.730 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:28.746 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:28.749 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"_V2ly-TvwqDqIlOkUW6MBSiNKIkEl09jnt1Ug6qoiqE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"_V2ly-TvwqDqIlOkUW6MBSiNKIkEl09jnt1Ug6qoiqE","redirect_uri":"http://localhost:8081/callback","code_verifier":"b3feb06e057343b8be9e363c454873ae78c1cf20dea14882bad0a7fee3080b7a5d0959005e3a47459754b94db75ca35b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:28.759 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:28.761 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:28.762 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:28.822 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:28.826 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:28.827 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:28.836 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****rjdw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3z9g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UA:00000007","TimeStamp":"2020-10-20T19:24:28.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:28.843 +03:30 [DBG] Token request success.
2020-10-20 22:54:29.280 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:29.285 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:29.300 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:29.304 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:29.311 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:29.313 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:29.326 +03:30 [DBG] Start discovery request
2020-10-20 22:54:29.338 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:29.341 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:29.345 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:29.347 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:29.348 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:29.351 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:29.355 +03:30 [DBG] Start discovery request
2020-10-20 22:54:29.867 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:29.873 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:29.875 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:29.878 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:29.881 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:29.884 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:29.885 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:29.889 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:29.891 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:29.892 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:29.897 +03:30 [DBG] Start token request.
2020-10-20 22:54:29.908 +03:30 [DBG] Start client validation
2020-10-20 22:54:29.913 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:29.914 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:29.916 +03:30 [DBG] client id without secret found
2020-10-20 22:54:29.921 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:29.922 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:29.924 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:29.927 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:29.928 +03:30 [DBG] Client validation success
2020-10-20 22:54:29.931 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000008","TimeStamp":"2020-10-20T19:24:29.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:29.943 +03:30 [DBG] Start token request validation
2020-10-20 22:54:29.943 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:29.945 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:29.961 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:29.963 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"FKy1D-iUedmA2VAsmE7Mu3YwKSNPE0n5Ki-dzQEqx5U","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"FKy1D-iUedmA2VAsmE7Mu3YwKSNPE0n5Ki-dzQEqx5U","redirect_uri":"http://localhost:8081/callback","code_verifier":"28935c0221134744ab3546ded4cd45598e2ebd6d39b44dd69d3d0a3a3f04c2e4f6f3a88f43d14acba68ead31a2e360a8","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:29.975 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:29.978 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:29.980 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:30.038 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:30.040 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:30.044 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:30.057 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****5Peg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****c0zA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UC:00000008","TimeStamp":"2020-10-20T19:24:30.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:30.073 +03:30 [DBG] Token request success.
2020-10-20 22:54:30.992 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:31.015 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:31.022 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:31.028 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:31.030 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:31.033 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:31.038 +03:30 [DBG] Start discovery request
2020-10-20 22:54:31.050 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:31.055 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:31.057 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:31.058 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:31.060 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:31.061 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:31.067 +03:30 [DBG] Start discovery request
2020-10-20 22:54:31.964 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:31.968 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:31.974 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:31.990 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:31.994 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:31.999 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:32.028 +03:30 [DBG] Start discovery request
2020-10-20 22:54:32.034 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8081
2020-10-20 22:54:32.039 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:32.055 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:32.058 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-20 22:54:32.061 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-20 22:54:32.063 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-20 22:54:32.066 +03:30 [DBG] Start discovery request
2020-10-20 22:54:32.537 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-20 22:54:32.540 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-20 22:54:32.543 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-20 22:54:32.545 +03:30 [DBG] Rendering check session result
2020-10-20 22:54:32.558 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8081
2020-10-20 22:54:32.563 +03:30 [DBG] Client list checked and origin: http://localhost:8081 is allowed
2020-10-20 22:54:32.566 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8081
2020-10-20 22:54:32.568 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-20 22:54:32.571 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-20 22:54:32.575 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-20 22:54:32.577 +03:30 [DBG] Start token request.
2020-10-20 22:54:32.579 +03:30 [DBG] Start client validation
2020-10-20 22:54:32.582 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-20 22:54:32.587 +03:30 [DBG] Start parsing for secret in post body
2020-10-20 22:54:32.590 +03:30 [DBG] client id without secret found
2020-10-20 22:54:32.592 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-20 22:54:32.596 +03:30 [DBG] Secret id found: frontend
2020-10-20 22:54:32.598 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:32.602 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-20 22:54:32.603 +03:30 [DBG] Client validation success
2020-10-20 22:54:32.606 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3K6FVI10UC:0000000B","TimeStamp":"2020-10-20T19:24:32.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-20 22:54:32.616 +03:30 [DBG] Start token request validation
2020-10-20 22:54:32.627 +03:30 [DBG] Start validation of authorization code token request
2020-10-20 22:54:32.640 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-20 22:54:32.685 +03:30 [DBG] Validation of authorization code token request success
2020-10-20 22:54:32.693 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ZhEGOvx090N_iWIDB0pW50QGtcIq8v07yjWlLJ7L0TY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"ZhEGOvx090N_iWIDB0pW50QGtcIq8v07yjWlLJ7L0TY","redirect_uri":"http://localhost:8081/callback","code_verifier":"7aaa0c1ce193442bb59e2a43f227a338e275f2d43aab43e28a1a7e68305a919d8062dd48e8074e20851946a7f6bf312a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-20 22:54:32.711 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:32.717 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-20 22:54:32.720 +03:30 [DBG] Getting claims for access token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-20 22:54:32.763 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-20 22:54:32.765 +03:30 [DBG] Getting claims for identity token for subject: cba605e6-8b4c-4370-bc29-582ed37a1d64 and client: frontend
2020-10-20 22:54:32.768 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-20 22:54:32.774 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****s47g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BY3g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3K6FVI10UC:0000000B","TimeStamp":"2020-10-20T19:24:32.0000000Z","ProcessId":16752,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-20 22:54:32.787 +03:30 [DBG] Token request success.
2020-10-21 14:15:35.865 +03:30 [INF] Starting host...
2020-10-21 14:15:36.814 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-21 14:15:36.854 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-21 14:15:36.876 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-21 14:15:36.877 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-21 14:15:36.878 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-21 14:15:36.879 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-21 14:15:36.880 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-21 14:15:36.880 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-21 14:15:37.939 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv4 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions.'.
2020-10-21 14:15:37.948 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv6 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions.'.
2020-10-21 14:15:37.996 +03:30 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address http://localhost:5000.
 ---> System.AggregateException: One or more errors occurred. (An attempt was made to access a socket in a way forbidden by its access permissions.) (An attempt was made to access a socket in a way forbidden by its access permissions.)
 ---> System.Net.Sockets.SocketException (10013): An attempt was made to access a socket in a way forbidden by its access permissions.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   --- End of inner exception stack trace ---
 ---> (Inner Exception #1) System.Net.Sockets.SocketException (10013): An attempt was made to access a socket in a way forbidden by its access permissions.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)<---

   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2020-10-21 14:15:38.735 +03:30 [FTL] Host terminated unexpectedly.
System.IO.IOException: Failed to bind to address http://localhost:5000.
 ---> System.AggregateException: One or more errors occurred. (An attempt was made to access a socket in a way forbidden by its access permissions.) (An attempt was made to access a socket in a way forbidden by its access permissions.)
 ---> System.Net.Sockets.SocketException (10013): An attempt was made to access a socket in a way forbidden by its access permissions.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   --- End of inner exception stack trace ---
 ---> (Inner Exception #1) System.Net.Sockets.SocketException (10013): An attempt was made to access a socket in a way forbidden by its access permissions.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)<---

   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 59
2020-10-21 14:16:31.297 +03:30 [INF] Starting host...
2020-10-21 14:16:32.070 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-21 14:16:32.103 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-21 14:16:32.120 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-21 14:16:32.121 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-21 14:16:32.123 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-21 14:16:32.123 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-21 14:16:32.124 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-21 14:16:32.125 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-21 14:16:34.743 +03:30 [DBG] Login Url: /Account/Login
2020-10-21 14:16:34.752 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-21 14:16:34.761 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-21 14:16:34.784 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-21 14:16:34.805 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-21 14:16:34.807 +03:30 [DBG] Error Url: /home/error
2020-10-21 14:16:34.808 +03:30 [DBG] Error Id Parameter: errorId
2020-10-21 14:55:36.586 +03:30 [INF] Starting host...
2020-10-21 14:55:37.367 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-21 14:55:37.417 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-21 14:55:37.436 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-21 14:55:37.476 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-21 14:55:37.488 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-21 14:55:37.490 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-21 14:55:37.491 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-21 14:55:37.492 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-21 14:55:42.562 +03:30 [DBG] Login Url: /Account/Login
2020-10-21 14:55:42.574 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-21 14:55:42.580 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-21 14:55:42.581 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-21 14:55:42.582 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-21 14:55:42.583 +03:30 [DBG] Error Url: /home/error
2020-10-21 14:55:42.584 +03:30 [DBG] Error Id Parameter: errorId
2020-10-21 14:57:15.328 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8085
2020-10-21 14:57:15.367 +03:30 [DBG] Client list checked and origin: http://localhost:8085 is allowed
2020-10-21 14:57:15.382 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8085
2020-10-21 14:57:15.394 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-21 14:57:15.437 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-21 14:57:15.446 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-21 14:57:15.452 +03:30 [DBG] Start discovery request
2020-10-21 14:57:15.970 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-21 14:57:15.994 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-21 14:57:15.997 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-21 14:57:16.041 +03:30 [DBG] Start authorize request
2020-10-21 14:57:16.054 +03:30 [DBG] User in authorize request: cba605e6-8b4c-4370-bc29-582ed37a1d64
2020-10-21 14:57:16.068 +03:30 [DBG] Start authorize request protocol validation
2020-10-21 14:57:16.095 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-21 14:57:16.176 +03:30 [ERR] Invalid redirect_uri: http://localhost:8081/callback
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8085","http://localhost:8085/callback","http://localhost:8085/silent","http://localhost:8085/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"26709ed2e64e40089bdb70bfcfc5fa33","code_challenge":"4lh5b3y1e3HrXRAe9hbMB_ImUHQ8ayoEJVZhA-ARMEA","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-21 14:57:16.336 +03:30 [ERR] Request validation failed
2020-10-21 14:57:16.340 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8085","http://localhost:8085/callback","http://localhost:8085/silent","http://localhost:8085/popup"],"SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"26709ed2e64e40089bdb70bfcfc5fa33","code_challenge":"4lh5b3y1e3HrXRAe9hbMB_ImUHQ8ayoEJVZhA-ARMEA","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-21 14:57:16.449 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"cba605e6-8b4c-4370-bc29-582ed37a1d64","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3LMG4N1T27:00000002","TimeStamp":"2020-10-21T11:27:16.0000000Z","ProcessId":17580,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-24 11:37:36.576 +03:30 [INF] Starting host...
2020-10-24 11:37:37.304 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-24 11:37:37.350 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-24 11:37:37.371 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-24 11:37:37.375 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-24 11:37:37.376 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-24 11:37:37.377 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-24 11:37:37.379 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-24 11:37:37.386 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-24 11:37:41.286 +03:30 [DBG] Login Url: /Account/Login
2020-10-24 11:37:41.295 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-24 11:37:41.307 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-24 11:37:41.309 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-24 11:37:41.311 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-24 11:37:41.320 +03:30 [DBG] Error Url: /home/error
2020-10-24 11:37:41.340 +03:30 [DBG] Error Id Parameter: errorId
2020-10-24 11:39:15.509 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-24 11:39:15.558 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is not allowed
2020-10-24 11:39:15.604 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:8080
2020-10-24 11:39:15.632 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-24 11:39:16.303 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-24 11:39:16.348 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-24 11:39:16.408 +03:30 [DBG] Start discovery request
2020-10-24 13:24:19.514 +03:30 [INF] Starting host...
2020-10-24 13:24:20.153 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-24 13:24:20.184 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-24 13:24:20.196 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-24 13:24:20.201 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-24 13:24:20.202 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-24 13:24:20.203 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-24 13:24:20.208 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-24 13:24:20.213 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-24 13:24:23.184 +03:30 [DBG] Login Url: /Account/Login
2020-10-24 13:24:23.191 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-24 13:24:23.197 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-24 13:24:23.210 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-24 13:24:23.268 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-24 13:24:23.275 +03:30 [DBG] Error Url: /home/error
2020-10-24 13:24:23.287 +03:30 [DBG] Error Id Parameter: errorId
2020-10-24 13:27:08.970 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-24 13:27:08.994 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-24 13:27:09.003 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-24 13:27:09.028 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-24 13:27:09.765 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-24 13:27:09.781 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-24 13:27:09.793 +03:30 [DBG] Start discovery request
2020-10-24 13:27:10.311 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-24 13:27:10.337 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-24 13:27:10.352 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-24 13:27:10.376 +03:30 [DBG] Start authorize request
2020-10-24 13:27:10.401 +03:30 [DBG] No user present in authorize request
2020-10-24 13:27:10.406 +03:30 [DBG] Start authorize request protocol validation
2020-10-24 13:27:10.449 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-24 13:27:10.527 +03:30 [ERR] Invalid redirect_uri: http://localhost:8081/callback
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"de4d80fe9f0e478da1f43991276355ca","code_challenge":"NmftLZRUXjZZiWNHl3aMvQlqKuJN-7sUNeSZ2kxq8yE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-24 13:27:10.663 +03:30 [ERR] Request validation failed
2020-10-24 13:27:10.691 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"de4d80fe9f0e478da1f43991276355ca","code_challenge":"NmftLZRUXjZZiWNHl3aMvQlqKuJN-7sUNeSZ2kxq8yE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-24 13:27:10.967 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3O0B3VM8JF:00000003","TimeStamp":"2020-10-24T09:57:10.0000000Z","ProcessId":22048,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-24 13:29:52.723 +03:30 [INF] Starting host...
2020-10-24 13:29:53.359 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-24 13:29:53.393 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-24 13:29:53.432 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-24 13:29:53.453 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-24 13:29:53.504 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-24 13:29:53.516 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-24 13:29:53.519 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-24 13:29:53.530 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-24 13:29:55.562 +03:30 [DBG] Login Url: /Account/Login
2020-10-24 13:29:55.568 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-24 13:29:55.572 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-24 13:29:55.574 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-24 13:29:55.576 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-24 13:29:55.596 +03:30 [DBG] Error Url: /home/error
2020-10-24 13:29:55.610 +03:30 [DBG] Error Id Parameter: errorId
2020-10-24 13:30:26.047 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-24 13:30:26.091 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-24 13:30:26.149 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-24 13:30:26.210 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-24 13:30:26.676 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-24 13:30:26.682 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-24 13:30:26.688 +03:30 [DBG] Start discovery request
2020-10-24 13:30:28.736 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-24 13:30:28.760 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-24 13:30:28.763 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-24 13:30:28.770 +03:30 [DBG] Start authorize request
2020-10-24 13:30:28.795 +03:30 [DBG] No user present in authorize request
2020-10-24 13:30:28.799 +03:30 [DBG] Start authorize request protocol validation
2020-10-24 13:30:28.826 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-24 13:30:28.880 +03:30 [ERR] Invalid redirect_uri: http://localhost:8081/callback
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"b6354c17dc4c49dfa4b920f5875dac3f","code_challenge":"n24sy3ey1Iq4dmY1eKZ42UEY34WTXkFVvmO8aQ1TWW4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-24 13:30:29.092 +03:30 [ERR] Request validation failed
2020-10-24 13:30:29.095 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8081/callback","response_type":"code","scope":"openid profile backend","state":"b6354c17dc4c49dfa4b920f5875dac3f","code_challenge":"n24sy3ey1Iq4dmY1eKZ42UEY34WTXkFVvmO8aQ1TWW4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-24 13:30:29.199 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3O0E7AOC40:00000002","TimeStamp":"2020-10-24T10:00:29.0000000Z","ProcessId":21812,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-25 12:25:09.490 +03:30 [INF] Starting host...
2020-10-25 12:25:10.500 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 12:25:10.539 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 12:25:10.591 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 12:25:10.593 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 12:25:10.596 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 12:25:10.598 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 12:25:10.601 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 12:25:10.602 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 12:25:14.749 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 12:25:14.757 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 12:25:14.764 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 12:25:14.775 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 12:25:14.801 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 12:25:14.839 +03:30 [DBG] Error Url: /home/error
2020-10-25 12:25:14.852 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 12:26:35.149 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 14:01:21.675 +03:30 [INF] Seeding database...
2020-10-25 14:01:23.916 +03:30 [FTL] Host terminated unexpectedly.
System.ArgumentException: Keyword not supported: 'server=192.168.168.21;database'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass18_0.<Exists>b__0(DateTime giveUp)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c__DisplayClass12_0`2.<Execute>b__0(DbContext c, TState s)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation, Func`2 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists(Boolean retryOnNotExists)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(DatabaseFacade databaseFacade)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 37
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 14:06:16.878 +03:30 [INF] Seeding database...
2020-10-25 14:06:19.507 +03:30 [FTL] Host terminated unexpectedly.
Microsoft.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at Microsoft.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass18_0.<Exists>b__0(DateTime giveUp)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c__DisplayClass12_0`2.<Execute>b__0(DbContext c, TState s)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation, Func`2 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists(Boolean retryOnNotExists)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(DatabaseFacade databaseFacade)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 37
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
ClientConnectionId:0619eafd-f291-441e-9079-5856c8b8aba4
Error Number:18456,State:1,Class:14
2020-10-25 14:35:17.100 +03:30 [INF] Seeding database...
2020-10-25 14:35:21.659 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:bb18cda0-840a-4ac4-95b8-e4cd0d2a10b9
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 60
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 14:39:17.460 +03:30 [INF] Seeding database...
2020-10-25 14:39:21.394 +03:30 [DBG] alice already exists
2020-10-25 14:39:22.047 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:6f0df52b-6c30-443e-b00b-8509de6dc2bb
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 95
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 14:40:01.499 +03:30 [INF] Starting host...
2020-10-25 14:40:02.372 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 14:40:02.414 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 14:40:02.445 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 14:40:02.447 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 14:40:02.448 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 14:40:02.449 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 14:40:02.449 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 14:40:02.450 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 14:40:06.286 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 14:40:06.293 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 14:40:06.303 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 14:40:06.304 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 14:40:06.306 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 14:40:06.314 +03:30 [DBG] Error Url: /home/error
2020-10-25 14:40:06.318 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 14:40:20.978 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 14:40:24.464 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 14:40:29.429 +03:30 [DBG] Augmenting SignInContext
2020-10-25 14:40:29.432 +03:30 [DBG] Adding idp claim with value: local
2020-10-25 14:40:29.434 +03:30 [DBG] Adding auth_time claim with value: 1603624229
2020-10-25 14:40:29.477 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-25 14:40:29.569 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"8a0c3574-38be-45e5-bfc7-2e0085fa93be","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3OQQ2Q0CID:00000004","TimeStamp":"2020-10-25T11:10:29.0000000Z","ProcessId":22272,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-25 15:51:42.450 +03:30 [INF] Starting host...
2020-10-25 15:51:43.108 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 15:51:43.154 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 15:51:43.181 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 15:51:43.185 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 15:51:43.186 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 15:51:43.186 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 15:51:43.188 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 15:51:43.188 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 15:51:48.258 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 15:51:48.266 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 15:51:48.272 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 15:51:48.277 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 15:51:48.281 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 15:51:48.289 +03:30 [DBG] Error Url: /home/error
2020-10-25 15:51:48.290 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 15:51:56.246 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-25 15:51:56.287 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-25 15:51:56.295 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-25 15:51:56.311 +03:30 [INF] Identity.Application was not authenticated. Failure message: No principal.
2020-10-25 15:51:56.332 +03:30 [INF] Identity.Application was not authenticated. Failure message: No principal.
2020-10-25 15:54:46.757 +03:30 [INF] Starting host...
2020-10-25 15:54:47.492 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 15:54:47.523 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 15:54:47.537 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 15:54:47.538 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 15:54:47.540 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 15:54:47.543 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 15:54:47.544 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 15:54:47.544 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 15:54:51.199 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 15:54:51.208 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 15:54:51.211 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 15:54:51.236 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 15:54:51.244 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 15:54:51.256 +03:30 [DBG] Error Url: /home/error
2020-10-25 15:54:51.260 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 15:55:06.739 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 15:55:10.506 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 15:55:14.577 +03:30 [ERR] An error occurred using the connection to database 'IdentityProvider' on server '(localdb)\mssqllocaldb'.
2020-10-25 15:55:14.807 +03:30 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityProvider.Data.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:80b42cce-4563-4a66-aea8-07193ff29173
Error Number:4060,State:1,Class:11
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:80b42cce-4563-4a66-aea8-07193ff29173
Error Number:4060,State:1,Class:11
2020-10-25 16:13:47.455 +03:30 [INF] Seeding database...
2020-10-25 16:14:06.649 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:2ae42579-a0de-4f7e-9d32-1b1266555c56
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 60
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 16:38:19.026 +03:30 [INF] Seeding database...
2020-10-25 16:38:27.873 +03:30 [DBG] alice already exists
2020-10-25 16:38:28.604 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:547f1a9a-c1ba-4d4f-ae18-c8ee24345bea
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 95
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 16:39:59.783 +03:30 [INF] Seeding database...
2020-10-25 16:40:04.536 +03:30 [DBG] alice already exists
2020-10-25 16:40:04.549 +03:30 [DBG] bob already exists
2020-10-25 16:40:04.559 +03:30 [INF] Done seeding database.
2020-10-25 16:41:29.510 +03:30 [INF] Starting host...
2020-10-25 16:41:30.304 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 16:41:30.341 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 16:41:30.359 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 16:41:30.359 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 16:41:30.361 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 16:41:30.362 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 16:41:30.363 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 16:41:30.379 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 16:41:35.104 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 16:41:35.109 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 16:41:35.113 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 16:41:35.124 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 16:41:35.128 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 16:41:35.129 +03:30 [DBG] Error Url: /home/error
2020-10-25 16:41:35.130 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 16:48:15.636 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 16:49:14.513 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 16:58:57.311 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 16:58:59.321 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 17:00:26.443 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 17:01:51.022 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 17:04:19.724 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 17:51:39.485 +03:30 [INF] Starting host...
2020-10-25 17:51:40.070 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 17:51:40.101 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 17:51:40.113 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 17:51:40.114 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 17:51:40.114 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 17:51:40.115 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 17:51:40.122 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 17:51:40.123 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 17:51:44.630 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 17:51:44.634 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 17:51:44.641 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 17:51:44.644 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 17:51:44.645 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 17:51:44.654 +03:30 [DBG] Error Url: /home/error
2020-10-25 17:51:44.656 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 17:53:39.726 +03:30 [INF] Starting host...
2020-10-25 17:53:40.432 +03:30 [INF] Starting IdentityServer4 version 3.0.1.0
2020-10-25 17:53:40.464 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 17:53:40.481 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 17:53:40.482 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 17:53:40.483 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 17:53:40.483 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 17:53:40.484 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 17:53:40.485 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 17:53:45.846 +03:30 [DBG] Login Url: /Account/Login
2020-10-25 17:53:45.852 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 17:53:45.856 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-25 17:53:45.862 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-25 17:53:45.862 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 17:53:45.867 +03:30 [DBG] Error Url: /home/error
2020-10-25 17:53:45.882 +03:30 [DBG] Error Id Parameter: errorId
2020-10-25 17:54:03.375 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 17:54:06.826 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 17:54:11.028 +03:30 [ERR] An error occurred using the connection to database 'IdentityProvider' on server '(localdb)\mssqllocaldb'.
2020-10-25 17:54:11.247 +03:30 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityProvider.Data.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:b05a692a-cf19-4776-b4d3-e3fb906b9dc7
Error Number:4060,State:1,Class:11
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:b05a692a-cf19-4776-b4d3-e3fb906b9dc7
Error Number:4060,State:1,Class:11
2020-10-25 17:55:57.945 +03:30 [INF] Seeding database...
2020-10-25 17:56:21.520 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7cd2e298-bb36-4080-a72d-dbbccc081916
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 80
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 18:06:04.133 +03:30 [INF] Seeding database...
2020-10-25 18:06:10.478 +03:30 [DBG] alice already exists
2020-10-25 18:06:11.122 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:3efa605e-613d-46a2-9ca9-88124f9d1bdc
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 121
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 18:12:35.001 +03:30 [INF] Seeding database...
2020-10-25 18:12:37.443 +03:30 [FTL] Host terminated unexpectedly.
System.ArgumentException: Keyword not supported: 'initial catalog'.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateReadOnlyConnection()
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(DatabaseFacade databaseFacade)
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 37
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 18:20:35.051 +03:30 [INF] Seeding database...
2020-10-25 18:20:44.102 +03:30 [DBG] alice already exists
2020-10-25 18:20:44.108 +03:30 [DBG] bob already exists
2020-10-25 18:20:44.159 +03:30 [INF] Done seeding database.
2020-10-25 18:28:49.617 +03:30 [INF] Seeding database...
2020-10-25 18:29:05.409 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:12255084-2faa-442f-aaab-31e21a15b26f
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 76
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 18:59:26.079 +03:30 [INF] Seeding database...
2020-10-25 19:03:17.307 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:98385ee8-4d25-4d9d-b654-cb21e412df09
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 76
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 20:05:01.539 +03:30 [INF] Seeding database...
2020-10-25 20:41:54.844 +03:30 [INF] Seeding database...
2020-10-25 20:44:46.837 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:94994ce5-468c-45bc-a82e-aae660cc4a70
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 76
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 22:02:30.757 +03:30 [INF] Seeding database...
2020-10-25 22:04:36.601 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:a1b6bf17-c7dc-4db2-ac7c-b7e772c77839
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 78
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 22:05:16.901 +03:30 [INF] Seeding database...
2020-10-25 22:05:40.657 +03:30 [DBG] alice already exists
2020-10-25 22:06:18.853 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:323a78af-877d-43f1-a984-2f7d4ecc45ba
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 119
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 22:07:04.238 +03:30 [INF] Seeding database...
2020-10-25 22:08:37.630 +03:30 [DBG] alice already exists
2020-10-25 22:09:53.016 +03:30 [INF] Seeding database...
2020-10-25 22:14:43.261 +03:30 [INF] Seeding database...
2020-10-25 22:22:51.666 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetUserClaims'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:ff4012ac-2abf-44a2-bd87-7af7a0e70870
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 78
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 23:24:58.069 +03:30 [INF] Starting host...
2020-10-25 23:24:58.744 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-25 23:24:58.789 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-25 23:24:58.805 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 23:24:58.806 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 23:24:58.806 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 23:24:58.807 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 23:24:58.808 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 23:24:58.809 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 23:25:22.800 +03:30 [ERR] An error occurred using the connection to database 'IdentityProvider' on server '(localdb)\mssqllocaldb'.
2020-10-25 23:25:22.982 +03:30 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityProvider.Data.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:34fe3853-703c-48d8-9e1a-68a8bbb8bb0c
Error Number:4060,State:1,Class:11
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityProvider" requested by the login. The login failed.
Login failed for user 'SOSHYANT\m.salimian'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:34fe3853-703c-48d8-9e1a-68a8bbb8bb0c
Error Number:4060,State:1,Class:11
2020-10-25 23:31:34.505 +03:30 [INF] Seeding database...
2020-10-25 23:33:41.381 +03:30 [FTL] Host terminated unexpectedly.
System.AggregateException: One or more errors occurred. (An error occurred while updating the entries. See the inner exception for details.)
 ---> Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'Id', table 'IdentityProvider.dbo.AspNetRoleClaims'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:c4155d88-32d7-4381-b2c8-67a5b2ab2420
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SaveChanges(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(TRole role, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(TRole role)
   at Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(TRole role, Claim claim)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.Wait()
   at IdentityProvider.SeedData.EnsureSeedData(String connectionString) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\SeedData.cs:line 56
   at IdentityProvider.Program.Main(String[] args) in D:\Projects\Behcet\HomeCleaning\IdentityProvider\Program.cs:line 53
2020-10-25 23:41:31.930 +03:30 [INF] Seeding database...
2020-10-25 23:43:25.214 +03:30 [DBG] alice created
2020-10-25 23:43:32.650 +03:30 [DBG] bob created
2020-10-25 23:43:32.662 +03:30 [INF] Done seeding database.
2020-10-25 23:51:27.634 +03:30 [INF] Seeding database...
2020-10-25 23:51:58.248 +03:30 [DBG] alice created
2020-10-25 23:51:59.784 +03:30 [DBG] bob created
2020-10-25 23:51:59.809 +03:30 [INF] Done seeding database.
2020-10-26 00:04:19.153 +03:30 [INF] Seeding database...
2020-10-26 00:05:50.392 +03:30 [DBG] alice created
2020-10-26 00:06:27.114 +03:30 [DBG] bob created
2020-10-26 00:06:27.132 +03:30 [INF] Done seeding database.
2020-10-26 00:10:57.086 +03:30 [INF] Starting host...
2020-10-26 00:10:57.754 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-26 00:10:57.810 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-26 00:10:57.826 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-26 00:10:57.827 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-26 00:10:57.828 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-26 00:10:57.829 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-26 00:10:57.829 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-26 00:10:57.830 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-26 00:11:08.654 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-26 00:11:08.658 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-26 00:11:08.679 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-26 00:11:08.685 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-26 00:11:08.686 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-26 00:11:08.687 +03:30 [DBG] Error Url: /home/error
2020-10-26 00:11:08.689 +03:30 [DBG] Error Id Parameter: errorId
2020-10-26 00:20:53.744 +03:30 [INF] Starting host...
2020-10-26 00:20:54.316 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-26 00:20:54.357 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-26 00:20:54.373 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-26 00:20:54.374 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-26 00:20:54.376 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-26 00:20:54.376 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-26 00:20:54.380 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-26 00:20:54.381 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-26 00:21:00.684 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-26 00:21:00.693 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-26 00:21:00.722 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-26 00:21:00.725 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-26 00:21:00.730 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-26 00:21:00.731 +03:30 [DBG] Error Url: /home/error
2020-10-26 00:21:00.755 +03:30 [DBG] Error Id Parameter: errorId
2020-10-26 20:20:48.111 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-26 21:46:06.612 +03:30 [INF] Starting host...
2020-10-26 21:46:07.455 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-26 21:46:07.495 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-26 21:46:07.514 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-26 21:46:07.519 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-26 21:46:07.527 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-26 21:46:07.527 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-26 21:46:07.528 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-26 21:46:07.531 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-26 21:46:11.345 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-26 21:46:11.360 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-26 21:46:11.375 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-26 21:46:11.377 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-26 21:46:11.391 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-26 21:46:11.394 +03:30 [DBG] Error Url: /home/error
2020-10-26 21:46:11.401 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 00:46:30.748 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 00:46:30.775 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 00:46:30.804 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 00:46:30.939 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 00:46:31.721 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 00:46:31.761 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 00:46:31.843 +03:30 [DBG] Start discovery request
2020-10-27 00:46:32.195 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 00:46:32.260 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 00:46:32.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 00:46:32.502 +03:30 [DBG] Start authorize request
2020-10-27 00:46:32.595 +03:30 [DBG] No user present in authorize request
2020-10-27 00:46:32.854 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 00:46:32.908 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 00:46:32.978 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 00:46:33.043 +03:30 [ERR] Scope backend not found in store.
2020-10-27 00:46:33.078 +03:30 [ERR] Request validation failed
2020-10-27 00:46:33.145 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"271ad5e141394d649024c718edd0b194","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"271ad5e141394d649024c718edd0b194","code_challenge":"mIC1WRHmlaV3u_FhtIwmVz-K6pNyLDfgybU0dSrAPJ8","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 00:46:33.411 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"invalid_scope","ErrorDescription":"Invalid scope","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3PRCRBMRMC:00000001","TimeStamp":"2020-10-26T21:16:33.0000000Z","ProcessId":19436,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-27 01:03:03.123 +03:30 [INF] Starting host...
2020-10-27 01:03:03.910 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:03:03.941 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:03:03.955 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:03:03.956 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:03:03.957 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:03:03.957 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:03:03.958 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:03:03.959 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:03:06.672 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-27 01:03:06.680 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:03:06.709 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-27 01:03:06.729 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:03:06.738 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:03:06.744 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:03:06.754 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:04:55.000 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:04:55.024 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:04:55.057 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:04:55.107 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:04:55.662 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:04:55.699 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:04:55.735 +03:30 [DBG] Start discovery request
2020-10-27 01:04:56.172 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:04:56.193 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:04:56.232 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:04:56.279 +03:30 [DBG] Start authorize request
2020-10-27 01:04:56.334 +03:30 [DBG] No user present in authorize request
2020-10-27 01:04:56.385 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:04:56.430 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:04:56.472 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:04:56.558 +03:30 [ERR] Scope backend not found in store.
2020-10-27 01:04:56.596 +03:30 [ERR] Request validation failed
2020-10-27 01:04:56.732 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"d1cdfc87f3bf4f6f9bf571c46e0ced06","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"d1cdfc87f3bf4f6f9bf571c46e0ced06","code_challenge":"MJQ7u8YMLsaLeBeFA1mpAnm-r52LWOedmXnQWscv-tw","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:04:57.617 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"invalid_scope","ErrorDescription":"Invalid scope","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3PUQSOL9PA:00000003","TimeStamp":"2020-10-26T21:34:57.0000000Z","ProcessId":29428,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-27 01:19:55.898 +03:30 [INF] Starting host...
2020-10-27 01:19:56.667 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:19:56.724 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:19:56.749 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:19:56.750 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:19:56.751 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:19:56.752 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:19:56.753 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:19:56.755 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:19:59.272 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-27 01:19:59.280 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:19:59.285 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-27 01:19:59.286 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:19:59.287 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:19:59.289 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:19:59.291 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:20:36.597 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:20:36.632 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:20:36.663 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:20:36.704 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:20:37.309 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:20:37.385 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:20:37.452 +03:30 [DBG] Start discovery request
2020-10-27 01:20:39.539 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:20:39.591 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:20:39.611 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:20:39.681 +03:30 [DBG] Start authorize request
2020-10-27 01:20:39.718 +03:30 [DBG] No user present in authorize request
2020-10-27 01:20:39.770 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:20:39.808 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:20:39.875 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:20:39.937 +03:30 [ERR] Scope backend not found in store.
2020-10-27 01:20:39.948 +03:30 [ERR] Request validation failed
2020-10-27 01:20:39.991 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"1e276551d7a74535a0991f3f28fae775","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"1e276551d7a74535a0991f3f28fae775","code_challenge":"RF6Dc6VMfJVou6hRdJuOywFLdXBoQ4b_T7RqtdwruOo","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:20:40.387 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":null,"Scopes":"openid profile backend","GrantType":"authorization_code","Error":"invalid_scope","ErrorDescription":"Invalid scope","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HM3PV4AFVJRC:00000002","TimeStamp":"2020-10-26T21:50:40.0000000Z","ProcessId":27868,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-10-27 01:23:49.547 +03:30 [INF] Starting host...
2020-10-27 01:23:50.143 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:23:50.187 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:23:50.204 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:23:50.205 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:23:50.211 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:23:50.213 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:23:50.215 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:23:50.217 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:23:53.347 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-27 01:23:53.355 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:23:53.363 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-27 01:23:53.364 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:23:53.366 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:23:53.367 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:23:53.369 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:24:32.696 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:24:32.723 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:24:32.780 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:24:32.851 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:24:33.465 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:24:33.475 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:24:33.548 +03:30 [DBG] Start discovery request
2020-10-27 01:24:33.924 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:24:33.972 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:24:34.013 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:24:34.093 +03:30 [DBG] Start authorize request
2020-10-27 01:24:34.150 +03:30 [DBG] No user present in authorize request
2020-10-27 01:24:34.210 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:24:34.261 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:24:34.372 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:24:34.476 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:24:34.557 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"5d638427e4e8484dae7e0f27fbd9952a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"5d638427e4e8484dae7e0f27fbd9952a","code_challenge":"NlGSxdfF9_hIu9NytqDd5wgxGn66DM43WA5nn_TlUmk","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:24:34.910 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:25:44.336 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-27 01:30:42.065 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:30:42.091 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:30:42.174 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:30:42.193 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:30:42.236 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:30:42.284 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:30:42.355 +03:30 [DBG] Start discovery request
2020-10-27 01:30:42.450 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:30:42.481 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:30:42.547 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:30:42.607 +03:30 [DBG] Start authorize request
2020-10-27 01:30:42.628 +03:30 [DBG] No user present in authorize request
2020-10-27 01:30:42.640 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:30:42.664 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:30:42.729 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:30:42.765 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:30:42.822 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"3cb05b5f7fcd43a89f0d98a0496ace49","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"3cb05b5f7fcd43a89f0d98a0496ace49","code_challenge":"2JwvzrWrShs5NS0ijWT9kdfuQqWY2RTqvByQ_C0beEI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:30:43.171 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:33:05.601 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:33:05.614 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:33:05.646 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:33:05.684 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:33:05.782 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:33:05.799 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:33:05.861 +03:30 [DBG] Start discovery request
2020-10-27 01:33:06.080 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:33:06.157 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:33:06.168 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:33:06.214 +03:30 [DBG] Start authorize request
2020-10-27 01:33:06.218 +03:30 [DBG] No user present in authorize request
2020-10-27 01:33:06.276 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:33:06.284 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:33:06.338 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:33:06.370 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:33:06.418 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"ba4ccae389824d9c9b7641b628a4b239","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"ba4ccae389824d9c9b7641b628a4b239","code_challenge":"xk2zgXTJSGUmXFvPEEFvJ_Ppgn8pkS5x760UeToI5fc","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:33:06.788 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:35:59.509 +03:30 [INF] Starting host...
2020-10-27 01:36:00.323 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:36:00.356 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:36:00.407 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:36:00.412 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:36:00.414 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:36:00.416 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:36:00.419 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:36:00.421 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:36:03.683 +03:30 [DBG] Login Url: /Identity/Account/Login
2020-10-27 01:36:03.690 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:36:03.712 +03:30 [DBG] Logout Url: /Identity/Account/Logout
2020-10-27 01:36:03.723 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:36:03.754 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:36:03.769 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:36:03.789 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:36:10.554 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-27 01:36:53.246 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-27 01:45:32.137 +03:30 [INF] Starting host...
2020-10-27 01:45:32.992 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:45:33.086 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:45:33.169 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:45:33.175 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:45:33.183 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:45:33.189 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:45:33.199 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:45:33.203 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:45:35.862 +03:30 [DBG] Login Url: /Account/Login
2020-10-27 01:45:35.876 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:45:35.895 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-27 01:45:35.924 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:45:35.948 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:45:35.966 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:45:35.986 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:45:46.270 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-27 01:46:41.662 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:46:41.704 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:46:41.757 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:46:41.795 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:46:41.905 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:46:41.966 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:46:42.036 +03:30 [DBG] Start discovery request
2020-10-27 01:46:42.406 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:46:42.458 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:46:42.509 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:46:42.563 +03:30 [DBG] Start authorize request
2020-10-27 01:46:42.588 +03:30 [DBG] No user present in authorize request
2020-10-27 01:46:42.652 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:46:42.699 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:42.790 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:46:42.865 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:46:42.938 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8e34a7bb80d448389aeb586bb824f0d9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"8e34a7bb80d448389aeb586bb824f0d9","code_challenge":"rVkULt6ef1wz8RZzyUNYQN1GN_EmhmEku_k6YZlv18k","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:46:43.480 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:46:43.617 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:46:43.626 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:43.735 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:46:43.861 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:46:44.013 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:48.925 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-27 01:46:49.083 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:46:49.087 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:49.176 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:46:49.200 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:46:55.322 +03:30 [DBG] Augmenting SignInContext
2020-10-27 01:46:55.334 +03:30 [DBG] Adding idp claim with value: local
2020-10-27 01:46:55.447 +03:30 [DBG] Adding auth_time claim with value: 1603750615
2020-10-27 01:46:55.498 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-27 01:46:55.671 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3PVIKCCCC5:00000006","TimeStamp":"2020-10-26T22:16:55.0000000Z","ProcessId":31408,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-27 01:46:56.101 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-27 01:46:56.167 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-27 01:46:56.291 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-27 01:46:56.395 +03:30 [DBG] Start authorize callback request
2020-10-27 01:46:56.511 +03:30 [DBG] No user present in authorize request
2020-10-27 01:46:56.556 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:46:56.600 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:56.643 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:46:56.685 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:46:56.721 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"8e34a7bb80d448389aeb586bb824f0d9","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"8e34a7bb80d448389aeb586bb824f0d9","code_challenge":"rVkULt6ef1wz8RZzyUNYQN1GN_EmhmEku_k6YZlv18k","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:46:57.198 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:46:57.289 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:46:57.304 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:46:57.380 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:46:57.468 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:46:57.530 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:48:09.725 +03:30 [INF] Starting host...
2020-10-27 01:48:10.464 +03:30 [INF] Starting IdentityServer4 version 4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f
2020-10-27 01:48:10.502 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-10-27 01:48:10.552 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-27 01:48:10.556 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-27 01:48:10.561 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-27 01:48:10.564 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-27 01:48:10.569 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-27 01:48:10.572 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-27 01:48:14.983 +03:30 [DBG] Login Url: /Account/Login
2020-10-27 01:48:14.991 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-27 01:48:15.010 +03:30 [DBG] Logout Url: /Account/Logout
2020-10-27 01:48:15.014 +03:30 [DBG] ConsentUrl Url: /consent
2020-10-27 01:48:15.025 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2020-10-27 01:48:15.061 +03:30 [DBG] Error Url: /home/error
2020-10-27 01:48:15.088 +03:30 [DBG] Error Id Parameter: errorId
2020-10-27 01:50:09.884 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:50:09.910 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:09.931 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:09.957 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:50:10.481 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:50:10.492 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:50:10.551 +03:30 [DBG] Start discovery request
2020-10-27 01:50:11.218 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:50:11.332 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:50:11.442 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:50:11.517 +03:30 [DBG] Start authorize request
2020-10-27 01:50:11.570 +03:30 [DBG] No user present in authorize request
2020-10-27 01:50:11.636 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:11.686 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:11.734 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:11.824 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:11.893 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"dc5fcaf4f1934df8865cdbd8c067108f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"dc5fcaf4f1934df8865cdbd8c067108f","code_challenge":"nXPCYxvQytDEwTmbbbqTOahP2wQIpj6DCs-ok1KXJp4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:50:12.389 +03:30 [INF] Showing login: User is not authenticated
2020-10-27 01:50:12.588 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:12.590 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:12.672 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:12.728 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:12.791 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:16.649 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-27 01:50:16.836 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:16.854 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:17.071 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:17.191 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:23.439 +03:30 [DBG] Augmenting SignInContext
2020-10-27 01:50:23.445 +03:30 [DBG] Adding idp claim with value: local
2020-10-27 01:50:23.504 +03:30 [DBG] Adding auth_time claim with value: 1603750823
2020-10-27 01:50:23.613 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-27 01:50:23.671 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","DisplayName":"alice","Endpoint":"UI","ClientId":"frontend","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HM3PVK3AHBK2:00000004","TimeStamp":"2020-10-26T22:20:23.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-27 01:50:23.935 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-10-27 01:50:23.950 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-10-27 01:50:23.992 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-10-27 01:50:24.049 +03:30 [DBG] Start authorize callback request
2020-10-27 01:50:24.086 +03:30 [DBG] User in authorize request: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5
2020-10-27 01:50:24.135 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:24.158 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:24.197 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:24.215 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:24.256 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile backend","State":"dc5fcaf4f1934df8865cdbd8c067108f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"","MaxAge":null,"LoginHint":null,"SessionId":"5C31526E840E6C3D0524F6CF01002CBD","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid profile backend","state":"dc5fcaf4f1934df8865cdbd8c067108f","code_challenge":"nXPCYxvQytDEwTmbbbqTOahP2wQIpj6DCs-ok1KXJp4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:50:24.885 +03:30 [DBG] Client is configured to not require consent, no consent is required
2020-10-27 01:50:24.896 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-27 01:50:25.106 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****F849","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3PVK3AHBK2:00000005","TimeStamp":"2020-10-26T22:20:25.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-27 01:50:25.259 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"dc5fcaf4f1934df8865cdbd8c067108f","Scope":"openid profile backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-27 01:50:25.393 +03:30 [DBG] Augmenting SignInContext
2020-10-27 01:50:25.402 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-27 01:50:29.773 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:50:29.816 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:29.877 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:29.914 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:50:29.940 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:50:29.997 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:50:30.049 +03:30 [DBG] Start discovery request
2020-10-27 01:50:30.095 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2020-10-27 01:50:30.102 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:30.150 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:30.195 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-27 01:50:30.320 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-27 01:50:30.355 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-27 01:50:30.446 +03:30 [DBG] Start token request.
2020-10-27 01:50:30.500 +03:30 [DBG] Start client validation
2020-10-27 01:50:30.551 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-27 01:50:30.586 +03:30 [DBG] Start parsing for secret in post body
2020-10-27 01:50:30.619 +03:30 [DBG] client id without secret found
2020-10-27 01:50:30.670 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-27 01:50:30.701 +03:30 [DBG] Secret id found: frontend
2020-10-27 01:50:30.757 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:30.865 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-27 01:50:30.920 +03:30 [DBG] Client validation success
2020-10-27 01:50:30.965 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3PVK3AHBK4:00000003","TimeStamp":"2020-10-26T22:20:30.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-27 01:50:31.206 +03:30 [DBG] Start token request validation
2020-10-27 01:50:31.302 +03:30 [DBG] Start validation of authorization code token request
2020-10-27 01:50:31.438 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-27 01:50:31.486 +03:30 [DBG] Validation of authorization code token request success
2020-10-27 01:50:31.504 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"****F849","RefreshToken":"********","UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"5B90208297E3574BA326A9D1EFE702FD5C38EF114D9B9453D1D75615FE6EF849","redirect_uri":"http://localhost:8080/callback","code_verifier":"38838374f30b4e3f88f0e8da7c9bf19639c34c8104834cd8b63c57c1443a0ef3be7dcaf68c714581befdd9039c607161","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-27 01:50:31.593 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:31.629 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-27 01:50:31.633 +03:30 [DBG] Getting claims for access token for subject: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5
2020-10-27 01:50:32.273 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:32.358 +03:30 [DBG] Getting claims for identity token for subject: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5 and client: frontend
2020-10-27 01:50:32.451 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-27 01:50:32.525 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","Scopes":"openid profile backend","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****n0SQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aUCQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3PVK3AHBK4:00000003","TimeStamp":"2020-10-26T22:20:32.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-27 01:50:32.800 +03:30 [DBG] Token request success.
2020-10-27 01:50:32.931 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2020-10-27 01:50:32.945 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:33.039 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:33.088 +03:30 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:8080
2020-10-27 01:50:33.134 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:33.218 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:33.270 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-10-27 01:50:33.363 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-10-27 01:50:33.447 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-10-27 01:50:33.506 +03:30 [DBG] Start userinfo request
2020-10-27 01:50:33.559 +03:30 [DBG] Bearer token found in header
2020-10-27 01:50:33.885 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:33.914 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:34.129 +03:30 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-10-27 01:50:34.145 +03:30 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":"466CC5252CB841E3808804C497000668","Claims":{"nbf":1603750831,"exp":1603754431,"iss":"http://localhost:5000","aud":"http://localhost:5000/resources","client_id":"frontend","sub":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","auth_time":1603750823,"idp":"local","role":"customer","jti":"466CC5252CB841E3808804C497000668","sid":"5C31526E840E6C3D0524F6CF01002CBD","iat":1603750831,"scope":["openid","profile","backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-10-27 01:50:34.402 +03:30 [DBG] Creating userinfo response
2020-10-27 01:50:34.439 +03:30 [DBG] Scopes in access token: openid profile backend
2020-10-27 01:50:34.487 +03:30 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-10-27 01:50:34.582 +03:30 [INF] Profile service returned the following claim types: sub name given_name family_name website preferred_username role
2020-10-27 01:50:34.623 +03:30 [DBG] End userinfo request
2020-10-27 01:50:34.826 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-27 01:50:34.844 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-27 01:50:34.979 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-27 01:50:35.067 +03:30 [DBG] Rendering check session result
2020-10-27 01:50:35.541 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:50:35.552 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:50:35.587 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:50:35.648 +03:30 [DBG] Start authorize request
2020-10-27 01:50:35.671 +03:30 [DBG] User in authorize request: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5
2020-10-27 01:50:35.709 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:50:35.709 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:35.744 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:50:35.748 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:35.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:50:35.796 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:35.812 +03:30 [DBG] Start discovery request
2020-10-27 01:50:35.849 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:35.891 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"274243598971487ba89cd576674afb39","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"5C31526E840E6C3D0524F6CF01002CBD","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"274243598971487ba89cd576674afb39","code_challenge":"op_AqOkoT_haUjLsuHI71MT5RDjMG33pIg79tRKcEhY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:50:36.225 +03:30 [DBG] Client is configured to not require consent, no consent is required
2020-10-27 01:50:36.232 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-27 01:50:36.296 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****4FEC","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3PVK3AHBK2:00000007","TimeStamp":"2020-10-26T22:20:36.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-27 01:50:36.581 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"274243598971487ba89cd576674afb39","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-27 01:50:36.667 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-27 01:50:36.753 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-27 01:50:36.768 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-27 01:50:36.826 +03:30 [DBG] Start key discovery request
2020-10-27 01:50:40.136 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:50:40.174 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:40.215 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:40.234 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:50:40.271 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:50:40.330 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:50:40.383 +03:30 [DBG] Start discovery request
2020-10-27 01:50:40.428 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2020-10-27 01:50:40.446 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:40.495 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:40.499 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-27 01:50:40.517 +03:30 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-10-27 01:50:40.555 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-27 01:50:40.610 +03:30 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-10-27 01:50:40.655 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-27 01:50:40.697 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-10-27 01:50:40.743 +03:30 [DBG] Start discovery request
2020-10-27 01:50:40.774 +03:30 [DBG] Rendering check session result
2020-10-27 01:50:40.832 +03:30 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2020-10-27 01:50:40.888 +03:30 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2020-10-27 01:50:40.935 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2020-10-27 01:50:40.956 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-27 01:50:41.067 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-27 01:50:41.108 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-27 01:50:41.149 +03:30 [DBG] Start token request.
2020-10-27 01:50:41.161 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-10-27 01:50:41.190 +03:30 [DBG] Start client validation
2020-10-27 01:50:41.260 +03:30 [DBG] Start parsing Basic Authentication secret
2020-10-27 01:50:41.273 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-10-27 01:50:41.289 +03:30 [DBG] Start parsing for secret in post body
2020-10-27 01:50:41.350 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-10-27 01:50:41.408 +03:30 [DBG] client id without secret found
2020-10-27 01:50:41.417 +03:30 [DBG] Start authorize request
2020-10-27 01:50:41.453 +03:30 [DBG] Parser found secret: PostBodySecretParser
2020-10-27 01:50:41.504 +03:30 [DBG] User in authorize request: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5
2020-10-27 01:50:41.533 +03:30 [DBG] Secret id found: frontend
2020-10-27 01:50:41.584 +03:30 [DBG] Start authorize request protocol validation
2020-10-27 01:50:41.635 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:41.666 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:41.707 +03:30 [DBG] Public Client - skipping secret validation success
2020-10-27 01:50:41.743 +03:30 [DBG] Checking for PKCE parameters
2020-10-27 01:50:41.772 +03:30 [DBG] Client validation success
2020-10-27 01:50:41.808 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-10-27 01:50:41.870 +03:30 [INF] {"ClientId":"frontend","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HM3PVK3AHBK7:00000002","TimeStamp":"2020-10-26T22:20:41.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-27 01:50:41.934 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080","http://localhost:8080/callback","http://localhost:8080/silent","http://localhost:8080/popup"],"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"864f28ab413648cd9e205dfa29d73bfa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":"none","MaxAge":null,"LoginHint":null,"SessionId":"5C31526E840E6C3D0524F6CF01002CBD","Raw":{"client_id":"frontend","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"864f28ab413648cd9e205dfa29d73bfa","code_challenge":"-9jqFaHEen2DepmJJuXdO-igavglMzhUp6oDgCW19pY","code_challenge_method":"S256","prompt":"none","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-10-27 01:50:42.090 +03:30 [DBG] Start token request validation
2020-10-27 01:50:42.481 +03:30 [DBG] Start validation of authorization code token request
2020-10-27 01:50:42.505 +03:30 [DBG] Client is configured to not require consent, no consent is required
2020-10-27 01:50:42.534 +03:30 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-10-27 01:50:42.561 +03:30 [DBG] Creating Authorization Code Flow response.
2020-10-27 01:50:42.611 +03:30 [DBG] Validation of authorization code token request success
2020-10-27 01:50:42.617 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":"http://localhost:8080/callback","Endpoint":"Authorize","SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****835C","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3PVK3AHBK2:00000009","TimeStamp":"2020-10-26T22:20:42.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-27 01:50:42.643 +03:30 [INF] Token request validation success, {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"****4FEC","RefreshToken":"********","UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"frontend","code":"4224A5E10E305DB859D0B0811D64ED1A307F01313FAEB1B42AD07571876A4FEC","redirect_uri":"http://localhost:8080/callback","code_verifier":"de73c360c42245dda5ba342d058aff7dc7c528449fd1400cbb68750568c8617a61e2150d47d64135b4e7cf5fa3684714","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-10-27 01:50:42.861 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","ClientId":"frontend","RedirectUri":"http://localhost:8080/callback","State":"864f28ab413648cd9e205dfa29d73bfa","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-10-27 01:50:43.053 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:43.236 +03:30 [DBG] Getting claims for access token for client: frontend
2020-10-27 01:50:43.258 +03:30 [DBG] Getting claims for access token for subject: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5
2020-10-27 01:50:43.437 +03:30 [DBG] client configuration validation for client frontend succeeded.
2020-10-27 01:50:43.442 +03:30 [DBG] Getting claims for identity token for subject: faa5d9b6-17a3-4226-8c9b-95f2607c6ce5 and client: frontend
2020-10-27 01:50:43.449 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-10-27 01:50:43.518 +03:30 [INF] {"ClientId":"frontend","ClientName":"Home Cleaning JavaScript Client","RedirectUri":null,"Endpoint":"Token","SubjectId":"faa5d9b6-17a3-4226-8c9b-95f2607c6ce5","Scopes":"openid","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****gSvg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****SrQw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HM3PVK3AHBK7:00000002","TimeStamp":"2020-10-26T22:20:43.0000000Z","ProcessId":16148,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-27 01:50:43.690 +03:30 [DBG] Token request success.
